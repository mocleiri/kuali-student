<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.kuali.student.enroll</groupId>
        <artifactId>ks-enroll</artifactId>
        <version>0.2.0-rice242upgrade-build-42</version>
    </parent>
    <artifactId>ks-enroll-impl</artifactId>
    <name>KS Enroll Impl</name>
    <properties>
        <gmaven.stubs.phase>generate-resources</gmaven.stubs.phase>
        <gmaven.compile.phase>compile</gmaven.compile.phase>
        <gmaven.test.compile.phase>test-compile</gmaven.test.compile.phase>
    </properties>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--
                Setting reuseForks to false. Multiple dao tests using Spring
                junit class runner doesn't play nice with each other
                -->
                <configuration>
                    <reuseForks>false</reuseForks>
                    <argLine>-Xms256m -Xmx512m</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.kuali.student.api</groupId>
            <artifactId>ks-enroll-api</artifactId>
            <version>${ks.api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.api</groupId>
            <artifactId>ks-core-api</artifactId>
            <version>${ks.api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.core</groupId>
            <artifactId>ks-core-krms</artifactId>
            <version>${ks.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.core</groupId>
            <artifactId>ks-common-impl</artifactId>
            <version>${ks.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.core</groupId>
            <artifactId>ks-core-impl</artifactId>
            <version>${ks.core.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!-- Add to be able to use LuDao on CluService as per discussion with Kamal -->
        <dependency>
            <groupId>org.kuali.student.core</groupId>
            <artifactId>ks-common-test</artifactId>
            <version>${ks.core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.core</groupId>
            <artifactId>ks-hibernate</artifactId>
            <version>${ks.core.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.lum</groupId>
            <artifactId>ks-lum-impl</artifactId>
            <version>${ks.lum.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.student.lum</groupId>
            <artifactId>ks-lum-impl</artifactId>
            <version>${ks.lum.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-it-internal-tools</artifactId>
        </dependency>
        <dependency>
            <groupId>antlr</groupId>
            <artifactId>antlr</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>backport-util-concurrent</groupId>
            <artifactId>backport-util-concurrent</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- TODO: remove this, only used for the rice integration test for now -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>${oracle.artifactId}</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- This is needed for JSON in KSB REST Services-->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.9.13</version>
        </dependency>
        <!-- Rabbit MQ is being evaluated as an MQ solution-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- needed for CR status to client communication -->
        <!--<dependency>-->
        <!--<groupId>org.springframework</groupId>-->
        <!--<artifactId>spring-messaging</artifactId>-->
        <!--<version>${spring.version}</version>-->
        <!--</dependency>-->
        <!-- needed to support jms (Caused by: java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler) -->
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-spring</artifactId>
            <version>3.16</version>
        </dependency>
        <!-- end -->
        <!-- ActiveMQ -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <version>${activemq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <version>${activemq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-spring</artifactId>
            <version>5.9.0</version>
        </dependency>
        <!-- for HttpRequest in JAXRS services -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
            <version>5.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>2.12.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jaxb</artifactId>
            <version>2.12.2</version>
        </dependency>
        <!-- Spring Batch dependencies -->
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-core</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-infrastructure</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-test</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
    </dependencies>
</project>
