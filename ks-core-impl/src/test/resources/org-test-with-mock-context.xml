<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
    <context:annotation-config/>

    <import resource="classpath:META-INF/default-property-config-context-test.xml"/>
    <import resource="classpath:search-test-context.xml"/>

    <bean id="systemPropertyConfigurer"
          class="org.kuali.student.common.util.SystemPropertyConfigurer">
        <property name="properties" value="${propertiesPrefix.systemProperties}"/>
    </bean>

    <bean id="AtomikosTxMgr"
          class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close" depends-on="systemPropertyConfigurer" autowire-candidate="false" autowire="no">
        <property name="forceShutdown" value="true" />
        <property name="startupTransactionService" value="true" />
        <property name="transactionTimeout" value="60" />
    </bean>

    <bean id="AtomikosUsrTx"
          class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="systemPropertyConfigurer"></bean>

    <bean id="JtaTxManager"
          class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="systemPropertyConfigurer" autowire-candidate="false" autowire="no">
        <property name="transactionManager" ref="AtomikosTxMgr" />
        <property name="userTransaction" ref="AtomikosUsrTx" />
        <property name="transactionSynchronizationName"
                  value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
    </bean>

    <bean id="dataSource"
          class="org.kuali.student.common.test.spring.UniqueResourceAtomikosDataSourceBean" init-method="init"
          destroy-method="close" depends-on="systemPropertyConfigurer">
        <property name="uniqueResourceName" value="dataSource" />
        <property name="xaDataSourceClassName"
                  value="${jdbc.xaDataSourceClassName}" />
        <property name="xaProperties" value="${propertiesPrefix.jdbc.xaDataSourceProperties}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
    </bean>

    <bean id="vendorAdapter" class="${jpa.vendorAdapter}" depends-on="propertyConfigurer">
        <property name="databasePlatform"
                  value="${jpa.databasePlatform}" />
        <property name="showSql" value="${jpa.showSql}" />
        <property name="generateDdl" value="${jpa.generateDdl}" />
    </bean>

    <!-- Default JPA EntityManagerFactory -->
    <bean id="defaultEntityManagerFactory" abstract="true"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" autowire-candidate="false" autowire="byType">
        <property name="jpaVendorAdapter" ref="vendorAdapter" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaPropertyMap" value="${propertiesPrefix.jpa.properties}"/>
    </bean>

    <bean id="entityManagerFactory" parent="defaultEntityManagerFactory" autowire-candidate="false" autowire="no">
        <property name="persistenceUnitName" value="Organization"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/organization-persistence.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean" autowire-candidate="false" autowire="no">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="organizationService"
          class="org.kuali.student.r2.core.organization.service.impl.OrganizationServiceMockImpl">
    </bean>

    <bean id="organizationDataLoader"
          class="org.kuali.student.r2.core.organization.service.OrganizationServiceDataLoader" autowire="default">
        <property name="orgService" ref="organizationService"/>
    </bean>

    <bean id="orgAuthorizationService" class="org.kuali.student.r2.core.organization.service.decorators.OrganizationServiceAuthorizationDecorator">
        <property name="nextDecorator" ref="organizationService" />
        <property name="permissionService"  ref="roleAndPermissionService" />
    </bean>

    <bean id="organizationPermissionLoader"
          class="org.kuali.student.r2.core.organization.service.OrgPermissionDataLoader"  autowire="default">
    </bean>


    <bean id="roleAndPermissionService" class="org.kuali.student.kim.permission.mock.RoleAndPermissionServiceMockImpl"/>

</beans>

