
-----------------------------------------------------------------------------
-- KRAD_MSG_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRAD_MSG_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRAD_MSG_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRAD_MSG_T
(
      NMSPC_CD VARCHAR2(20)
        , CMPNT_CD VARCHAR2(100)
        , MSG_KEY VARCHAR2(100)
        , LOC VARCHAR2(255)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , MSG_DESC VARCHAR2(255)
        , TXT VARCHAR2(4000)
    
    , CONSTRAINT KRAD_MSG_TC2 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRAD_MSG_T
    ADD CONSTRAINT KRAD_MSG_TP1
PRIMARY KEY (NMSPC_CD,CMPNT_CD,MSG_KEY,LOC)
/







-----------------------------------------------------------------------------
-- KRCR_CMPNT_SET_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_CMPNT_SET_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_CMPNT_SET_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_CMPNT_SET_T
(
      CMPNT_SET_ID VARCHAR2(40)
        , LAST_UPDT_TS DATE NOT NULL
        , CHKSM VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRCR_CMPNT_SET_T
    ADD CONSTRAINT KRCR_CMPNT_SET_TP1
PRIMARY KEY (CMPNT_SET_ID)
/







-----------------------------------------------------------------------------
-- KRCR_CMPNT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_CMPNT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_CMPNT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_CMPNT_T
(
      NMSPC_CD VARCHAR2(20)
        , CMPNT_CD VARCHAR2(100)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(255)
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
    
    , CONSTRAINT KRNS_PARM_DTL_TYP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRCR_CMPNT_T
    ADD CONSTRAINT KRCR_CMPNT_TP1
PRIMARY KEY (NMSPC_CD,CMPNT_CD)
/







-----------------------------------------------------------------------------
-- KRCR_DRVD_CMPNT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_DRVD_CMPNT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_DRVD_CMPNT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_DRVD_CMPNT_T
(
      NMSPC_CD VARCHAR2(20)
        , CMPNT_CD VARCHAR2(100)
        , NM VARCHAR2(255)
        , CMPNT_SET_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KRCR_DRVD_CMPNT_T
    ADD CONSTRAINT KRCR_DRVD_CMPNT_TP1
PRIMARY KEY (NMSPC_CD,CMPNT_CD)
/







-----------------------------------------------------------------------------
-- KRCR_NMSPC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_NMSPC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_NMSPC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_NMSPC_T
(
      NMSPC_CD VARCHAR2(20)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
        , APPL_ID VARCHAR2(255)
    
    , CONSTRAINT KRNS_NMSPC_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRCR_NMSPC_T
    ADD CONSTRAINT KRCR_NMSPC_TP1
PRIMARY KEY (NMSPC_CD)
/







-----------------------------------------------------------------------------
-- KRCR_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_PARM_T
(
      NMSPC_CD VARCHAR2(20)
        , CMPNT_CD VARCHAR2(100)
        , PARM_NM VARCHAR2(255)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PARM_TYP_CD VARCHAR2(5) NOT NULL
        , VAL VARCHAR2(4000)
        , PARM_DESC_TXT VARCHAR2(4000)
        , EVAL_OPRTR_CD VARCHAR2(1)
        , APPL_ID VARCHAR2(255) default 'KUALI'
    
    , CONSTRAINT KRNS_PARM_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRCR_PARM_T
    ADD CONSTRAINT KRCR_PARM_TP1
PRIMARY KEY (NMSPC_CD,CMPNT_CD,PARM_NM,APPL_ID)
/







-----------------------------------------------------------------------------
-- KRCR_PARM_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_PARM_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_PARM_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_PARM_TYP_T
(
      PARM_TYP_CD VARCHAR2(5)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
    
    , CONSTRAINT KRNS_PARM_TYP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRCR_PARM_TYP_T
    ADD CONSTRAINT KRCR_PARM_TYP_TP1
PRIMARY KEY (PARM_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRCR_STYLE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRCR_STYLE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRCR_STYLE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRCR_STYLE_T
(
      STYLE_ID VARCHAR2(40)
        , NM VARCHAR2(200) NOT NULL
        , XML CLOB NOT NULL
        , ACTV_IND NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KRCR_STYLE_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRCR_STYLE_T
    ADD CONSTRAINT KRCR_STYLE_TP1
PRIMARY KEY (STYLE_ID)
/







-----------------------------------------------------------------------------
-- KREN_CHNL_PRODCR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CHNL_PRODCR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CHNL_PRODCR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CHNL_PRODCR_T
(
      CHNL_ID NUMBER(8)
        , PRODCR_ID NUMBER(8)
    

)
/

ALTER TABLE KREN_CHNL_PRODCR_T
    ADD CONSTRAINT KREN_CHNL_PRODCR_TP1
PRIMARY KEY (CHNL_ID,PRODCR_ID)
/


CREATE INDEX KREN_CHNL_PRODCR_TI1 
  ON KREN_CHNL_PRODCR_T 
  (CHNL_ID)
/
CREATE INDEX KREN_CHNL_PRODCR_TI2 
  ON KREN_CHNL_PRODCR_T 
  (PRODCR_ID)
/





-----------------------------------------------------------------------------
-- KREN_CHNL_SUBSCRP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CHNL_SUBSCRP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CHNL_SUBSCRP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CHNL_SUBSCRP_T
(
      CHNL_SUBSCRP_ID NUMBER(8)
        , CHNL_ID NUMBER(8) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(8)
    
    , CONSTRAINT KREN_CHNL_SUBSCRP_TC0 UNIQUE (CHNL_ID, PRNCPL_ID)

)
/

ALTER TABLE KREN_CHNL_SUBSCRP_T
    ADD CONSTRAINT KREN_CHNL_SUBSCRP_TP1
PRIMARY KEY (CHNL_SUBSCRP_ID)
/


CREATE INDEX KREN_CHNL_SUBSCRP_TI1 
  ON KREN_CHNL_SUBSCRP_T 
  (CHNL_ID)
/





-----------------------------------------------------------------------------
-- KREN_CHNL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CHNL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CHNL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CHNL_T
(
      CHNL_ID NUMBER(8)
        , NM VARCHAR2(200) NOT NULL
        , DESC_TXT VARCHAR2(4000) NOT NULL
        , SUBSCRB_IND CHAR(1) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KREN_CHNL_TC0 UNIQUE (NM)

)
/

ALTER TABLE KREN_CHNL_T
    ADD CONSTRAINT KREN_CHNL_TP1
PRIMARY KEY (CHNL_ID)
/







-----------------------------------------------------------------------------
-- KREN_CNTNT_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CNTNT_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CNTNT_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CNTNT_TYP_T
(
      CNTNT_TYP_ID NUMBER(8)
        , NM VARCHAR2(200) NOT NULL
        , CUR_IND CHAR(1) default 'T' NOT NULL
        , CNTNT_TYP_VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(1000) NOT NULL
        , NMSPC_CD VARCHAR2(1000) NOT NULL
        , XSD CLOB NOT NULL
        , XSL CLOB NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KREN_CNTNT_TYP_TC0 UNIQUE (NM, CNTNT_TYP_VER_NBR)

)
/

ALTER TABLE KREN_CNTNT_TYP_T
    ADD CONSTRAINT KREN_CNTNT_TYP_TP1
PRIMARY KEY (CNTNT_TYP_ID)
/







-----------------------------------------------------------------------------
-- KREN_MSG_DELIV_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_MSG_DELIV_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_MSG_DELIV_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_MSG_DELIV_T
(
      MSG_DELIV_ID NUMBER(8)
        , MSG_ID NUMBER(8) NOT NULL
        , TYP_NM VARCHAR2(200) NOT NULL
        , SYS_ID VARCHAR2(300)
        , STAT_CD VARCHAR2(15) NOT NULL
        , PROC_CNT NUMBER(4) default 0 NOT NULL
        , LOCKD_DTTM DATE
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KREN_MSG_DELIV_TC0 UNIQUE (MSG_ID, TYP_NM)

)
/

ALTER TABLE KREN_MSG_DELIV_T
    ADD CONSTRAINT KREN_MSG_DELIV_TP1
PRIMARY KEY (MSG_DELIV_ID)
/


CREATE INDEX KREN_MSG_DELIV_TI1 
  ON KREN_MSG_DELIV_T 
  (MSG_ID)
/





-----------------------------------------------------------------------------
-- KREN_MSG_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_MSG_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_MSG_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_MSG_T
(
      MSG_ID NUMBER(8)
        , ORGN_ID VARCHAR2(128)
        , DELIV_TYP VARCHAR2(500) NOT NULL
        , CRTE_DTTM DATE NOT NULL
        , TTL VARCHAR2(255)
        , CHNL VARCHAR2(300) NOT NULL
        , PRODCR VARCHAR2(300)
        , CNTNT CLOB NOT NULL
        , CNTNT_TYP VARCHAR2(128)
        , URL VARCHAR2(512)
        , RECIP_ID VARCHAR2(300) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KREN_MSG_TC0 UNIQUE (ORGN_ID)

)
/

ALTER TABLE KREN_MSG_T
    ADD CONSTRAINT KREN_MSG_TP1
PRIMARY KEY (MSG_ID)
/







-----------------------------------------------------------------------------
-- KREN_NTFCTN_MSG_DELIV_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_NTFCTN_MSG_DELIV_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_NTFCTN_MSG_DELIV_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_NTFCTN_MSG_DELIV_T
(
      NTFCTN_MSG_DELIV_ID NUMBER(8)
        , NTFCTN_ID NUMBER(8) NOT NULL
        , RECIP_ID VARCHAR2(40) NOT NULL
        , STAT_CD VARCHAR2(15) NOT NULL
        , SYS_ID VARCHAR2(300)
        , LOCKD_DTTM DATE
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KREN_NTFCTN_MSG_DELIV_TC0 UNIQUE (NTFCTN_ID, RECIP_ID)

)
/

ALTER TABLE KREN_NTFCTN_MSG_DELIV_T
    ADD CONSTRAINT KREN_NTFCTN_MSG_DELIV_TP1
PRIMARY KEY (NTFCTN_MSG_DELIV_ID)
/


CREATE INDEX KREN_MSG_DELIVSI1 
  ON KREN_NTFCTN_MSG_DELIV_T 
  (NTFCTN_ID)
/





-----------------------------------------------------------------------------
-- KREN_NTFCTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_NTFCTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_NTFCTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_NTFCTN_T
(
      NTFCTN_ID NUMBER(8)
        , DELIV_TYP VARCHAR2(3) NOT NULL
        , CRTE_DTTM DATE NOT NULL
        , SND_DTTM DATE
        , AUTO_RMV_DTTM DATE
        , PRIO_ID NUMBER(8) NOT NULL
        , TTL VARCHAR2(255)
        , CNTNT CLOB NOT NULL
        , CNTNT_TYP_ID NUMBER(8) NOT NULL
        , CHNL_ID NUMBER(8) NOT NULL
        , PRODCR_ID NUMBER(8) NOT NULL
        , PROCESSING_FLAG VARCHAR2(15) NOT NULL
        , LOCKD_DTTM DATE
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KREN_NTFCTN_T
    ADD CONSTRAINT KREN_NTFCTN_TP1
PRIMARY KEY (NTFCTN_ID)
/


CREATE INDEX KREN_NTFCTN_I1 
  ON KREN_NTFCTN_T 
  (CNTNT_TYP_ID)
/
CREATE INDEX KREN_NTFCTN_I2 
  ON KREN_NTFCTN_T 
  (PRIO_ID)
/
CREATE INDEX KREN_NTFCTN_I3 
  ON KREN_NTFCTN_T 
  (PRODCR_ID)
/





-----------------------------------------------------------------------------
-- KREN_PRIO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_PRIO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_PRIO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_PRIO_T
(
      PRIO_ID NUMBER(8)
        , NM VARCHAR2(40) NOT NULL
        , DESC_TXT VARCHAR2(500) NOT NULL
        , PRIO_ORD NUMBER(4) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KREN_PRIO_TC0 UNIQUE (NM)

)
/

ALTER TABLE KREN_PRIO_T
    ADD CONSTRAINT KREN_PRIO_TP1
PRIMARY KEY (PRIO_ID)
/







-----------------------------------------------------------------------------
-- KREN_PRODCR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_PRODCR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_PRODCR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_PRODCR_T
(
      PRODCR_ID NUMBER(8)
        , NM VARCHAR2(200) NOT NULL
        , DESC_TXT VARCHAR2(1000) NOT NULL
        , CNTCT_INFO VARCHAR2(1000) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KREN_PRODCR_TC0 UNIQUE (NM)

)
/

ALTER TABLE KREN_PRODCR_T
    ADD CONSTRAINT KREN_PRODCR_TP1
PRIMARY KEY (PRODCR_ID)
/







-----------------------------------------------------------------------------
-- KREN_RECIP_DELIV_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_DELIV_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_DELIV_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_DELIV_T
(
      RECIP_DELIV_ID NUMBER(8)
        , RECIP_ID VARCHAR2(40) NOT NULL
        , CHNL VARCHAR2(300) NOT NULL
        , NM VARCHAR2(200) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_RECIP_DELIV_T
    ADD CONSTRAINT KREN_RECIP_DELIV_TP1
PRIMARY KEY (RECIP_DELIV_ID)
/







-----------------------------------------------------------------------------
-- KREN_RECIP_LIST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_LIST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_LIST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_LIST_T
(
      RECIP_LIST_ID NUMBER(8)
        , CHNL_ID NUMBER(8) NOT NULL
        , RECIP_TYP_CD VARCHAR2(10) NOT NULL
        , RECIP_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(8)
    
    , CONSTRAINT KREN_RECIP_LIST_TC0 UNIQUE (CHNL_ID, RECIP_TYP_CD, RECIP_ID)

)
/

ALTER TABLE KREN_RECIP_LIST_T
    ADD CONSTRAINT KREN_RECIP_LIST_TP1
PRIMARY KEY (RECIP_LIST_ID)
/


CREATE INDEX KREN_RECIP_LIST_TI1 
  ON KREN_RECIP_LIST_T 
  (CHNL_ID)
/





-----------------------------------------------------------------------------
-- KREN_RECIP_PREFS_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_PREFS_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_PREFS_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_PREFS_T
(
      RECIP_PREFS_ID NUMBER(8)
        , RECIP_ID VARCHAR2(40) NOT NULL
        , PROP VARCHAR2(200) NOT NULL
        , VAL VARCHAR2(1000) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KREN_RECIP_PREFS_TC0 UNIQUE (RECIP_ID, PROP)

)
/

ALTER TABLE KREN_RECIP_PREFS_T
    ADD CONSTRAINT KREN_RECIP_PREFS_TP1
PRIMARY KEY (RECIP_PREFS_ID)
/







-----------------------------------------------------------------------------
-- KREN_RECIP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_T
(
      RECIP_ID NUMBER(8)
        , NTFCTN_ID NUMBER(8) NOT NULL
        , RECIP_TYP_CD VARCHAR2(10) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(8)
    
    , CONSTRAINT KREN_RECIP_TC0 UNIQUE (NTFCTN_ID, RECIP_TYP_CD, PRNCPL_ID)

)
/

ALTER TABLE KREN_RECIP_T
    ADD CONSTRAINT KREN_RECIP_TP1
PRIMARY KEY (RECIP_ID)
/


CREATE INDEX KREN_RECIP_TI1 
  ON KREN_RECIP_T 
  (NTFCTN_ID)
/





-----------------------------------------------------------------------------
-- KREN_RVWER_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RVWER_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RVWER_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RVWER_T
(
      RVWER_ID NUMBER(8)
        , CHNL_ID NUMBER(8) NOT NULL
        , TYP VARCHAR2(10) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KREN_RVWER_TC0 UNIQUE (CHNL_ID, TYP, PRNCPL_ID)

)
/

ALTER TABLE KREN_RVWER_T
    ADD CONSTRAINT KREN_RVWER_TP1
PRIMARY KEY (RVWER_ID)
/


CREATE INDEX KREN_RVWER_TI1 
  ON KREN_RVWER_T 
  (CHNL_ID)
/





-----------------------------------------------------------------------------
-- KREN_SNDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_SNDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_SNDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_SNDR_T
(
      SNDR_ID NUMBER(8)
        , NTFCTN_ID NUMBER(8) NOT NULL
        , NM VARCHAR2(200) NOT NULL
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(8)
    
    , CONSTRAINT KREN_SNDR_TC0 UNIQUE (NTFCTN_ID, NM)

)
/

ALTER TABLE KREN_SNDR_T
    ADD CONSTRAINT KREN_SNDR_TP1
PRIMARY KEY (SNDR_ID)
/


CREATE INDEX KREN_SNDR_TI1 
  ON KREN_SNDR_T 
  (NTFCTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_ACTN_ITM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ACTN_ITM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ACTN_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ACTN_ITM_T
(
      ACTN_ITM_ID VARCHAR2(40)
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , ASND_DT DATE NOT NULL
        , RQST_CD CHAR(1) NOT NULL
        , ACTN_RQST_ID VARCHAR2(40) NOT NULL
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , ROLE_NM VARCHAR2(2000)
        , DLGN_PRNCPL_ID VARCHAR2(40)
        , DOC_HDR_TTL VARCHAR2(255)
        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , RSP_ID VARCHAR2(40) NOT NULL
        , DLGN_TYP VARCHAR2(1)
        , VER_NBR NUMBER(8) default 0
        , DTYPE VARCHAR2(50)
        , GRP_ID VARCHAR2(40)
        , DLGN_GRP_ID VARCHAR2(40)
        , RQST_LBL VARCHAR2(255)
    

)
/

ALTER TABLE KREW_ACTN_ITM_T
    ADD CONSTRAINT KREW_ACTN_ITM_TP1
PRIMARY KEY (ACTN_ITM_ID)
/


CREATE INDEX KREW_ACTN_ITM_T1 
  ON KREW_ACTN_ITM_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI2 
  ON KREW_ACTN_ITM_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI3 
  ON KREW_ACTN_ITM_T 
  (ACTN_RQST_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI5 
  ON KREW_ACTN_ITM_T 
  (PRNCPL_ID, DLGN_TYP, DOC_HDR_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI6 
  ON KREW_ACTN_ITM_T 
  (DLGN_TYP, DLGN_PRNCPL_ID, DLGN_GRP_ID)
/





-----------------------------------------------------------------------------
-- KREW_ACTN_RQST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ACTN_RQST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ACTN_RQST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ACTN_RQST_T
(
      ACTN_RQST_ID VARCHAR2(40)
        , PARNT_ID VARCHAR2(40)
        , ACTN_RQST_CD CHAR(1) NOT NULL
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , RULE_ID VARCHAR2(40)
        , STAT_CD CHAR(1) NOT NULL
        , RSP_ID VARCHAR2(40) NOT NULL
        , PRNCPL_ID VARCHAR2(40)
        , ROLE_NM VARCHAR2(2000)
        , QUAL_ROLE_NM VARCHAR2(2000)
        , QUAL_ROLE_NM_LBL_TXT VARCHAR2(2000)
        , RECIP_TYP_CD CHAR(1)
        , PRIO_NBR NUMBER(8) NOT NULL
        , RTE_TYP_NM VARCHAR2(255)
        , RTE_LVL_NBR NUMBER(8) NOT NULL
        , RTE_NODE_INSTN_ID VARCHAR2(40)
        , ACTN_TKN_ID VARCHAR2(40)
        , DOC_VER_NBR NUMBER(8) NOT NULL
        , CRTE_DT DATE NOT NULL
        , RSP_DESC_TXT VARCHAR2(200)
        , FRC_ACTN NUMBER(1) default 0
        , ACTN_RQST_ANNOTN_TXT VARCHAR2(2000)
        , DLGN_TYP CHAR(1)
        , APPR_PLCY CHAR(1)
        , CUR_IND NUMBER(1) default 1
        , VER_NBR NUMBER(8) default 0
        , GRP_ID VARCHAR2(40)
        , RQST_LBL VARCHAR2(255)
    

)
/

ALTER TABLE KREW_ACTN_RQST_T
    ADD CONSTRAINT KREW_ACTN_RQST_TP1
PRIMARY KEY (ACTN_RQST_ID)
/


CREATE INDEX KREW_ACTN_RQST_T11 
  ON KREW_ACTN_RQST_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_ACTN_RQST_T12 
  ON KREW_ACTN_RQST_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_RQST_T13 
  ON KREW_ACTN_RQST_T 
  (ACTN_TKN_ID)
/
CREATE INDEX KREW_ACTN_RQST_T14 
  ON KREW_ACTN_RQST_T 
  (PARNT_ID)
/
CREATE INDEX KREW_ACTN_RQST_T15 
  ON KREW_ACTN_RQST_T 
  (RSP_ID)
/
CREATE INDEX KREW_ACTN_RQST_T16 
  ON KREW_ACTN_RQST_T 
  (STAT_CD, RSP_ID)
/
CREATE INDEX KREW_ACTN_RQST_T17 
  ON KREW_ACTN_RQST_T 
  (RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_ACTN_RQST_T19 
  ON KREW_ACTN_RQST_T 
  (STAT_CD, DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_ACTN_TKN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ACTN_TKN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ACTN_TKN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ACTN_TKN_T
(
      ACTN_TKN_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , DLGTR_PRNCPL_ID VARCHAR2(40)
        , ACTN_CD CHAR(1) NOT NULL
        , ACTN_DT DATE NOT NULL
        , DOC_VER_NBR NUMBER(8) NOT NULL
        , ANNOTN VARCHAR2(2000)
        , CUR_IND NUMBER(1) default 1
        , VER_NBR NUMBER(8) default 0
        , DLGTR_GRP_ID VARCHAR2(40)
    

)
/

ALTER TABLE KREW_ACTN_TKN_T
    ADD CONSTRAINT KREW_ACTN_TKN_TP1
PRIMARY KEY (ACTN_TKN_ID)
/


CREATE INDEX KREW_ACTN_TKN_TI1 
  ON KREW_ACTN_TKN_T 
  (DOC_HDR_ID, PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_TKN_TI2 
  ON KREW_ACTN_TKN_T 
  (DOC_HDR_ID, PRNCPL_ID, ACTN_CD)
/
CREATE INDEX KREW_ACTN_TKN_TI3 
  ON KREW_ACTN_TKN_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_TKN_TI4 
  ON KREW_ACTN_TKN_T 
  (DLGTR_PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_TKN_TI5 
  ON KREW_ACTN_TKN_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_APP_DOC_STAT_TRAN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_APP_DOC_STAT_TRAN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_APP_DOC_STAT_TRAN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_APP_DOC_STAT_TRAN_T
(
      APP_DOC_STAT_TRAN_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40)
        , APP_DOC_STAT_FROM VARCHAR2(64)
        , APP_DOC_STAT_TO VARCHAR2(64)
        , STAT_TRANS_DATE DATE
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_APP_DOC_STAT_TRAN_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_APP_DOC_STAT_TRAN_T
    ADD CONSTRAINT KREW_APP_DOC_STAT_TRAN_TP1
PRIMARY KEY (APP_DOC_STAT_TRAN_ID)
/


CREATE INDEX KREW_APP_DOC_STAT_TI1 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (DOC_HDR_ID, STAT_TRANS_DATE)
/
CREATE INDEX KREW_APP_DOC_STAT_TI2 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (DOC_HDR_ID, APP_DOC_STAT_FROM)
/
CREATE INDEX KREW_APP_DOC_STAT_TI3 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (DOC_HDR_ID, APP_DOC_STAT_TO)
/





-----------------------------------------------------------------------------
-- KREW_ATTR_DEFN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ATTR_DEFN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ATTR_DEFN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ATTR_DEFN_T
(
      ATTR_DEFN_ID VARCHAR2(40)
        , NM VARCHAR2(100) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , LBL VARCHAR2(40)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , CMPNT_NM VARCHAR2(100)
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(40)
    
    , CONSTRAINT KREW_ATTR_DEFN_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KREW_ATTR_DEFN_T
    ADD CONSTRAINT KREW_ATTR_DEFN_TP1
PRIMARY KEY (ATTR_DEFN_ID)
/







-----------------------------------------------------------------------------
-- KREW_ATT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ATT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ATT_T
(
      ATTACHMENT_ID VARCHAR2(40)
        , NTE_ID VARCHAR2(40)
        , FILE_NM VARCHAR2(255) NOT NULL
        , FILE_LOC VARCHAR2(255) NOT NULL
        , MIME_TYP VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_ATT_T
    ADD CONSTRAINT KREW_ATT_TP1
PRIMARY KEY (ATTACHMENT_ID)
/


CREATE INDEX KREW_ATT_TI1 
  ON KREW_ATT_T 
  (NTE_ID)
/





-----------------------------------------------------------------------------
-- KREW_DLGN_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DLGN_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DLGN_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DLGN_RSP_T
(
      DLGN_RULE_ID VARCHAR2(40)
        , RSP_ID VARCHAR2(40) NOT NULL
        , DLGN_RULE_BASE_VAL_ID VARCHAR2(40) NOT NULL
        , DLGN_TYP VARCHAR2(20) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_DLGN_RSP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_DLGN_RSP_T
    ADD CONSTRAINT KREW_DLGN_RSP_TP1
PRIMARY KEY (DLGN_RULE_ID)
/







-----------------------------------------------------------------------------
-- KREW_DOC_HDR_CNTNT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_CNTNT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_CNTNT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_CNTNT_T
(
      DOC_HDR_ID VARCHAR2(40)
        , DOC_CNTNT_TXT CLOB
    

)
/

ALTER TABLE KREW_DOC_HDR_CNTNT_T
    ADD CONSTRAINT KREW_DOC_HDR_CNTNT_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_DT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_DT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_DT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_DT_T
(
      DOC_HDR_EXT_DT_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL DATE
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_DT_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_DT_TP1
PRIMARY KEY (DOC_HDR_EXT_DT_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_DT_TI1 
  ON KREW_DOC_HDR_EXT_DT_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_DT_TI2 
  ON KREW_DOC_HDR_EXT_DT_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_DT_TI3 
  ON KREW_DOC_HDR_EXT_DT_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_FLT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_FLT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_FLT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_FLT_T
(
      DOC_HDR_EXT_FLT_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL NUMBER(30,15)
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_FLT_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_FLT_TP1
PRIMARY KEY (DOC_HDR_EXT_FLT_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI1 
  ON KREW_DOC_HDR_EXT_FLT_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI2 
  ON KREW_DOC_HDR_EXT_FLT_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI3 
  ON KREW_DOC_HDR_EXT_FLT_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_LONG_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_LONG_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_LONG_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_LONG_T
(
      DOC_HDR_EXT_LONG_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL NUMBER(22)
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_LONG_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_LONG_TP1
PRIMARY KEY (DOC_HDR_EXT_LONG_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI1 
  ON KREW_DOC_HDR_EXT_LONG_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI2 
  ON KREW_DOC_HDR_EXT_LONG_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI3 
  ON KREW_DOC_HDR_EXT_LONG_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_T
(
      DOC_HDR_EXT_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL VARCHAR2(2000)
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_TP1
PRIMARY KEY (DOC_HDR_EXT_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_TI1 
  ON KREW_DOC_HDR_EXT_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_TI2 
  ON KREW_DOC_HDR_EXT_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_TI3 
  ON KREW_DOC_HDR_EXT_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_T
(
      DOC_HDR_ID VARCHAR2(40)
        , DOC_TYP_ID VARCHAR2(40)
        , DOC_HDR_STAT_CD CHAR(1) NOT NULL
        , RTE_LVL NUMBER(8) NOT NULL
        , STAT_MDFN_DT DATE NOT NULL
        , CRTE_DT DATE NOT NULL
        , APRV_DT DATE
        , FNL_DT DATE
        , RTE_STAT_MDFN_DT DATE
        , TTL VARCHAR2(255)
        , APP_DOC_ID VARCHAR2(255)
        , DOC_VER_NBR NUMBER(8) NOT NULL
        , INITR_PRNCPL_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , RTE_PRNCPL_ID VARCHAR2(40)
        , DTYPE VARCHAR2(50)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , APP_DOC_STAT VARCHAR2(64)
        , APP_DOC_STAT_MDFN_DT DATE
    
    , CONSTRAINT KREW_DOC_HDR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_DOC_HDR_T
    ADD CONSTRAINT KREW_DOC_HDR_TP1
PRIMARY KEY (DOC_HDR_ID)
/


CREATE INDEX KREW_DOC_HDR_T10 
  ON KREW_DOC_HDR_T 
  (APP_DOC_STAT)
/
CREATE INDEX KREW_DOC_HDR_T12 
  ON KREW_DOC_HDR_T 
  (APP_DOC_STAT_MDFN_DT)
/
CREATE INDEX KREW_DOC_HDR_TI1 
  ON KREW_DOC_HDR_T 
  (DOC_TYP_ID)
/
CREATE INDEX KREW_DOC_HDR_TI2 
  ON KREW_DOC_HDR_T 
  (INITR_PRNCPL_ID)
/
CREATE INDEX KREW_DOC_HDR_TI3 
  ON KREW_DOC_HDR_T 
  (DOC_HDR_STAT_CD)
/
CREATE INDEX KREW_DOC_HDR_TI4 
  ON KREW_DOC_HDR_T 
  (TTL)
/
CREATE INDEX KREW_DOC_HDR_TI5 
  ON KREW_DOC_HDR_T 
  (CRTE_DT)
/
CREATE INDEX KREW_DOC_HDR_TI6 
  ON KREW_DOC_HDR_T 
  (RTE_STAT_MDFN_DT)
/
CREATE INDEX KREW_DOC_HDR_TI7 
  ON KREW_DOC_HDR_T 
  (APRV_DT)
/
CREATE INDEX KREW_DOC_HDR_TI8 
  ON KREW_DOC_HDR_T 
  (FNL_DT)
/
CREATE INDEX KREW_DOC_HDR_TI9 
  ON KREW_DOC_HDR_T 
  (APP_DOC_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_LNK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_LNK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_LNK_T
(
      DOC_LNK_ID VARCHAR2(40)
        , ORGN_DOC_ID VARCHAR2(40) NOT NULL
        , DEST_DOC_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KREW_DOC_LNK_T
    ADD CONSTRAINT KREW_DOC_LNK_TP1
PRIMARY KEY (DOC_LNK_ID)
/


CREATE INDEX KREW_DOC_LNK_TI1 
  ON KREW_DOC_LNK_T 
  (ORGN_DOC_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_NTE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_NTE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_NTE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_NTE_T
(
      DOC_NTE_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , AUTH_PRNCPL_ID VARCHAR2(40) NOT NULL
        , CRT_DT DATE NOT NULL
        , TXT VARCHAR2(4000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_DOC_NTE_T
    ADD CONSTRAINT KREW_DOC_NTE_TP1
PRIMARY KEY (DOC_NTE_ID)
/


CREATE INDEX KREW_DOC_NTE_TI1 
  ON KREW_DOC_NTE_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_APP_DOC_STAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_APP_DOC_STAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_APP_DOC_STAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_APP_DOC_STAT_T
(
      DOC_TYP_ID VARCHAR2(40)
        , DOC_STAT_NM VARCHAR2(64)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
        , CAT_NM VARCHAR2(64)
        , SEQ_NO NUMBER(5)
    
    , CONSTRAINT KREW_DOC_TYP_APP_DOC_STAT_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_DOC_TYP_APP_DOC_STAT_T
    ADD CONSTRAINT KREW_DOC_TYP_APP_DOC_STAT_TP1
PRIMARY KEY (DOC_TYP_ID,DOC_STAT_NM)
/


CREATE INDEX KREW_DOC_TYP_APP_DOC_STAT_T1 
  ON KREW_DOC_TYP_APP_DOC_STAT_T 
  (DOC_TYP_ID)
/
CREATE INDEX KREW_DOC_TYP_APP_DOC_STAT_T2 
  ON KREW_DOC_TYP_APP_DOC_STAT_T 
  (DOC_TYP_ID, CAT_NM)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_APP_STAT_CAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_APP_STAT_CAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_APP_STAT_CAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_APP_STAT_CAT_T
(
      DOC_TYP_ID VARCHAR2(40)
        , CAT_NM VARCHAR2(64)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_DOC_TYP_APP_STAT_CAT_TC1 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_DOC_TYP_APP_STAT_CAT_T
    ADD CONSTRAINT KREW_DOC_TYP_APP_STAT_CAT_TP1
PRIMARY KEY (DOC_TYP_ID,CAT_NM)
/







-----------------------------------------------------------------------------
-- KREW_DOC_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_ATTR_T
(
      DOC_TYP_ATTRIB_ID VARCHAR2(40)
        , DOC_TYP_ID VARCHAR2(40) NOT NULL
        , RULE_ATTR_ID VARCHAR2(40) NOT NULL
        , ORD_INDX NUMBER(4) default 0
    

)
/

ALTER TABLE KREW_DOC_TYP_ATTR_T
    ADD CONSTRAINT KREW_DOC_TYP_ATTR_TP1
PRIMARY KEY (DOC_TYP_ATTRIB_ID)
/


CREATE INDEX KREW_DOC_TYP_ATTR_TI1 
  ON KREW_DOC_TYP_ATTR_T 
  (DOC_TYP_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_PLCY_RELN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_PLCY_RELN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_PLCY_RELN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_PLCY_RELN_T
(
      DOC_TYP_ID VARCHAR2(40)
        , DOC_PLCY_NM VARCHAR2(255)
        , PLCY_NM NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
        , PLCY_VAL VARCHAR2(1024)
    
    , CONSTRAINT KREW_DOC_TYP_PLCY_RELN_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_DOC_TYP_PLCY_RELN_T
    ADD CONSTRAINT KREW_DOC_TYP_PLCY_RELN_TP1
PRIMARY KEY (DOC_TYP_ID,DOC_PLCY_NM)
/







-----------------------------------------------------------------------------
-- KREW_DOC_TYP_PROC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_PROC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_PROC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_PROC_T
(
      DOC_TYP_PROC_ID VARCHAR2(40)
        , DOC_TYP_ID VARCHAR2(40) NOT NULL
        , INIT_RTE_NODE_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , INIT_IND NUMBER(1) default 0 NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_DOC_TYP_PROC_T
    ADD CONSTRAINT KREW_DOC_TYP_PROC_TP1
PRIMARY KEY (DOC_TYP_PROC_ID)
/


CREATE INDEX KREW_DOC_TYP_PROC_TI1 
  ON KREW_DOC_TYP_PROC_T 
  (DOC_TYP_ID)
/
CREATE INDEX KREW_DOC_TYP_PROC_TI2 
  ON KREW_DOC_TYP_PROC_T 
  (INIT_RTE_NODE_ID)
/
CREATE INDEX KREW_DOC_TYP_PROC_TI3 
  ON KREW_DOC_TYP_PROC_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_T
(
      DOC_TYP_ID VARCHAR2(40)
        , PARNT_ID VARCHAR2(40)
        , DOC_TYP_NM VARCHAR2(64)
        , DOC_TYP_VER_NBR NUMBER(10) default 0
        , ACTV_IND NUMBER(1)
        , CUR_IND NUMBER(1)
        , LBL VARCHAR2(128) NOT NULL
        , PREV_DOC_TYP_VER_NBR VARCHAR2(40)
        , DOC_TYP_DESC VARCHAR2(4000)
        , DOC_HDLR_URL VARCHAR2(255)
        , POST_PRCSR VARCHAR2(255)
        , JNDI_URL VARCHAR2(255)
        , BLNKT_APPR_PLCY VARCHAR2(10)
        , ADV_DOC_SRCH_URL VARCHAR2(255)
        , RTE_VER_NBR VARCHAR2(2) default '1'
        , NOTIFY_ADDR VARCHAR2(255)
        , APPL_ID VARCHAR2(255)
        , EMAIL_XSL VARCHAR2(255)
        , SEC_XML CLOB
        , VER_NBR NUMBER(8) default 0
        , BLNKT_APPR_GRP_ID VARCHAR2(40)
        , RPT_GRP_ID VARCHAR2(40)
        , GRP_ID VARCHAR2(40)
        , HELP_DEF_URL VARCHAR2(4000)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , DOC_SEARCH_HELP_URL VARCHAR2(4000)
        , DOC_HDR_ID VARCHAR2(40)
    
    , CONSTRAINT KREW_DOC_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KREW_DOC_TYP_TI1 UNIQUE (DOC_TYP_NM, DOC_TYP_VER_NBR)

)
/

ALTER TABLE KREW_DOC_TYP_T
    ADD CONSTRAINT KREW_DOC_TYP_TP1
PRIMARY KEY (DOC_TYP_ID)
/


CREATE INDEX KREW_DOC_TYP_TI2 
  ON KREW_DOC_TYP_T 
  (PARNT_ID)
/
CREATE INDEX KREW_DOC_TYP_TI3 
  ON KREW_DOC_TYP_T 
  (DOC_TYP_ID, PARNT_ID)
/
CREATE INDEX KREW_DOC_TYP_TI4 
  ON KREW_DOC_TYP_T 
  (PREV_DOC_TYP_VER_NBR)
/
CREATE INDEX KREW_DOC_TYP_TI5 
  ON KREW_DOC_TYP_T 
  (CUR_IND)
/
CREATE INDEX KREW_DOC_TYP_TI6 
  ON KREW_DOC_TYP_T 
  (DOC_TYP_NM)
/





-----------------------------------------------------------------------------
-- KREW_EDL_ASSCTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_ASSCTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_ASSCTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_ASSCTN_T
(
      EDOCLT_ASSOC_ID NUMBER(19)
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , EDL_DEF_NM VARCHAR2(200)
        , STYLE_NM VARCHAR2(200)
        , ACTV_IND NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_EDL_ASSCTN_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_EDL_ASSCTN_T
    ADD CONSTRAINT KREW_EDL_ASSCTN_TP1
PRIMARY KEY (EDOCLT_ASSOC_ID)
/







-----------------------------------------------------------------------------
-- KREW_EDL_DEF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_DEF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_DEF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_DEF_T
(
      EDOCLT_DEF_ID NUMBER(19)
        , NM VARCHAR2(200) NOT NULL
        , XML CLOB NOT NULL
        , ACTV_IND NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_EDL_DEF_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_EDL_DEF_T
    ADD CONSTRAINT KREW_EDL_DEF_TP1
PRIMARY KEY (EDOCLT_DEF_ID)
/







-----------------------------------------------------------------------------
-- KREW_EDL_DMP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_DMP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_DMP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_DMP_T
(
      DOC_HDR_ID VARCHAR2(40)
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , DOC_HDR_STAT_CD CHAR(1) NOT NULL
        , DOC_HDR_MDFN_DT DATE NOT NULL
        , DOC_HDR_CRTE_DT DATE NOT NULL
        , DOC_HDR_TTL VARCHAR2(255)
        , DOC_HDR_INITR_PRNCPL_ID VARCHAR2(40) NOT NULL
        , CRNT_NODE_NM VARCHAR2(30) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_EDL_DMP_T
    ADD CONSTRAINT KREW_EDL_DMP_TP1
PRIMARY KEY (DOC_HDR_ID)
/


CREATE INDEX KREW_EDL_DMP_TI1 
  ON KREW_EDL_DMP_T 
  (DOC_TYP_NM, DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_EDL_FLD_DMP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_FLD_DMP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_FLD_DMP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_FLD_DMP_T
(
      EDL_FIELD_DMP_ID NUMBER(14)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , FLD_NM VARCHAR2(255) NOT NULL
        , FLD_VAL VARCHAR2(4000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_EDL_FLD_DMP_T
    ADD CONSTRAINT KREW_EDL_FLD_DMP_TP1
PRIMARY KEY (EDL_FIELD_DMP_ID)
/







-----------------------------------------------------------------------------
-- KREW_INIT_RTE_NODE_INSTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_INIT_RTE_NODE_INSTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_INIT_RTE_NODE_INSTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_INIT_RTE_NODE_INSTN_T
(
      DOC_HDR_ID VARCHAR2(40)
        , RTE_NODE_INSTN_ID VARCHAR2(40)
    

)
/

ALTER TABLE KREW_INIT_RTE_NODE_INSTN_T
    ADD CONSTRAINT KREW_INIT_RTE_NODE_INSTN_TP1
PRIMARY KEY (DOC_HDR_ID,RTE_NODE_INSTN_ID)
/


CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI1 
  ON KREW_INIT_RTE_NODE_INSTN_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI2 
  ON KREW_INIT_RTE_NODE_INSTN_T 
  (RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_OUT_BOX_ITM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_OUT_BOX_ITM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_OUT_BOX_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_OUT_BOX_ITM_T
(
      ACTN_ITM_ID VARCHAR2(40)
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , ASND_DT DATE NOT NULL
        , RQST_CD CHAR(1) NOT NULL
        , ACTN_RQST_ID VARCHAR2(40) NOT NULL
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , ROLE_NM VARCHAR2(2000)
        , DLGN_PRNCPL_ID VARCHAR2(40)
        , DOC_HDR_TTL VARCHAR2(255)
        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , RSP_ID VARCHAR2(40) NOT NULL
        , DLGN_TYP VARCHAR2(1)
        , VER_NBR NUMBER(8) default 0
        , GRP_ID VARCHAR2(40)
        , DLGN_GRP_ID VARCHAR2(40)
        , RQST_LBL VARCHAR2(255)
    

)
/

ALTER TABLE KREW_OUT_BOX_ITM_T
    ADD CONSTRAINT KREW_OUT_BOX_ITM_TP1
PRIMARY KEY (ACTN_ITM_ID)
/


CREATE INDEX KREW_OUT_BOX_ITM_TI1 
  ON KREW_OUT_BOX_ITM_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_OUT_BOX_ITM_TI2 
  ON KREW_OUT_BOX_ITM_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_OUT_BOX_ITM_TI3 
  ON KREW_OUT_BOX_ITM_T 
  (ACTN_RQST_ID)
/





-----------------------------------------------------------------------------
-- KREW_PPL_FLW_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_PPL_FLW_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_PPL_FLW_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_PPL_FLW_ATTR_T
(
      PPL_FLW_ATTR_ID VARCHAR2(40)
        , PPL_FLW_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREW_PPL_FLW_ATTR_T
    ADD CONSTRAINT KREW_PPL_FLW_ATTR_TP1
PRIMARY KEY (PPL_FLW_ATTR_ID)
/


CREATE INDEX KREW_PPL_FLW_ATTR_TI1 
  ON KREW_PPL_FLW_ATTR_T 
  (PPL_FLW_ID)
/
CREATE INDEX KREW_PPL_FLW_ATTR_TI2 
  ON KREW_PPL_FLW_ATTR_T 
  (ATTR_DEFN_ID)
/





-----------------------------------------------------------------------------
-- KREW_PPL_FLW_DLGT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_PPL_FLW_DLGT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_PPL_FLW_DLGT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_PPL_FLW_DLGT_T
(
      PPL_FLW_DLGT_ID VARCHAR2(40)
        , PPL_FLW_MBR_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40) NOT NULL
        , MBR_TYP_CD VARCHAR2(1) NOT NULL
        , DLGN_TYP_CD VARCHAR2(1) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , ACTN_RQST_PLCY_CD VARCHAR2(1)
        , RSP_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KREW_PPL_FLW_DLGT_T
    ADD CONSTRAINT KREW_PPL_FLW_DLGT_TP1
PRIMARY KEY (PPL_FLW_DLGT_ID)
/


CREATE INDEX KREW_PPL_FLW_DLGT_TI1 
  ON KREW_PPL_FLW_DLGT_T 
  (PPL_FLW_MBR_ID)
/





-----------------------------------------------------------------------------
-- KREW_PPL_FLW_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_PPL_FLW_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_PPL_FLW_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_PPL_FLW_MBR_T
(
      PPL_FLW_MBR_ID VARCHAR2(40)
        , PPL_FLW_ID VARCHAR2(40) NOT NULL
        , MBR_TYP_CD VARCHAR2(1) NOT NULL
        , MBR_ID VARCHAR2(40) NOT NULL
        , PRIO NUMBER(8)
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , ACTN_RQST_PLCY_CD VARCHAR2(1)
        , RSP_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KREW_PPL_FLW_MBR_T
    ADD CONSTRAINT KREW_PPL_FLW_MBR_TP1
PRIMARY KEY (PPL_FLW_MBR_ID)
/


CREATE INDEX KREW_PPL_FLW_MBR_TI1 
  ON KREW_PPL_FLW_MBR_T 
  (PPL_FLW_ID)
/
CREATE INDEX KREW_PPL_FLW_MBR_TI2 
  ON KREW_PPL_FLW_MBR_T 
  (PPL_FLW_ID, PRIO)
/





-----------------------------------------------------------------------------
-- KREW_PPL_FLW_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_PPL_FLW_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_PPL_FLW_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_PPL_FLW_T
(
      PPL_FLW_ID VARCHAR2(40)
        , NM VARCHAR2(100) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , TYP_ID VARCHAR2(40)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(4000)
    
    , CONSTRAINT KREW_PPL_FLW_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KREW_PPL_FLW_T
    ADD CONSTRAINT KREW_PPL_FLW_TP1
PRIMARY KEY (PPL_FLW_ID)
/


CREATE INDEX KREW_PPL_FLW_FK1 
  ON KREW_PPL_FLW_T 
  (TYP_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_BRCH_PROTO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_BRCH_PROTO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_BRCH_PROTO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_BRCH_PROTO_T
(
      RTE_BRCH_PROTO_ID VARCHAR2(40)
        , BRCH_NM VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_BRCH_PROTO_T
    ADD CONSTRAINT KREW_RTE_BRCH_PROTO_TP1
PRIMARY KEY (RTE_BRCH_PROTO_ID)
/


CREATE INDEX KREW_RTE_BRCH_PROTO_TI1 
  ON KREW_RTE_BRCH_PROTO_T 
  (BRCH_NM)
/





-----------------------------------------------------------------------------
-- KREW_RTE_BRCH_ST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_BRCH_ST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_BRCH_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_BRCH_ST_T
(
      RTE_BRCH_ST_ID VARCHAR2(40)
        , RTE_BRCH_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_BRCH_ST_T
    ADD CONSTRAINT KREW_RTE_BRCH_ST_TP1
PRIMARY KEY (RTE_BRCH_ST_ID)
/


CREATE INDEX KREW_RTE_BRCH_ST_TI1 
  ON KREW_RTE_BRCH_ST_T 
  (RTE_BRCH_ID, KEY_CD)
/
CREATE INDEX KREW_RTE_BRCH_ST_TI2 
  ON KREW_RTE_BRCH_ST_T 
  (RTE_BRCH_ID)
/
CREATE INDEX KREW_RTE_BRCH_ST_TI3 
  ON KREW_RTE_BRCH_ST_T 
  (KEY_CD, VAL)
/





-----------------------------------------------------------------------------
-- KREW_RTE_BRCH_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_BRCH_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_BRCH_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_BRCH_T
(
      RTE_BRCH_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , PARNT_ID VARCHAR2(40)
        , INIT_RTE_NODE_INSTN_ID VARCHAR2(40)
        , SPLT_RTE_NODE_INSTN_ID VARCHAR2(40)
        , JOIN_RTE_NODE_INSTN_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_BRCH_T
    ADD CONSTRAINT KREW_RTE_BRCH_TP1
PRIMARY KEY (RTE_BRCH_ID)
/


CREATE INDEX KREW_RTE_BRCH_TI1 
  ON KREW_RTE_BRCH_T 
  (NM)
/
CREATE INDEX KREW_RTE_BRCH_TI2 
  ON KREW_RTE_BRCH_T 
  (PARNT_ID)
/
CREATE INDEX KREW_RTE_BRCH_TI3 
  ON KREW_RTE_BRCH_T 
  (INIT_RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_BRCH_TI4 
  ON KREW_RTE_BRCH_T 
  (SPLT_RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_BRCH_TI5 
  ON KREW_RTE_BRCH_T 
  (JOIN_RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_CFG_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_CFG_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_CFG_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_CFG_PARM_T
(
      RTE_NODE_CFG_PARM_ID VARCHAR2(40)
        , RTE_NODE_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(4000)
    

)
/

ALTER TABLE KREW_RTE_NODE_CFG_PARM_T
    ADD CONSTRAINT KREW_RTE_NODE_CFG_PARM_TP1
PRIMARY KEY (RTE_NODE_CFG_PARM_ID)
/


CREATE INDEX KREW_RTE_NODE_CFG_PARM_TI1 
  ON KREW_RTE_NODE_CFG_PARM_T 
  (RTE_NODE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_INSTN_LNK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_INSTN_LNK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_INSTN_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_INSTN_LNK_T
(
      FROM_RTE_NODE_INSTN_ID VARCHAR2(40)
        , TO_RTE_NODE_INSTN_ID VARCHAR2(40)
    

)
/

ALTER TABLE KREW_RTE_NODE_INSTN_LNK_T
    ADD CONSTRAINT KREW_RTE_NODE_INSTN_LNK_TP1
PRIMARY KEY (FROM_RTE_NODE_INSTN_ID,TO_RTE_NODE_INSTN_ID)
/


CREATE INDEX KREW_RTE_NODE_INSTN_LNK_TI1 
  ON KREW_RTE_NODE_INSTN_LNK_T 
  (FROM_RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_LNK_TI2 
  ON KREW_RTE_NODE_INSTN_LNK_T 
  (TO_RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_INSTN_ST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_INSTN_ST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_INSTN_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_INSTN_ST_T
(
      RTE_NODE_INSTN_ST_ID VARCHAR2(40)
        , RTE_NODE_INSTN_ID VARCHAR2(40) NOT NULL
        , KEY_CD VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_NODE_INSTN_ST_T
    ADD CONSTRAINT KREW_RTE_NODE_INSTN_ST_TP1
PRIMARY KEY (RTE_NODE_INSTN_ST_ID)
/


CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI1 
  ON KREW_RTE_NODE_INSTN_ST_T 
  (RTE_NODE_INSTN_ID, KEY_CD)
/
CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI2 
  ON KREW_RTE_NODE_INSTN_ST_T 
  (RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI3 
  ON KREW_RTE_NODE_INSTN_ST_T 
  (KEY_CD, VAL)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_INSTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_INSTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_INSTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_INSTN_T
(
      RTE_NODE_INSTN_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(40) NOT NULL
        , RTE_NODE_ID VARCHAR2(40) NOT NULL
        , BRCH_ID VARCHAR2(40)
        , PROC_RTE_NODE_INSTN_ID VARCHAR2(40)
        , ACTV_IND NUMBER(1) default 0 NOT NULL
        , CMPLT_IND NUMBER(1) default 0 NOT NULL
        , INIT_IND NUMBER(1) default 0 NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_NODE_INSTN_T
    ADD CONSTRAINT KREW_RTE_NODE_INSTN_TP1
PRIMARY KEY (RTE_NODE_INSTN_ID)
/


CREATE INDEX KREW_RTE_NODE_INSTN_TI1 
  ON KREW_RTE_NODE_INSTN_T 
  (DOC_HDR_ID, ACTV_IND, CMPLT_IND)
/
CREATE INDEX KREW_RTE_NODE_INSTN_TI2 
  ON KREW_RTE_NODE_INSTN_T 
  (RTE_NODE_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_TI3 
  ON KREW_RTE_NODE_INSTN_T 
  (BRCH_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_TI4 
  ON KREW_RTE_NODE_INSTN_T 
  (PROC_RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_LNK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_LNK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_LNK_T
(
      FROM_RTE_NODE_ID VARCHAR2(40)
        , TO_RTE_NODE_ID VARCHAR2(40)
    

)
/

ALTER TABLE KREW_RTE_NODE_LNK_T
    ADD CONSTRAINT KREW_RTE_NODE_LNK_TP1
PRIMARY KEY (FROM_RTE_NODE_ID,TO_RTE_NODE_ID)
/


CREATE INDEX KREW_RTE_NODE_LNK_TI1 
  ON KREW_RTE_NODE_LNK_T 
  (FROM_RTE_NODE_ID)
/
CREATE INDEX KREW_RTE_NODE_LNK_TI2 
  ON KREW_RTE_NODE_LNK_T 
  (TO_RTE_NODE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_T
(
      RTE_NODE_ID VARCHAR2(40)
        , DOC_TYP_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , TYP VARCHAR2(255) NOT NULL
        , RTE_MTHD_NM VARCHAR2(255)
        , RTE_MTHD_CD VARCHAR2(2)
        , FNL_APRVR_IND NUMBER(1)
        , MNDTRY_RTE_IND NUMBER(1)
        , ACTVN_TYP VARCHAR2(1)
        , BRCH_PROTO_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 0
        , CONTENT_FRAGMENT VARCHAR2(4000)
        , GRP_ID VARCHAR2(40)
        , NEXT_DOC_STAT VARCHAR2(64)
    

)
/

ALTER TABLE KREW_RTE_NODE_T
    ADD CONSTRAINT KREW_RTE_NODE_TP1
PRIMARY KEY (RTE_NODE_ID)
/


CREATE INDEX KREW_RTE_NODE_TI1 
  ON KREW_RTE_NODE_T 
  (NM, DOC_TYP_ID)
/
CREATE INDEX KREW_RTE_NODE_TI2 
  ON KREW_RTE_NODE_T 
  (DOC_TYP_ID, FNL_APRVR_IND)
/
CREATE INDEX KREW_RTE_NODE_TI3 
  ON KREW_RTE_NODE_T 
  (BRCH_PROTO_ID)
/
CREATE INDEX KREW_RTE_NODE_TI4 
  ON KREW_RTE_NODE_T 
  (DOC_TYP_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_ATTR_T
(
      RULE_ATTR_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , LBL VARCHAR2(2000) NOT NULL
        , RULE_ATTR_TYP_CD VARCHAR2(2000) NOT NULL
        , DESC_TXT VARCHAR2(2000)
        , CLS_NM VARCHAR2(2000)
        , XML CLOB
        , VER_NBR NUMBER(8) default 0
        , APPL_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_RULE_ATTR_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KREW_RULE_ATTR_TC1 UNIQUE (NM)

)
/

ALTER TABLE KREW_RULE_ATTR_T
    ADD CONSTRAINT KREW_RULE_ATTR_TP1
PRIMARY KEY (RULE_ATTR_ID)
/







-----------------------------------------------------------------------------
-- KREW_RULE_EXPR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_EXPR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_EXPR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_EXPR_T
(
      RULE_EXPR_ID VARCHAR2(40)
        , TYP VARCHAR2(256) NOT NULL
        , RULE_EXPR VARCHAR2(4000)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 0
    
    , CONSTRAINT KREW_RULE_EXPR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_RULE_EXPR_T
    ADD CONSTRAINT KREW_RULE_EXPR_TP1
PRIMARY KEY (RULE_EXPR_ID)
/







-----------------------------------------------------------------------------
-- KREW_RULE_EXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_EXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_EXT_T
(
      RULE_EXT_ID VARCHAR2(40)
        , RULE_TMPL_ATTR_ID VARCHAR2(40) NOT NULL
        , RULE_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_EXT_T
    ADD CONSTRAINT KREW_RULE_EXT_TP1
PRIMARY KEY (RULE_EXT_ID)
/


CREATE INDEX KREW_RULE_EXT_T1 
  ON KREW_RULE_EXT_T 
  (RULE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_EXT_VAL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_EXT_VAL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_EXT_VAL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_EXT_VAL_T
(
      RULE_EXT_VAL_ID VARCHAR2(40)
        , RULE_EXT_ID VARCHAR2(40) NOT NULL
        , VAL VARCHAR2(2000) NOT NULL
        , KEY_CD VARCHAR2(2000) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_EXT_VAL_T
    ADD CONSTRAINT KREW_RULE_EXT_VAL_TP1
PRIMARY KEY (RULE_EXT_VAL_ID)
/


CREATE INDEX KREW_RULE_EXT_VAL_T1 
  ON KREW_RULE_EXT_VAL_T 
  (RULE_EXT_ID)
/
CREATE INDEX KREW_RULE_EXT_VAL_T2 
  ON KREW_RULE_EXT_VAL_T 
  (RULE_EXT_VAL_ID, KEY_CD)
/





-----------------------------------------------------------------------------
-- KREW_RULE_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_RSP_T
(
      RULE_RSP_ID VARCHAR2(40)
        , RSP_ID VARCHAR2(40) NOT NULL
        , RULE_ID VARCHAR2(40) NOT NULL
        , PRIO NUMBER(5)
        , ACTN_RQST_CD VARCHAR2(2000)
        , NM VARCHAR2(200)
        , TYP VARCHAR2(1)
        , APPR_PLCY CHAR(1)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_RULE_RSP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_RULE_RSP_T
    ADD CONSTRAINT KREW_RULE_RSP_TP1
PRIMARY KEY (RULE_RSP_ID)
/


CREATE INDEX KREW_RULE_RSP_TI1 
  ON KREW_RULE_RSP_T 
  (RULE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_T
(
      RULE_ID VARCHAR2(40)
        , NM VARCHAR2(256)
        , RULE_TMPL_ID VARCHAR2(40)
        , RULE_EXPR_ID VARCHAR2(40)
        , ACTV_IND NUMBER(1) NOT NULL
        , RULE_BASE_VAL_DESC VARCHAR2(2000)
        , FRC_ACTN NUMBER(1) NOT NULL
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , DOC_HDR_ID VARCHAR2(40)
        , TMPL_RULE_IND NUMBER(1)
        , FRM_DT DATE
        , TO_DT DATE
        , DACTVN_DT DATE
        , CUR_IND NUMBER(1) default 0
        , RULE_VER_NBR NUMBER(8) default 0
        , DLGN_IND NUMBER(1)
        , PREV_VER_RULE_ID VARCHAR2(40)
        , ACTVN_DT DATE
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_RULE_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_RULE_T
    ADD CONSTRAINT KREW_RULE_TP1
PRIMARY KEY (RULE_ID)
/







-----------------------------------------------------------------------------
-- KREW_RULE_TMPL_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_TMPL_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_TMPL_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_TMPL_ATTR_T
(
      RULE_TMPL_ATTR_ID VARCHAR2(40)
        , RULE_TMPL_ID VARCHAR2(40) NOT NULL
        , RULE_ATTR_ID VARCHAR2(40) NOT NULL
        , REQ_IND NUMBER(1) NOT NULL
        , ACTV_IND NUMBER(1) NOT NULL
        , DSPL_ORD NUMBER(5) NOT NULL
        , DFLT_VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_RULE_TMPL_ATTR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KREW_RULE_TMPL_ATTR_T
    ADD CONSTRAINT KREW_RULE_TMPL_ATTR_TP1
PRIMARY KEY (RULE_TMPL_ATTR_ID)
/


CREATE INDEX KREW_RULE_TMPL_ATTR_TI1 
  ON KREW_RULE_TMPL_ATTR_T 
  (RULE_TMPL_ID)
/
CREATE INDEX KREW_RULE_TMPL_ATTR_TI2 
  ON KREW_RULE_TMPL_ATTR_T 
  (RULE_ATTR_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_TMPL_OPTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_TMPL_OPTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_TMPL_OPTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_TMPL_OPTN_T
(
      RULE_TMPL_OPTN_ID VARCHAR2(40)
        , RULE_TMPL_ID VARCHAR2(40)
        , KEY_CD VARCHAR2(250)
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_TMPL_OPTN_T
    ADD CONSTRAINT KREW_RULE_TMPL_OPTN_TP1
PRIMARY KEY (RULE_TMPL_OPTN_ID)
/







-----------------------------------------------------------------------------
-- KREW_RULE_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_TMPL_T
(
      RULE_TMPL_ID VARCHAR2(40)
        , NM VARCHAR2(250) NOT NULL
        , RULE_TMPL_DESC VARCHAR2(2000)
        , DLGN_RULE_TMPL_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KREW_RULE_TMPL_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KREW_RULE_TMPL_TI1 UNIQUE (NM)

)
/

ALTER TABLE KREW_RULE_TMPL_T
    ADD CONSTRAINT KREW_RULE_TMPL_TP1
PRIMARY KEY (RULE_TMPL_ID)
/







-----------------------------------------------------------------------------
-- KREW_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_TYP_ATTR_T
(
      TYP_ATTR_ID VARCHAR2(40)
        , SEQ_NO NUMBER(5) NOT NULL
        , TYP_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(255) NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KREW_TYP_ATTR_TC1 UNIQUE (TYP_ID, ATTR_DEFN_ID)

)
/

ALTER TABLE KREW_TYP_ATTR_T
    ADD CONSTRAINT KREW_TYP_ATTR_TP1
PRIMARY KEY (TYP_ATTR_ID)
/


CREATE INDEX KREW_TYP_ATTR_TI1 
  ON KREW_TYP_ATTR_T 
  (ATTR_DEFN_ID)
/
CREATE INDEX KREW_TYP_ATTR_TI2 
  ON KREW_TYP_ATTR_T 
  (TYP_ID)
/





-----------------------------------------------------------------------------
-- KREW_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_TYP_T
(
      TYP_ID VARCHAR2(40)
        , NM VARCHAR2(100) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , SRVC_NM VARCHAR2(200)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KREW_TYP_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KREW_TYP_T
    ADD CONSTRAINT KREW_TYP_TP1
PRIMARY KEY (TYP_ID)
/







-----------------------------------------------------------------------------
-- KREW_USR_OPTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_USR_OPTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_USR_OPTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_USR_OPTN_T
(
      PRNCPL_ID VARCHAR2(40)
        , PRSN_OPTN_ID VARCHAR2(200)
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_USR_OPTN_T
    ADD CONSTRAINT KREW_USR_OPTN_TP1
PRIMARY KEY (PRNCPL_ID,PRSN_OPTN_ID)
/


CREATE INDEX KREW_USR_OPTN_TI1 
  ON KREW_USR_OPTN_T 
  (PRNCPL_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ADDR_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ADDR_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ADDR_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ADDR_TYP_T
(
      ADDR_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ADDR_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_ADDR_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_ADDR_TYP_T
    ADD CONSTRAINT KRIM_ADDR_TYP_TP1
PRIMARY KEY (ADDR_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_AFLTN_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_AFLTN_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_AFLTN_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_AFLTN_TYP_T
(
      AFLTN_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , EMP_AFLTN_TYP_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_AFLTN_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_AFLTN_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_AFLTN_TYP_T
    ADD CONSTRAINT KRIM_AFLTN_TYP_TP1
PRIMARY KEY (AFLTN_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_ATTR_DEFN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ATTR_DEFN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ATTR_DEFN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ATTR_DEFN_T
(
      KIM_ATTR_DEFN_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(100)
        , LBL VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , NMSPC_CD VARCHAR2(40)
        , CMPNT_NM VARCHAR2(100)
    
    , CONSTRAINT KRIM_ATTR_DEFN_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ATTR_DEFN_T
    ADD CONSTRAINT KRIM_ATTR_DEFN_TP1
PRIMARY KEY (KIM_ATTR_DEFN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_CTZNSHP_STAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_CTZNSHP_STAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_CTZNSHP_STAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_CTZNSHP_STAT_T
(
      CTZNSHP_STAT_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_CTZNSHP_STAT_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_CTZNSHP_STAT_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_CTZNSHP_STAT_T
    ADD CONSTRAINT KRIM_CTZNSHP_STAT_TP1
PRIMARY KEY (CTZNSHP_STAT_CD)
/







-----------------------------------------------------------------------------
-- KRIM_DLGN_MBR_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_DLGN_MBR_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_DLGN_MBR_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_DLGN_MBR_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DLGN_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    
    , CONSTRAINT KRIM_DLGN_MBR_ATTR_DATA_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_DLGN_MBR_ATTR_DATA_T
    ADD CONSTRAINT KRIM_DLGN_MBR_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_DLGN_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_DLGN_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_DLGN_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_DLGN_MBR_T
(
      DLGN_MBR_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , DLGN_ID VARCHAR2(40)
        , MBR_ID VARCHAR2(40)
        , MBR_TYP_CD CHAR(1) default 'P'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , LAST_UPDT_DT DATE default SYSDATE
        , ROLE_MBR_ID VARCHAR2(40)
    
    , CONSTRAINT KRIM_DLGN_MBR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_DLGN_MBR_T
    ADD CONSTRAINT KRIM_DLGN_MBR_TP1
PRIMARY KEY (DLGN_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_DLGN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_DLGN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_DLGN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_DLGN_T
(
      DLGN_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , ROLE_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , DLGN_TYP_CD VARCHAR2(1)
    
    , CONSTRAINT KRIM_DLGN_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_DLGN_T
    ADD CONSTRAINT KRIM_DLGN_TP1
PRIMARY KEY (DLGN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_EMAIL_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EMAIL_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EMAIL_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EMAIL_TYP_T
(
      EMAIL_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_EMAIL_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_EMAIL_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_EMAIL_TYP_T
    ADD CONSTRAINT KRIM_EMAIL_TYP_TP1
PRIMARY KEY (EMAIL_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_EMP_STAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EMP_STAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EMP_STAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EMP_STAT_T
(
      EMP_STAT_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_EMP_STAT_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_EMP_STAT_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_EMP_STAT_T
    ADD CONSTRAINT KRIM_EMP_STAT_TP1
PRIMARY KEY (EMP_STAT_CD)
/







-----------------------------------------------------------------------------
-- KRIM_EMP_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EMP_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EMP_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EMP_TYP_T
(
      EMP_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_EMP_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_EMP_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_EMP_TYP_T
    ADD CONSTRAINT KRIM_EMP_TYP_TP1
PRIMARY KEY (EMP_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_ADDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_ADDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_ADDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_ADDR_T
(
      ENTITY_ADDR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENT_TYP_CD VARCHAR2(40)
        , ADDR_TYP_CD VARCHAR2(40)
        , ADDR_LINE_1 VARCHAR2(45)
        , ADDR_LINE_2 VARCHAR2(45)
        , ADDR_LINE_3 VARCHAR2(45)
        , CITY VARCHAR2(30)
        , STATE_PVC_CD VARCHAR2(2)
        , POSTAL_CD VARCHAR2(20)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
        , ATTN_LINE VARCHAR2(45)
        , ADDR_FMT VARCHAR2(256)
        , MOD_DT DATE default SYSDATE
        , VALID_DT DATE
        , VALID_IND VARCHAR2(1)
        , NOTE_MSG VARCHAR2(1024)
    
    , CONSTRAINT KRIM_ENTITY_ADDR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_ADDR_T
    ADD CONSTRAINT KRIM_ENTITY_ADDR_TP1
PRIMARY KEY (ENTITY_ADDR_ID)
/


CREATE INDEX KRIM_ENTITY_ADDR_TI1 
  ON KRIM_ENTITY_ADDR_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_AFLTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_AFLTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_AFLTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_AFLTN_T
(
      ENTITY_AFLTN_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , AFLTN_TYP_CD VARCHAR2(40)
        , CAMPUS_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_AFLTN_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_AFLTN_T
    ADD CONSTRAINT KRIM_ENTITY_AFLTN_TP1
PRIMARY KEY (ENTITY_AFLTN_ID)
/


CREATE INDEX KRIM_ENTITY_AFLTN_TI1 
  ON KRIM_ENTITY_AFLTN_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_BIO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_BIO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_BIO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_BIO_T
(
      ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , BIRTH_DT DATE
        , GNDR_CD VARCHAR2(1) NOT NULL
        , LAST_UPDT_DT DATE default SYSDATE
        , DECEASED_DT DATE
        , MARITAL_STATUS VARCHAR2(40)
        , PRIM_LANG_CD VARCHAR2(40)
        , SEC_LANG_CD VARCHAR2(40)
        , BIRTH_CNTRY_CD VARCHAR2(2)
        , BIRTH_STATE_PVC_CD VARCHAR2(2)
        , BIRTH_CITY VARCHAR2(30)
        , GEO_ORIGIN VARCHAR2(100)
        , NOTE_MSG VARCHAR2(1024)
        , GNDR_CHG_CD VARCHAR2(20)
    
    , CONSTRAINT KRIM_ENTITY_BIO_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_BIO_T
    ADD CONSTRAINT KRIM_ENTITY_BIO_TP1
PRIMARY KEY (ENTITY_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_CACHE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_CACHE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_CACHE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_CACHE_T
(
      ENTITY_ID VARCHAR2(40)
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , PRNCPL_NM VARCHAR2(40)
        , ENTITY_TYP_CD VARCHAR2(40)
        , FIRST_NM VARCHAR2(40)
        , MIDDLE_NM VARCHAR2(40)
        , LAST_NM VARCHAR2(40)
        , PRSN_NM VARCHAR2(255)
        , CAMPUS_CD VARCHAR2(40)
        , PRMRY_DEPT_CD VARCHAR2(40)
        , EMP_ID VARCHAR2(40)
        , LAST_UPDT_TS DATE
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KRIM_ENTITY_CACHE_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_ENTITY_CACHE_TC1 UNIQUE (PRNCPL_ID)

)
/

ALTER TABLE KRIM_ENTITY_CACHE_T
    ADD CONSTRAINT KRIM_ENTITY_CACHE_TP1
PRIMARY KEY (ENTITY_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_CTZNSHP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_CTZNSHP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_CTZNSHP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_CTZNSHP_T
(
      ENTITY_CTZNSHP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , CTZNSHP_STAT_CD VARCHAR2(40)
        , STRT_DT DATE
        , END_DT DATE
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_CTZNSHP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_CTZNSHP_T
    ADD CONSTRAINT KRIM_ENTITY_CTZNSHP_TP1
PRIMARY KEY (ENTITY_CTZNSHP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_EMAIL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_EMAIL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_EMAIL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_EMAIL_T
(
      ENTITY_EMAIL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENT_TYP_CD VARCHAR2(40)
        , EMAIL_TYP_CD VARCHAR2(40)
        , EMAIL_ADDR VARCHAR2(200)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_EMAIL_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_EMAIL_T
    ADD CONSTRAINT KRIM_ENTITY_EMAIL_TP1
PRIMARY KEY (ENTITY_EMAIL_ID)
/


CREATE INDEX KRIM_ENTITY_EMAIL_TI1 
  ON KRIM_ENTITY_EMAIL_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_EMP_INFO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_EMP_INFO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_EMP_INFO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_EMP_INFO_T
(
      ENTITY_EMP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENTITY_AFLTN_ID VARCHAR2(40)
        , EMP_STAT_CD VARCHAR2(40)
        , EMP_TYP_CD VARCHAR2(40)
        , BASE_SLRY_AMT NUMBER(15,2)
        , PRMRY_IND VARCHAR2(1)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
        , PRMRY_DEPT_CD VARCHAR2(40)
        , EMP_ID VARCHAR2(40)
        , EMP_REC_ID VARCHAR2(40)
    
    , CONSTRAINT KRIM_ENTITY_EMP_INFO_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_EMP_INFO_T
    ADD CONSTRAINT KRIM_ENTITY_EMP_INFO_TP1
PRIMARY KEY (ENTITY_EMP_ID)
/


CREATE INDEX KRIM_ENTITY_EMP_INFO_TI1 
  ON KRIM_ENTITY_EMP_INFO_T 
  (ENTITY_ID)
/
CREATE INDEX KRIM_ENTITY_EMP_INFO_TI2 
  ON KRIM_ENTITY_EMP_INFO_T 
  (ENTITY_AFLTN_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_ENT_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_ENT_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_ENT_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_ENT_TYP_T
(
      ENT_TYP_CD VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_ENT_TYP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_ENT_TYP_T
    ADD CONSTRAINT KRIM_ENTITY_ENT_TYP_TP1
PRIMARY KEY (ENT_TYP_CD,ENTITY_ID)
/


CREATE INDEX KRIM_ENTITY_ENT_TYP_TI1 
  ON KRIM_ENTITY_ENT_TYP_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_ETHNIC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_ETHNIC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_ETHNIC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_ETHNIC_T
(
      ID VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , ETHNCTY_CD VARCHAR2(40)
        , SUB_ETHNCTY_CD VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KRIM_ENTITY_ETHNIC_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_ETHNIC_T
    ADD CONSTRAINT KRIM_ENTITY_ETHNIC_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_EXT_ID_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_EXT_ID_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_EXT_ID_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_EXT_ID_T
(
      ENTITY_EXT_ID_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , EXT_ID_TYP_CD VARCHAR2(40)
        , EXT_ID VARCHAR2(100)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_EXT_ID_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_EXT_ID_T
    ADD CONSTRAINT KRIM_ENTITY_EXT_ID_TP1
PRIMARY KEY (ENTITY_EXT_ID_ID)
/


CREATE INDEX KRIM_ENTITY_EXT_ID_TI1 
  ON KRIM_ENTITY_EXT_ID_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_NM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_NM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_NM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_NM_T
(
      ENTITY_NM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , NM_TYP_CD VARCHAR2(40)
        , FIRST_NM VARCHAR2(40)
        , MIDDLE_NM VARCHAR2(40)
        , LAST_NM VARCHAR2(80)
        , SUFFIX_NM VARCHAR2(20)
        , PREFIX_NM VARCHAR2(20)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
        , TITLE_NM VARCHAR2(20)
        , NOTE_MSG VARCHAR2(1024)
        , NM_CHNG_DT DATE
    
    , CONSTRAINT KRIM_ENTITY_NM_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_NM_T
    ADD CONSTRAINT KRIM_ENTITY_NM_TP1
PRIMARY KEY (ENTITY_NM_ID)
/


CREATE INDEX KRIM_ENTITY_NM_TI1 
  ON KRIM_ENTITY_NM_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_PHONE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_PHONE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_PHONE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_PHONE_T
(
      ENTITY_PHONE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENT_TYP_CD VARCHAR2(40)
        , PHONE_TYP_CD VARCHAR2(40)
        , PHONE_NBR VARCHAR2(20)
        , PHONE_EXTN_NBR VARCHAR2(8)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_PHONE_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_PHONE_T
    ADD CONSTRAINT KRIM_ENTITY_PHONE_TP1
PRIMARY KEY (ENTITY_PHONE_ID)
/


CREATE INDEX KRIM_ENTITY_PHONE_TI1 
  ON KRIM_ENTITY_PHONE_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_PRIV_PREF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_PRIV_PREF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_PRIV_PREF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_PRIV_PREF_T
(
      ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SUPPRESS_NM_IND VARCHAR2(1) default 'N'
        , SUPPRESS_EMAIL_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_ADDR_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PHONE_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PRSNL_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_PRIV_PREF_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_PRIV_PREF_T
    ADD CONSTRAINT KRIM_ENTITY_PRIV_PREF_TP1
PRIMARY KEY (ENTITY_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_RESIDENCY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_RESIDENCY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_RESIDENCY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_RESIDENCY_T
(
      ID VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , DETERMINATION_METHOD VARCHAR2(40)
        , IN_STATE VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KRIM_ENTITY_RESIDENCY_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_RESIDENCY_T
    ADD CONSTRAINT KRIM_ENTITY_RESIDENCY_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_T
(
      ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENTITY_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_T
    ADD CONSTRAINT KRIM_ENTITY_TP1
PRIMARY KEY (ENTITY_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENTITY_VISA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_VISA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_VISA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_VISA_T
(
      ID VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , VISA_TYPE_KEY VARCHAR2(40)
        , VISA_ENTRY VARCHAR2(40)
        , VISA_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT KRIM_ENTITY_VISA_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ENTITY_VISA_T
    ADD CONSTRAINT KRIM_ENTITY_VISA_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KRIM_ENT_NM_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENT_NM_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENT_NM_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENT_NM_TYP_T
(
      ENT_NM_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ENT_NM_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_ENT_NM_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_ENT_NM_TYP_T
    ADD CONSTRAINT KRIM_ENT_NM_TYP_TP1
PRIMARY KEY (ENT_NM_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_ENT_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENT_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENT_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENT_TYP_T
(
      ENT_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , DISPLAY_SORT_CD VARCHAR2(2)
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_ENT_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_ENT_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_ENT_TYP_T
    ADD CONSTRAINT KRIM_ENT_TYP_TP1
PRIMARY KEY (ENT_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_EXT_ID_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EXT_ID_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EXT_ID_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EXT_ID_TYP_T
(
      EXT_ID_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ENCR_REQ_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_EXT_ID_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_EXT_ID_TYP_TC1 UNIQUE (NM)

)
/

ALTER TABLE KRIM_EXT_ID_TYP_T
    ADD CONSTRAINT KRIM_EXT_ID_TYP_TP1
PRIMARY KEY (EXT_ID_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_GRP_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    
    , CONSTRAINT KRIM_GRP_ATTR_DATA_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_GRP_ATTR_DATA_T
    ADD CONSTRAINT KRIM_GRP_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_GRP_DOCUMENT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_DOCUMENT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_DOCUMENT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_DOCUMENT_T
(
      FDOC_NBR VARCHAR2(14)
        , GRP_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , GRP_NMSPC VARCHAR2(100) NOT NULL
        , GRP_NM VARCHAR2(400)
        , GRP_DESC VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_GRP_DOCUMENT_T
    ADD CONSTRAINT KRIM_GRP_DOCUMENT_TP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_GRP_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_MBR_T
(
      GRP_MBR_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , GRP_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40) NOT NULL
        , MBR_TYP_CD CHAR(1) default 'P' NOT NULL
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_GRP_MBR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_GRP_MBR_T
    ADD CONSTRAINT KRIM_GRP_MBR_TP1
PRIMARY KEY (GRP_MBR_ID)
/


CREATE INDEX KRIM_GRP_MBR_TI1 
  ON KRIM_GRP_MBR_T 
  (MBR_ID)
/





-----------------------------------------------------------------------------
-- KRIM_GRP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_T
(
      GRP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_NM VARCHAR2(80) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , GRP_DESC VARCHAR2(4000)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_GRP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_GRP_TC1 UNIQUE (GRP_NM, NMSPC_CD)

)
/

ALTER TABLE KRIM_GRP_T
    ADD CONSTRAINT KRIM_GRP_TP1
PRIMARY KEY (GRP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PERM_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERM_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERM_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERM_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PERM_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    
    , CONSTRAINT KRIM_PERM_ATTR_DATA_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_PERM_ATTR_DATA_T
    ADD CONSTRAINT KRIM_PERM_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_PERM_ATTR_DATA_TI1 
  ON KRIM_PERM_ATTR_DATA_T 
  (PERM_ID)
/





-----------------------------------------------------------------------------
-- KRIM_PERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERM_T
(
      PERM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PERM_TMPL_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_PERM_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_PERM_T_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRIM_PERM_T
    ADD CONSTRAINT KRIM_PERM_TP1
PRIMARY KEY (PERM_ID)
/


CREATE INDEX KRIM_PERM_TI1 
  ON KRIM_PERM_T 
  (PERM_TMPL_ID)
/
CREATE INDEX KRIM_PERM_TI2 
  ON KRIM_PERM_T 
  (PERM_TMPL_ID, ACTV_IND)
/





-----------------------------------------------------------------------------
-- KRIM_PERM_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERM_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERM_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERM_TMPL_T
(
      PERM_TMPL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(400)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_PERM_TMPL_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_PERM_TMPL_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRIM_PERM_TMPL_T
    ADD CONSTRAINT KRIM_PERM_TMPL_TP1
PRIMARY KEY (PERM_TMPL_ID)
/


CREATE INDEX KRIM_PERM_TMPL_TI1 
  ON KRIM_PERM_TMPL_T 
  (NMSPC_CD, NM)
/





-----------------------------------------------------------------------------
-- KRIM_PERSON_DOCUMENT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERSON_DOCUMENT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERSON_DOCUMENT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERSON_DOCUMENT_T
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , PRNCPL_NM VARCHAR2(100) NOT NULL
        , PRNCPL_PSWD VARCHAR2(400)
        , UNIV_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PERSON_DOCUMENT_T
    ADD CONSTRAINT KRIM_PERSON_DOCUMENT_TP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PHONE_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PHONE_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PHONE_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PHONE_TYP_T
(
      PHONE_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PHONE_TYP_NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_PHONE_TYP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_PHONE_TYP_TC1 UNIQUE (PHONE_TYP_NM)

)
/

ALTER TABLE KRIM_PHONE_TYP_T
    ADD CONSTRAINT KRIM_PHONE_TYP_TP1
PRIMARY KEY (PHONE_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ADDR_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ADDR_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ADDR_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ADDR_MT
(
      FDOC_NBR VARCHAR2(14)
        , ADDR_TYP_CD VARCHAR2(40)
        , ADDR_LINE_1 VARCHAR2(50)
        , ADDR_LINE_2 VARCHAR2(50)
        , ADDR_LINE_3 VARCHAR2(50)
        , CITY VARCHAR2(30)
        , STATE_PVC_CD VARCHAR2(2)
        , POSTAL_CD VARCHAR2(20)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DISPLAY_SORT_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ENTITY_ADDR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , EDIT_FLAG VARCHAR2(1) default 'N'
        , ATTN_LINE VARCHAR2(45)
        , ADDR_FMT VARCHAR2(256)
        , MOD_DT DATE default SYSDATE
        , VALID_DT DATE
        , VALID_IND VARCHAR2(1)
        , NOTE_MSG VARCHAR2(1024)
    

)
/

ALTER TABLE KRIM_PND_ADDR_MT
    ADD CONSTRAINT KRIM_PND_ADDR_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_ADDR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_AFLTN_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_AFLTN_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_AFLTN_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_AFLTN_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_AFLTN_ID VARCHAR2(40)
        , AFLTN_TYP_CD VARCHAR2(40)
        , CAMPUS_CD VARCHAR2(2)
        , EDIT_FLAG VARCHAR2(1) default 'N'
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
    

)
/

ALTER TABLE KRIM_PND_AFLTN_MT
    ADD CONSTRAINT KRIM_PND_AFLTN_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_AFLTN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_CTZNSHP_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_CTZNSHP_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_CTZNSHP_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_CTZNSHP_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_CTZNSHP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , CTZNSHP_STAT_CD VARCHAR2(40)
        , STRT_DT DATE
        , END_DT DATE
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_CTZNSHP_MT
    ADD CONSTRAINT KRIM_PND_CTZNSHP_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_CTZNSHP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_DLGN_MBR_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_DLGN_MBR_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_DLGN_MBR_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_DLGN_MBR_ATTR_DATA_T
(
      FDOC_NBR VARCHAR2(14)
        , ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DLGN_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40)
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_DLGN_MBR_ATTR_DATA_T
    ADD CONSTRAINT KRIM_PND_DLGN_MBR_ATTR_DATAP1
PRIMARY KEY (FDOC_NBR,ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_DLGN_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_DLGN_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_DLGN_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_DLGN_MBR_T
(
      FDOC_NBR VARCHAR2(14)
        , DLGN_MBR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DLGN_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40)
        , MBR_NM VARCHAR2(40)
        , MBR_TYP_CD VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , ROLE_MBR_ID VARCHAR2(40)
    

)
/

ALTER TABLE KRIM_PND_DLGN_MBR_T
    ADD CONSTRAINT KRIM_PND_DLGN_MBR_TP1
PRIMARY KEY (FDOC_NBR,DLGN_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_DLGN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_DLGN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_DLGN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_DLGN_T
(
      FDOC_NBR VARCHAR2(14)
        , DLGN_ID VARCHAR2(40)
        , ROLE_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , KIM_TYP_ID VARCHAR2(40)
        , DLGN_TYP_CD VARCHAR2(100) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PND_DLGN_T
    ADD CONSTRAINT KRIM_PND_DLGN_TP1
PRIMARY KEY (FDOC_NBR,DLGN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_EMAIL_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_EMAIL_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_EMAIL_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_EMAIL_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_EMAIL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENT_TYP_CD VARCHAR2(40)
        , EMAIL_TYP_CD VARCHAR2(40)
        , EMAIL_ADDR VARCHAR2(200)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_EMAIL_MT
    ADD CONSTRAINT KRIM_PND_EMAIL_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_EMAIL_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_EMP_INFO_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_EMP_INFO_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_EMP_INFO_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_EMP_INFO_MT
(
      FDOC_NBR VARCHAR2(14)
        , PRMRY_DEPT_CD VARCHAR2(40)
        , ENTITY_EMP_ID VARCHAR2(40)
        , EMP_ID VARCHAR2(40)
        , EMP_REC_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_AFLTN_ID VARCHAR2(40)
        , EMP_STAT_CD VARCHAR2(40)
        , EMP_TYP_CD VARCHAR2(40)
        , BASE_SLRY_AMT NUMBER(15,2)
        , PRMRY_IND VARCHAR2(1)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_EMP_INFO_MT
    ADD CONSTRAINT KRIM_PND_EMP_INFO_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_EMP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_GRP_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_GRP_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_GRP_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_GRP_ATTR_DATA_T
(
      FDOC_NBR VARCHAR2(14)
        , ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40)
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_GRP_ATTR_DATA_T
    ADD CONSTRAINT KRIM_PND_GRP_ATTR_DATA_TP1
PRIMARY KEY (FDOC_NBR,ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_GRP_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_GRP_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_GRP_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_GRP_MBR_T
(
      FDOC_NBR VARCHAR2(14)
        , GRP_MBR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40)
        , MBR_NM VARCHAR2(100)
        , MBR_TYP_CD VARCHAR2(40) NOT NULL
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
    

)
/

ALTER TABLE KRIM_PND_GRP_MBR_T
    ADD CONSTRAINT KRIM_PND_GRP_MBR_TP1
PRIMARY KEY (FDOC_NBR,GRP_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_GRP_PRNCPL_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_GRP_PRNCPL_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_GRP_PRNCPL_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_GRP_PRNCPL_MT
(
      GRP_MBR_ID VARCHAR2(40)
        , FDOC_NBR VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40) NOT NULL
        , PRNCPL_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , GRP_NM VARCHAR2(80) NOT NULL
        , GRP_TYPE VARCHAR2(80)
        , KIM_TYP_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40)
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_GRP_PRNCPL_MT
    ADD CONSTRAINT KRIM_PND_GRP_PRNCPL_MTP1
PRIMARY KEY (GRP_MBR_ID,FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PND_NM_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_NM_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_NM_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_NM_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_NM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM_TYP_CD VARCHAR2(40)
        , FIRST_NM VARCHAR2(40)
        , MIDDLE_NM VARCHAR2(40)
        , LAST_NM VARCHAR2(80)
        , SUFFIX_NM VARCHAR2(20)
        , PREFIX_NM VARCHAR2(20)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
        , TITLE_NM VARCHAR2(20)
        , NOTE_MSG VARCHAR2(1024)
        , NM_CHNG_DT DATE
    

)
/

ALTER TABLE KRIM_PND_NM_MT
    ADD CONSTRAINT KRIM_PND_NM_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_NM_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_PHONE_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_PHONE_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_PHONE_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_PHONE_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_PHONE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENT_TYP_CD VARCHAR2(40)
        , PHONE_TYP_CD VARCHAR2(40)
        , PHONE_NBR VARCHAR2(20)
        , PHONE_EXTN_NBR VARCHAR2(8)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_PHONE_MT
    ADD CONSTRAINT KRIM_PND_PHONE_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_PHONE_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_PRIV_PREF_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_PRIV_PREF_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_PRIV_PREF_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_PRIV_PREF_MT
(
      FDOC_NBR VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SUPPRESS_NM_IND VARCHAR2(1) default 'N'
        , SUPPRESS_EMAIL_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_ADDR_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PHONE_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PRSNL_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_PRIV_PREF_MT
    ADD CONSTRAINT KRIM_PND_PRIV_PREF_MTP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_MBR_ATTR_DATA_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_MBR_ATTR_DATA_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_MBR_ATTR_DATA_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_MBR_ATTR_DATA_MT
(
      FDOC_NBR VARCHAR2(14)
        , ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40)
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_MBR_ATTR_DATA_MT
    ADD CONSTRAINT KRIM_PND_ROLE_MBR_ATTR_DATAP1
PRIMARY KEY (FDOC_NBR,ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_MBR_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_MBR_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_MBR_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_MBR_MT
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_MBR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40)
        , MBR_TYP_CD VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_MBR_MT
    ADD CONSTRAINT KRIM_PND_ROLE_MBR_MTP1
PRIMARY KEY (FDOC_NBR,ROLE_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_MT
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_NM VARCHAR2(100) NOT NULL
        , KIM_TYP_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , NMSPC_CD VARCHAR2(40)
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_MT
    ADD CONSTRAINT KRIM_PND_ROLE_MTP1
PRIMARY KEY (FDOC_NBR,ROLE_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_PERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_PERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_PERM_T
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_PERM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , PERM_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PND_ROLE_PERM_T
    ADD CONSTRAINT KRIM_PND_ROLE_PERM_TP1
PRIMARY KEY (FDOC_NBR,ROLE_PERM_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_RSP_ACTN_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_RSP_ACTN_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_RSP_ACTN_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_RSP_ACTN_MT
(
      ROLE_RSP_ACTN_ID VARCHAR2(40)
        , FDOC_NBR VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTN_TYP_CD VARCHAR2(40)
        , PRIORITY_NBR NUMBER(3)
        , ACTN_PLCY_CD VARCHAR2(40)
        , ROLE_MBR_ID VARCHAR2(40)
        , ROLE_RSP_ID VARCHAR2(40)
        , EDIT_FLAG VARCHAR2(1) default 'N'
        , FRC_ACTN VARCHAR2(1)
    

)
/

ALTER TABLE KRIM_PND_ROLE_RSP_ACTN_MT
    ADD CONSTRAINT KRIM_PND_ROLE_RSP_ACTN_MTP1
PRIMARY KEY (ROLE_RSP_ACTN_ID,FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_RSP_T
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_RSP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , RSP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PND_ROLE_RSP_T
    ADD CONSTRAINT KRIM_PND_ROLE_RSP_TP1
PRIMARY KEY (FDOC_NBR,ROLE_RSP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PRNCPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PRNCPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PRNCPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PRNCPL_T
(
      PRNCPL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_NM VARCHAR2(100) NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , PRNCPL_PSWD VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_PRNCPL_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_PRNCPL_TC1 UNIQUE (PRNCPL_NM)

)
/

ALTER TABLE KRIM_PRNCPL_T
    ADD CONSTRAINT KRIM_PRNCPL_TP1
PRIMARY KEY (PRNCPL_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ROLE_DOCUMENT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_DOCUMENT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_DOCUMENT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_DOCUMENT_T
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_TYP_ID VARCHAR2(40) NOT NULL
        , ROLE_NMSPC VARCHAR2(100) NOT NULL
        , ROLE_NM VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DESC_TXT VARCHAR2(4000)
    

)
/

ALTER TABLE KRIM_ROLE_DOCUMENT_T
    ADD CONSTRAINT KRIM_ROLE_DOCUMENT_TP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_ROLE_MBR_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_MBR_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_MBR_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_MBR_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    
    , CONSTRAINT KRIM_ROLE_MBR_ATTR_DATA_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ROLE_MBR_ATTR_DATA_T
    ADD CONSTRAINT KRIM_ROLE_MBR_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_ROLE_MBR_ATTR_DATA_TI1 
  ON KRIM_ROLE_MBR_ATTR_DATA_T 
  (ROLE_MBR_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_MBR_T
(
      ROLE_MBR_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40) NOT NULL
        , MBR_TYP_CD CHAR(1) default 'P' NOT NULL
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ROLE_MBR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ROLE_MBR_T
    ADD CONSTRAINT KRIM_ROLE_MBR_TP1
PRIMARY KEY (ROLE_MBR_ID)
/


CREATE INDEX KRIM_ROLE_MBR_TI1 
  ON KRIM_ROLE_MBR_T 
  (MBR_ID)
/
CREATE INDEX KRIM_ROLE_MBR_TI2 
  ON KRIM_ROLE_MBR_T 
  (ROLE_ID, MBR_ID, MBR_TYP_CD)
/
CREATE INDEX KRIM_ROLE_MBR_TI3 
  ON KRIM_ROLE_MBR_T 
  (MBR_ID, MBR_TYP_CD)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_PERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_PERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_PERM_T
(
      ROLE_PERM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , PERM_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_ROLE_PERM_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ROLE_PERM_T
    ADD CONSTRAINT KRIM_ROLE_PERM_TP1
PRIMARY KEY (ROLE_PERM_ID)
/


CREATE INDEX KRIM_ROLE_PERM_TI1 
  ON KRIM_ROLE_PERM_T 
  (PERM_ID)
/
CREATE INDEX KRIM_ROLE_PERM_TI2 
  ON KRIM_ROLE_PERM_T 
  (PERM_ID, ACTV_IND)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_RSP_ACTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_RSP_ACTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_RSP_ACTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_RSP_ACTN_T
(
      ROLE_RSP_ACTN_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTN_TYP_CD VARCHAR2(40)
        , PRIORITY_NBR NUMBER(3)
        , ACTN_PLCY_CD VARCHAR2(40)
        , ROLE_MBR_ID VARCHAR2(40)
        , ROLE_RSP_ID VARCHAR2(40)
        , FRC_ACTN VARCHAR2(1) default 'N'
    
    , CONSTRAINT KRIM_ROLE_RSP_ACTN_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_ROLE_RSP_ACTN_TC1 UNIQUE (ROLE_RSP_ID, ROLE_MBR_ID)

)
/

ALTER TABLE KRIM_ROLE_RSP_ACTN_T
    ADD CONSTRAINT KRIM_ROLE_RSP_ACTN_TP1
PRIMARY KEY (ROLE_RSP_ACTN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_ROLE_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_RSP_T
(
      ROLE_RSP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40)
        , RSP_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_ROLE_RSP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_ROLE_RSP_T
    ADD CONSTRAINT KRIM_ROLE_RSP_TP1
PRIMARY KEY (ROLE_RSP_ID)
/


CREATE INDEX KRIM_ROLE_RSP_TI1 
  ON KRIM_ROLE_RSP_T 
  (RSP_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_T
(
      ROLE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_NM VARCHAR2(80) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , DESC_TXT VARCHAR2(4000)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE default SYSDATE
    
    , CONSTRAINT KRIM_ROLE_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_ROLE_TC1 UNIQUE (ROLE_NM, NMSPC_CD)

)
/

ALTER TABLE KRIM_ROLE_T
    ADD CONSTRAINT KRIM_ROLE_TP1
PRIMARY KEY (ROLE_ID)
/







-----------------------------------------------------------------------------
-- KRIM_RSP_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_RSP_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_RSP_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_RSP_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , RSP_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    
    , CONSTRAINT KRIM_RSP_ATTR_DATA_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_RSP_ATTR_DATA_T
    ADD CONSTRAINT KRIM_RSP_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_RSP_T
(
      RSP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , RSP_TMPL_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_RSP_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_RSP_T_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRIM_RSP_T
    ADD CONSTRAINT KRIM_RSP_TP1
PRIMARY KEY (RSP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_RSP_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_RSP_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_RSP_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_RSP_TMPL_T
(
      RSP_TMPL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , KIM_TYP_ID VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_RSP_TMPL_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_RSP_TMPL_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRIM_RSP_TMPL_T
    ADD CONSTRAINT KRIM_RSP_TMPL_TP1
PRIMARY KEY (RSP_TMPL_ID)
/







-----------------------------------------------------------------------------
-- KRIM_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_TYP_ATTR_T
(
      KIM_TYP_ATTR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SORT_CD VARCHAR2(2)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
    
    , CONSTRAINT KRIM_TYP_ATTR_TC0 UNIQUE (OBJ_ID)
    , CONSTRAINT KRIM_TYP_ATTR_TC1 UNIQUE (SORT_CD, KIM_TYP_ID, KIM_ATTR_DEFN_ID, ACTV_IND)

)
/

ALTER TABLE KRIM_TYP_ATTR_T
    ADD CONSTRAINT KRIM_TYP_ATTR_TP1
PRIMARY KEY (KIM_TYP_ATTR_ID)
/


CREATE INDEX KRIM_TYP_ATTRIBUTE_TI1 
  ON KRIM_TYP_ATTR_T 
  (KIM_TYP_ID)
/





-----------------------------------------------------------------------------
-- KRIM_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_TYP_T
(
      KIM_TYP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(100)
        , SRVC_NM VARCHAR2(200)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , NMSPC_CD VARCHAR2(40)
    
    , CONSTRAINT KRIM_TYP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRIM_TYP_T
    ADD CONSTRAINT KRIM_TYP_TP1
PRIMARY KEY (KIM_TYP_ID)
/







-----------------------------------------------------------------------------
-- KRLC_CMP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRLC_CMP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRLC_CMP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRLC_CMP_T
(
      CAMPUS_CD VARCHAR2(2)
        , CAMPUS_NM VARCHAR2(250)
        , CAMPUS_SHRT_NM VARCHAR2(250)
        , CAMPUS_TYP_CD VARCHAR2(1)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    
    , CONSTRAINT KRNS_CAMPUS_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRLC_CMP_T
    ADD CONSTRAINT KRLC_CMP_TP1
PRIMARY KEY (CAMPUS_CD)
/







-----------------------------------------------------------------------------
-- KRLC_CMP_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRLC_CMP_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRLC_CMP_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRLC_CMP_TYP_T
(
      CAMPUS_TYP_CD VARCHAR2(1)
        , CMP_TYP_NM VARCHAR2(250)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    
    , CONSTRAINT KRNS_CMP_TYP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRLC_CMP_TYP_T
    ADD CONSTRAINT KRLC_CMP_TYP_TP1
PRIMARY KEY (CAMPUS_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRLC_CNTRY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRLC_CNTRY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRLC_CNTRY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRLC_CNTRY_T
(
      POSTAL_CNTRY_CD VARCHAR2(2)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_CNTRY_NM VARCHAR2(40)
        , PSTL_CNTRY_RSTRC_IND VARCHAR2(1) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
        , ALT_POSTAL_CNTRY_CD VARCHAR2(3)
    
    , CONSTRAINT KR_COUNTRY_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRLC_CNTRY_T
    ADD CONSTRAINT KRLC_CNTRY_TP1
PRIMARY KEY (POSTAL_CNTRY_CD)
/







-----------------------------------------------------------------------------
-- KRLC_CNTY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRLC_CNTY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRLC_CNTY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRLC_CNTY_T
(
      COUNTY_CD VARCHAR2(10)
        , STATE_CD VARCHAR2(2)
        , POSTAL_CNTRY_CD VARCHAR2(2) default 'US'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , COUNTY_NM VARCHAR2(100)
        , ACTV_IND VARCHAR2(1)
    
    , CONSTRAINT KR_COUNTY_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRLC_CNTY_T
    ADD CONSTRAINT KRLC_CNTY_TP1
PRIMARY KEY (COUNTY_CD,STATE_CD,POSTAL_CNTRY_CD)
/







-----------------------------------------------------------------------------
-- KRLC_PSTL_CD_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRLC_PSTL_CD_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRLC_PSTL_CD_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRLC_PSTL_CD_T
(
      POSTAL_CD VARCHAR2(20)
        , POSTAL_CNTRY_CD VARCHAR2(2) default 'US'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_STATE_CD VARCHAR2(2)
        , COUNTY_CD VARCHAR2(10)
        , POSTAL_CITY_NM VARCHAR2(30)
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    
    , CONSTRAINT KR_POSTAL_CODE_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRLC_PSTL_CD_T
    ADD CONSTRAINT KRLC_PSTL_CD_TP1
PRIMARY KEY (POSTAL_CD,POSTAL_CNTRY_CD)
/







-----------------------------------------------------------------------------
-- KRLC_ST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRLC_ST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRLC_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRLC_ST_T
(
      POSTAL_STATE_CD VARCHAR2(2)
        , POSTAL_CNTRY_CD VARCHAR2(2) default 'US'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_STATE_NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    
    , CONSTRAINT KR_STATE_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRLC_ST_T
    ADD CONSTRAINT KRLC_ST_TP1
PRIMARY KEY (POSTAL_STATE_CD,POSTAL_CNTRY_CD)
/







-----------------------------------------------------------------------------
-- KRMS_ACTN_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_ACTN_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_ACTN_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_ACTN_ATTR_T
(
      ACTN_ATTR_DATA_ID VARCHAR2(40)
        , ACTN_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_ACTN_ATTR_T
    ADD CONSTRAINT KRMS_ACTN_ATTR_TP1
PRIMARY KEY (ACTN_ATTR_DATA_ID)
/


CREATE INDEX KRMS_ACTN_ATTR_TI1 
  ON KRMS_ACTN_ATTR_T 
  (ACTN_ID)
/
CREATE INDEX KRMS_ACTN_ATTR_TI2 
  ON KRMS_ACTN_ATTR_T 
  (ATTR_DEFN_ID)
/





-----------------------------------------------------------------------------
-- KRMS_ACTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_ACTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_ACTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_ACTN_T
(
      ACTN_ID VARCHAR2(40)
        , NM VARCHAR2(40)
        , DESC_TXT VARCHAR2(4000)
        , TYP_ID VARCHAR2(40) NOT NULL
        , RULE_ID VARCHAR2(40)
        , SEQ_NO NUMBER(5)
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
    
    , CONSTRAINT KRMS_ACTN_TC2 UNIQUE (ACTN_ID, RULE_ID, SEQ_NO)

)
/

ALTER TABLE KRMS_ACTN_T
    ADD CONSTRAINT KRMS_ACTN_TP1
PRIMARY KEY (ACTN_ID)
/


CREATE INDEX KRMS_ACTN_TI1 
  ON KRMS_ACTN_T 
  (TYP_ID)
/
CREATE INDEX KRMS_ACTN_TI2 
  ON KRMS_ACTN_T 
  (RULE_ID)
/
CREATE INDEX KRMS_ACTN_TI3 
  ON KRMS_ACTN_T 
  (RULE_ID, SEQ_NO)
/





-----------------------------------------------------------------------------
-- KRMS_AGENDA_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_AGENDA_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_AGENDA_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_AGENDA_ATTR_T
(
      AGENDA_ATTR_ID VARCHAR2(40)
        , AGENDA_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_AGENDA_ATTR_T
    ADD CONSTRAINT KRMS_AGENDA_ATTR_TP1
PRIMARY KEY (AGENDA_ATTR_ID)
/


CREATE INDEX KRMS_AGENDA_ATTR_T12 
  ON KRMS_AGENDA_ATTR_T 
  (ATTR_DEFN_ID)
/
CREATE INDEX KRMS_AGENDA_ATTR_TI1 
  ON KRMS_AGENDA_ATTR_T 
  (AGENDA_ID)
/





-----------------------------------------------------------------------------
-- KRMS_AGENDA_ITM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_AGENDA_ITM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_AGENDA_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_AGENDA_ITM_T
(
      AGENDA_ITM_ID VARCHAR2(40)
        , RULE_ID VARCHAR2(40)
        , SUB_AGENDA_ID VARCHAR2(40)
        , AGENDA_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , WHEN_TRUE VARCHAR2(40)
        , WHEN_FALSE VARCHAR2(40)
        , ALWAYS VARCHAR2(40)
    

)
/

ALTER TABLE KRMS_AGENDA_ITM_T
    ADD CONSTRAINT KRMS_AGENDA_ITM_TP1
PRIMARY KEY (AGENDA_ITM_ID)
/


CREATE INDEX KRMS_AGENDA_ITM_TI1 
  ON KRMS_AGENDA_ITM_T 
  (RULE_ID)
/
CREATE INDEX KRMS_AGENDA_ITM_TI2 
  ON KRMS_AGENDA_ITM_T 
  (AGENDA_ID)
/
CREATE INDEX KRMS_AGENDA_ITM_TI3 
  ON KRMS_AGENDA_ITM_T 
  (SUB_AGENDA_ID)
/
CREATE INDEX KRMS_AGENDA_ITM_TI4 
  ON KRMS_AGENDA_ITM_T 
  (WHEN_TRUE)
/
CREATE INDEX KRMS_AGENDA_ITM_TI5 
  ON KRMS_AGENDA_ITM_T 
  (WHEN_FALSE)
/
CREATE INDEX KRMS_AGENDA_ITM_TI6 
  ON KRMS_AGENDA_ITM_T 
  (ALWAYS)
/





-----------------------------------------------------------------------------
-- KRMS_AGENDA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_AGENDA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_AGENDA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_AGENDA_T
(
      AGENDA_ID VARCHAR2(40)
        , NM VARCHAR2(100) NOT NULL
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , INIT_AGENDA_ITM_ID VARCHAR2(40)
        , TYP_ID VARCHAR2(40)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_AGENDA_TC1 UNIQUE (NM, CNTXT_ID)

)
/

ALTER TABLE KRMS_AGENDA_T
    ADD CONSTRAINT KRMS_AGENDA_TP1
PRIMARY KEY (AGENDA_ID)
/


CREATE INDEX KRMS_AGENDA_TI1 
  ON KRMS_AGENDA_T 
  (CNTXT_ID)
/





-----------------------------------------------------------------------------
-- KRMS_ATTR_DEFN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_ATTR_DEFN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_ATTR_DEFN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_ATTR_DEFN_T
(
      ATTR_DEFN_ID VARCHAR2(255)
        , NM VARCHAR2(100) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , LBL VARCHAR2(40)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , CMPNT_NM VARCHAR2(100)
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(255) default 'null'
    
    , CONSTRAINT KRMS_ATTR_DEFN_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_ATTR_DEFN_T
    ADD CONSTRAINT KRMS_ATTR_DEFN_TP1
PRIMARY KEY (ATTR_DEFN_ID)
/







-----------------------------------------------------------------------------
-- KRMS_CMPND_PROP_PROPS_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CMPND_PROP_PROPS_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CMPND_PROP_PROPS_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CMPND_PROP_PROPS_T
(
      CMPND_PROP_ID VARCHAR2(40)
        , PROP_ID VARCHAR2(40)
    

)
/

ALTER TABLE KRMS_CMPND_PROP_PROPS_T
    ADD CONSTRAINT KRMS_CMPND_PROP_PROPS_TP1
PRIMARY KEY (CMPND_PROP_ID,PROP_ID)
/


CREATE INDEX KRMS_CMPND_PROP_PROPS_FK2 
  ON KRMS_CMPND_PROP_PROPS_T 
  (CMPND_PROP_ID)
/
CREATE INDEX KRMS_CMPND_PROP_PROPS_TI1 
  ON KRMS_CMPND_PROP_PROPS_T 
  (PROP_ID)
/





-----------------------------------------------------------------------------
-- KRMS_CNTXT_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_ATTR_T
(
      CNTXT_ATTR_ID VARCHAR2(40)
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , ATTR_DEFN_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_CNTXT_ATTR_T
    ADD CONSTRAINT KRMS_CNTXT_ATTR_TP1
PRIMARY KEY (CNTXT_ATTR_ID)
/


CREATE INDEX KRMS_CNTXT_ATTR_TI1 
  ON KRMS_CNTXT_ATTR_T 
  (CNTXT_ID)
/
CREATE INDEX KRMS_CNTXT_ATTR_TI2 
  ON KRMS_CNTXT_ATTR_T 
  (ATTR_DEFN_ID)
/





-----------------------------------------------------------------------------
-- KRMS_CNTXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_T
(
      CNTXT_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , TYP_ID VARCHAR2(40)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(255) default 'null'
    
    , CONSTRAINT KRMS_CNTXT_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_CNTXT_T
    ADD CONSTRAINT KRMS_CNTXT_TP1
PRIMARY KEY (CNTXT_ID)
/







-----------------------------------------------------------------------------
-- KRMS_CNTXT_VLD_ACTN_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_VLD_ACTN_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_VLD_ACTN_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_VLD_ACTN_TYP_T
(
      CNTXT_VLD_ACTN_ID VARCHAR2(40)
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , ACTN_TYP_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_CNTXT_VLD_ACTN_TYP_T
    ADD CONSTRAINT KRMS_CNTXT_VLD_ACTN_TYP_TP1
PRIMARY KEY (CNTXT_VLD_ACTN_ID)
/


CREATE INDEX KRMS_CNTXT_VLD_ACTN_TYP_TI1 
  ON KRMS_CNTXT_VLD_ACTN_TYP_T 
  (CNTXT_ID)
/





-----------------------------------------------------------------------------
-- KRMS_CNTXT_VLD_AGENDA_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_VLD_AGENDA_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_VLD_AGENDA_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_VLD_AGENDA_TYP_T
(
      CNTXT_VLD_AGENDA_ID VARCHAR2(40)
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , AGENDA_TYP_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_CNTXT_VLD_AGENDA_TYP_T
    ADD CONSTRAINT KRMS_CNTXT_VLD_AGENDA_TYP_TP1
PRIMARY KEY (CNTXT_VLD_AGENDA_ID)
/


CREATE INDEX KRMS_CNTXT_VLD_AGENDA_TYP_TI1 
  ON KRMS_CNTXT_VLD_AGENDA_TYP_T 
  (CNTXT_ID)
/





-----------------------------------------------------------------------------
-- KRMS_CNTXT_VLD_FUNC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_VLD_FUNC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_VLD_FUNC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_VLD_FUNC_T
(
      CNTXT_VLD_FUNC_ID VARCHAR2(40)
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , FUNC_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_CNTXT_VLD_FUNC_T
    ADD CONSTRAINT KRMS_CNTXT_VLD_FUNC_TP1
PRIMARY KEY (CNTXT_VLD_FUNC_ID)
/


CREATE INDEX KRMS_CNTXT_VLD_FUNC_TI1 
  ON KRMS_CNTXT_VLD_FUNC_T 
  (CNTXT_ID)
/





-----------------------------------------------------------------------------
-- KRMS_CNTXT_VLD_RULE_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_VLD_RULE_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_VLD_RULE_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_VLD_RULE_TYP_T
(
      CNTXT_VLD_RULE_ID VARCHAR2(40)
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , RULE_TYP_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_CNTXT_VLD_RULE_TYP_T
    ADD CONSTRAINT KRMS_CNTXT_VLD_RULE_TYP_TP1
PRIMARY KEY (CNTXT_VLD_RULE_ID)
/


CREATE INDEX KRMS_CNTXT_VLD_RULE_TYP_TI1 
  ON KRMS_CNTXT_VLD_RULE_TYP_T 
  (CNTXT_ID)
/





-----------------------------------------------------------------------------
-- KRMS_CNTXT_VLD_TERM_SPEC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CNTXT_VLD_TERM_SPEC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CNTXT_VLD_TERM_SPEC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CNTXT_VLD_TERM_SPEC_T
(
      CNTXT_TERM_SPEC_PREREQ_ID VARCHAR2(40)
        , CNTXT_ID VARCHAR2(40) NOT NULL
        , TERM_SPEC_ID VARCHAR2(40) NOT NULL
        , PREREQ VARCHAR2(1) default 'n'
    

)
/

ALTER TABLE KRMS_CNTXT_VLD_TERM_SPEC_T
    ADD CONSTRAINT KRMS_CNTXT_VLD_TERM_SPEC_TP1
PRIMARY KEY (CNTXT_TERM_SPEC_PREREQ_ID)
/







-----------------------------------------------------------------------------
-- KRMS_CTGRY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_CTGRY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_CTGRY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_CTGRY_T
(
      CTGRY_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0
    
    , CONSTRAINT KRMS_CTGRY_TC0 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_CTGRY_T
    ADD CONSTRAINT KRMS_CTGRY_TP1
PRIMARY KEY (CTGRY_ID)
/







-----------------------------------------------------------------------------
-- KRMS_FUNC_CTGRY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_FUNC_CTGRY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_FUNC_CTGRY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_FUNC_CTGRY_T
(
      FUNC_ID VARCHAR2(40)
        , CTGRY_ID VARCHAR2(40)
    

)
/

ALTER TABLE KRMS_FUNC_CTGRY_T
    ADD CONSTRAINT KRMS_FUNC_CTGRY_TP1
PRIMARY KEY (FUNC_ID,CTGRY_ID)
/







-----------------------------------------------------------------------------
-- KRMS_FUNC_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_FUNC_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_FUNC_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_FUNC_PARM_T
(
      FUNC_PARM_ID VARCHAR2(40)
        , NM VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(255)
        , TYP VARCHAR2(255) NOT NULL
        , FUNC_ID VARCHAR2(40) NOT NULL
        , SEQ_NO NUMBER(5) NOT NULL
    

)
/

ALTER TABLE KRMS_FUNC_PARM_T
    ADD CONSTRAINT KRMS_FUNC_PARM_TP1
PRIMARY KEY (FUNC_PARM_ID)
/


CREATE INDEX KRMS_FUNC_PARM_TI1 
  ON KRMS_FUNC_PARM_T 
  (FUNC_ID)
/





-----------------------------------------------------------------------------
-- KRMS_FUNC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_FUNC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_FUNC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_FUNC_T
(
      FUNC_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(255)
        , RTRN_TYP VARCHAR2(255) NOT NULL
        , TYP_ID VARCHAR2(40) NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_FUNC_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_FUNC_T
    ADD CONSTRAINT KRMS_FUNC_TP1
PRIMARY KEY (FUNC_ID)
/


CREATE INDEX KRMS_FUNC_TI1 
  ON KRMS_FUNC_T 
  (TYP_ID)
/





-----------------------------------------------------------------------------
-- KRMS_NL_TMPL_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_NL_TMPL_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_NL_TMPL_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_NL_TMPL_ATTR_T
(
      NL_TMPL_ATTR_ID VARCHAR2(40)
        , NL_TMPL_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_NL_TMPL_ATTR_TC1 UNIQUE (NL_TMPL_ID, ATTR_DEFN_ID)

)
/

ALTER TABLE KRMS_NL_TMPL_ATTR_T
    ADD CONSTRAINT KRMS_NL_TMPL_ATTR_TP1
PRIMARY KEY (NL_TMPL_ATTR_ID)
/







-----------------------------------------------------------------------------
-- KRMS_NL_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_NL_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_NL_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_NL_TMPL_T
(
      NL_TMPL_ID VARCHAR2(40)
        , LANG_CD VARCHAR2(2) NOT NULL
        , NL_USAGE_ID VARCHAR2(40) NOT NULL
        , TYP_ID VARCHAR2(40) NOT NULL
        , TMPL VARCHAR2(4000) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_NL_TMPL_TC1 UNIQUE (LANG_CD, NL_USAGE_ID, TYP_ID)

)
/

ALTER TABLE KRMS_NL_TMPL_T
    ADD CONSTRAINT KRMS_NL_TMPL_TP1
PRIMARY KEY (NL_TMPL_ID)
/







-----------------------------------------------------------------------------
-- KRMS_NL_USAGE_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_NL_USAGE_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_NL_USAGE_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_NL_USAGE_ATTR_T
(
      NL_USAGE_ATTR_ID VARCHAR2(40)
        , NL_USAGE_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_NL_USAGE_ATTR_TC1 UNIQUE (NL_USAGE_ID, ATTR_DEFN_ID)

)
/

ALTER TABLE KRMS_NL_USAGE_ATTR_T
    ADD CONSTRAINT KRMS_NL_USAGE_ATTR_TP1
PRIMARY KEY (NL_USAGE_ATTR_ID)
/







-----------------------------------------------------------------------------
-- KRMS_NL_USAGE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_NL_USAGE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_NL_USAGE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_NL_USAGE_T
(
      NL_USAGE_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , DESC_TXT VARCHAR2(255)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_NL_USAGE_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_NL_USAGE_T
    ADD CONSTRAINT KRMS_NL_USAGE_TP1
PRIMARY KEY (NL_USAGE_ID)
/







-----------------------------------------------------------------------------
-- KRMS_PROP_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_PROP_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_PROP_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_PROP_PARM_T
(
      PROP_PARM_ID VARCHAR2(40)
        , PROP_ID VARCHAR2(40) NOT NULL
        , PARM_VAL VARCHAR2(255)
        , PARM_TYP_CD VARCHAR2(1) NOT NULL
        , SEQ_NO NUMBER(5) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_PROP_PARM_T
    ADD CONSTRAINT KRMS_PROP_PARM_TP1
PRIMARY KEY (PROP_PARM_ID)
/


CREATE INDEX KRMS_PROP_PARM_TI1 
  ON KRMS_PROP_PARM_T 
  (PROP_ID)
/





-----------------------------------------------------------------------------
-- KRMS_PROP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_PROP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_PROP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_PROP_T
(
      PROP_ID VARCHAR2(40)
        , DESC_TXT VARCHAR2(100)
        , TYP_ID VARCHAR2(40)
        , DSCRM_TYP_CD VARCHAR2(10) NOT NULL
        , CMPND_OP_CD VARCHAR2(40)
        , RULE_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , CMPND_SEQ_NO NUMBER(5) default null
    

)
/

ALTER TABLE KRMS_PROP_T
    ADD CONSTRAINT KRMS_PROP_TP1
PRIMARY KEY (PROP_ID)
/


CREATE INDEX KRMS_PROP_FK2 
  ON KRMS_PROP_T 
  (TYP_ID)
/
CREATE INDEX KRMS_PROP_TI1 
  ON KRMS_PROP_T 
  (RULE_ID)
/





-----------------------------------------------------------------------------
-- KRMS_REF_OBJ_KRMS_OBJ_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_REF_OBJ_KRMS_OBJ_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_REF_OBJ_KRMS_OBJ_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_REF_OBJ_KRMS_OBJ_T
(
      REF_OBJ_KRMS_OBJ_ID VARCHAR2(40)
        , COLLECTION_NM VARCHAR2(40)
        , KRMS_OBJ_ID VARCHAR2(40) NOT NULL
        , KRMS_DSCR_TYP VARCHAR2(40) NOT NULL
        , REF_OBJ_ID VARCHAR2(255) NOT NULL
        , REF_DSCR_TYP VARCHAR2(255) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_REF_OBJ_KRMS_OBJ_TC1 UNIQUE (COLLECTION_NM, KRMS_OBJ_ID, KRMS_DSCR_TYP, REF_OBJ_ID, REF_DSCR_TYP, NMSPC_CD)

)
/

ALTER TABLE KRMS_REF_OBJ_KRMS_OBJ_T
    ADD CONSTRAINT KRMS_REF_OBJ_KRMS_OBJ_TP1
PRIMARY KEY (REF_OBJ_KRMS_OBJ_ID)
/







-----------------------------------------------------------------------------
-- KRMS_RULE_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_RULE_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_RULE_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_RULE_ATTR_T
(
      RULE_ATTR_ID VARCHAR2(40)
        , RULE_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_RULE_ATTR_T
    ADD CONSTRAINT KRMS_RULE_ATTR_TP1
PRIMARY KEY (RULE_ATTR_ID)
/


CREATE INDEX KRMS_RULE_ATTR_TI1 
  ON KRMS_RULE_ATTR_T 
  (RULE_ID)
/
CREATE INDEX KRMS_RULE_ATTR_TI2 
  ON KRMS_RULE_ATTR_T 
  (ATTR_DEFN_ID)
/





-----------------------------------------------------------------------------
-- KRMS_RULE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_RULE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_RULE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_RULE_T
(
      RULE_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , TYP_ID VARCHAR2(40)
        , PROP_ID VARCHAR2(40)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(4000)
    
    , CONSTRAINT KRMS_RULE_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_RULE_T
    ADD CONSTRAINT KRMS_RULE_TP1
PRIMARY KEY (RULE_ID)
/


CREATE INDEX KRMS_RULE_TI1 
  ON KRMS_RULE_T 
  (PROP_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TERM_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_PARM_T
(
      TERM_PARM_ID VARCHAR2(40)
        , TERM_ID VARCHAR2(40) NOT NULL
        , NM VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(255)
        , VER_NBR NUMBER(8) NOT NULL
    

)
/

ALTER TABLE KRMS_TERM_PARM_T
    ADD CONSTRAINT KRMS_TERM_PARM_TP1
PRIMARY KEY (TERM_PARM_ID)
/


CREATE INDEX KRMS_TERM_PARM_TI1 
  ON KRMS_TERM_PARM_T 
  (TERM_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TERM_RSLVR_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_RSLVR_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_RSLVR_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_RSLVR_ATTR_T
(
      TERM_RSLVR_ATTR_ID VARCHAR2(40)
        , TERM_RSLVR_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(40) NOT NULL
        , ATTR_VAL VARCHAR2(400)
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRMS_TERM_RSLVR_ATTR_T
    ADD CONSTRAINT KRMS_TERM_RSLVR_ATTR_TP1
PRIMARY KEY (TERM_RSLVR_ATTR_ID)
/


CREATE INDEX KRMS_TERM_RSLVR_ATTR_TI1 
  ON KRMS_TERM_RSLVR_ATTR_T 
  (TERM_RSLVR_ID)
/
CREATE INDEX KRMS_TERM_RSLVR_ATTR_TI2 
  ON KRMS_TERM_RSLVR_ATTR_T 
  (ATTR_DEFN_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TERM_RSLVR_INPUT_SPEC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_RSLVR_INPUT_SPEC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_RSLVR_INPUT_SPEC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_RSLVR_INPUT_SPEC_T
(
      TERM_SPEC_ID VARCHAR2(40)
        , TERM_RSLVR_ID VARCHAR2(40)
    

)
/

ALTER TABLE KRMS_TERM_RSLVR_INPUT_SPEC_T
    ADD CONSTRAINT KRMS_TERM_RSLVR_INPUT_SPEC_P1
PRIMARY KEY (TERM_SPEC_ID,TERM_RSLVR_ID)
/


CREATE INDEX KRMS_INPUT_ASSET_TI1 
  ON KRMS_TERM_RSLVR_INPUT_SPEC_T 
  (TERM_SPEC_ID)
/
CREATE INDEX KRMS_INPUT_ASSET_TI2 
  ON KRMS_TERM_RSLVR_INPUT_SPEC_T 
  (TERM_RSLVR_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TERM_RSLVR_PARM_SPEC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_RSLVR_PARM_SPEC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_RSLVR_PARM_SPEC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_RSLVR_PARM_SPEC_T
(
      TERM_RSLVR_PARM_SPEC_ID VARCHAR2(40)
        , TERM_RSLVR_ID VARCHAR2(40) NOT NULL
        , NM VARCHAR2(45) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
    

)
/

ALTER TABLE KRMS_TERM_RSLVR_PARM_SPEC_T
    ADD CONSTRAINT KRMS_TERM_RSLVR_PARM_SPEC_TP1
PRIMARY KEY (TERM_RSLVR_PARM_SPEC_ID)
/


CREATE INDEX KRMS_TERM_RESLV_PARM_FK1 
  ON KRMS_TERM_RSLVR_PARM_SPEC_T 
  (TERM_RSLVR_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TERM_RSLVR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_RSLVR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_RSLVR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_RSLVR_T
(
      TERM_RSLVR_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , NM VARCHAR2(100) NOT NULL
        , TYP_ID VARCHAR2(40) NOT NULL
        , OUTPUT_TERM_SPEC_ID VARCHAR2(40) NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_TERM_RSLVR_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_TERM_RSLVR_T
    ADD CONSTRAINT KRMS_TERM_RSLVR_TP1
PRIMARY KEY (TERM_RSLVR_ID)
/


CREATE INDEX KRMS_TERM_RSLVR_TI2 
  ON KRMS_TERM_RSLVR_T 
  (TYP_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TERM_SPEC_CTGRY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_SPEC_CTGRY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_SPEC_CTGRY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_SPEC_CTGRY_T
(
      TERM_SPEC_ID VARCHAR2(40)
        , CTGRY_ID VARCHAR2(40)
    

)
/

ALTER TABLE KRMS_TERM_SPEC_CTGRY_T
    ADD CONSTRAINT KRMS_TERM_SPEC_CTGRY_TP1
PRIMARY KEY (TERM_SPEC_ID,CTGRY_ID)
/







-----------------------------------------------------------------------------
-- KRMS_TERM_SPEC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_SPEC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_SPEC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_SPEC_T
(
      TERM_SPEC_ID VARCHAR2(40)
        , NM VARCHAR2(255) NOT NULL
        , TYP VARCHAR2(255) NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , DESC_TXT VARCHAR2(255) default 'null'
        , NMSPC_CD VARCHAR2(40) NOT NULL
    
    , CONSTRAINT KRMS_TERM_SPEC_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_TERM_SPEC_T
    ADD CONSTRAINT KRMS_TERM_SPEC_TP1
PRIMARY KEY (TERM_SPEC_ID)
/







-----------------------------------------------------------------------------
-- KRMS_TERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TERM_T
(
      TERM_ID VARCHAR2(40)
        , TERM_SPEC_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , DESC_TXT VARCHAR2(255) default 'null'
    

)
/

ALTER TABLE KRMS_TERM_T
    ADD CONSTRAINT KRMS_TERM_TP1
PRIMARY KEY (TERM_ID)
/


CREATE INDEX KRMS_TERM_TI1 
  ON KRMS_TERM_T 
  (TERM_SPEC_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TYP_ATTR_T
(
      TYP_ATTR_ID VARCHAR2(40)
        , SEQ_NO NUMBER(5) NOT NULL
        , TYP_ID VARCHAR2(40) NOT NULL
        , ATTR_DEFN_ID VARCHAR2(255) NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_TYP_ATTR_TC1 UNIQUE (TYP_ID, ATTR_DEFN_ID)

)
/

ALTER TABLE KRMS_TYP_ATTR_T
    ADD CONSTRAINT KRMS_TYP_ATTR_TP1
PRIMARY KEY (TYP_ATTR_ID)
/


CREATE INDEX KRMS_TYP_ATTR_TI1 
  ON KRMS_TYP_ATTR_T 
  (ATTR_DEFN_ID)
/
CREATE INDEX KRMS_TYP_ATTR_TI2 
  ON KRMS_TYP_ATTR_T 
  (TYP_ID)
/





-----------------------------------------------------------------------------
-- KRMS_TYP_RELN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TYP_RELN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TYP_RELN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TYP_RELN_T
(
      TYP_RELN_ID VARCHAR2(40)
        , FROM_TYP_ID VARCHAR2(40) NOT NULL
        , TO_TYP_ID VARCHAR2(40) NOT NULL
        , RELN_TYP VARCHAR2(40) NOT NULL
        , SEQ_NO NUMBER(5) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
    
    , CONSTRAINT KRMS_TYP_RELN_TC1 UNIQUE (FROM_TYP_ID, TO_TYP_ID, RELN_TYP)

)
/

ALTER TABLE KRMS_TYP_RELN_T
    ADD CONSTRAINT KRMS_TYP_RELN_TP1
PRIMARY KEY (TYP_RELN_ID)
/







-----------------------------------------------------------------------------
-- KRMS_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRMS_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRMS_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRMS_TYP_T
(
      TYP_ID VARCHAR2(40)
        , NM VARCHAR2(100) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , SRVC_NM VARCHAR2(200)
        , ACTV VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRMS_TYP_TC1 UNIQUE (NM, NMSPC_CD)

)
/

ALTER TABLE KRMS_TYP_T
    ADD CONSTRAINT KRMS_TYP_TP1
PRIMARY KEY (TYP_ID)
/







-----------------------------------------------------------------------------
-- KRNS_ADHOC_RTE_ACTN_RECIP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_ADHOC_RTE_ACTN_RECIP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_ADHOC_RTE_ACTN_RECIP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_ADHOC_RTE_ACTN_RECIP_T
(
      RECIP_TYP_CD NUMBER(1)
        , ACTN_RQST_CD VARCHAR2(30)
        , ACTN_RQST_RECIP_ID VARCHAR2(70)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_HDR_ID VARCHAR2(14)
    
    , CONSTRAINT KRNS_ADHOC_RTE_ACTN_RECIP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_ADHOC_RTE_ACTN_RECIP_T
    ADD CONSTRAINT KRNS_ADHOC_RTE_ACTN_RECIP_TP1
PRIMARY KEY (RECIP_TYP_CD,ACTN_RQST_CD,ACTN_RQST_RECIP_ID,DOC_HDR_ID)
/


CREATE INDEX KRNS_ADHOC_RTE_ACTN_RECIP_T2 
  ON KRNS_ADHOC_RTE_ACTN_RECIP_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_ATT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_ATT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_ATT_T
(
      NTE_ID NUMBER(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , MIME_TYP VARCHAR2(255)
        , FILE_NM VARCHAR2(250)
        , ATT_ID VARCHAR2(36)
        , FILE_SZ NUMBER(14)
        , ATT_TYP_CD VARCHAR2(40)
    
    , CONSTRAINT KRNS_ATT_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_ATT_T
    ADD CONSTRAINT KRNS_ATT_TP1
PRIMARY KEY (NTE_ID)
/







-----------------------------------------------------------------------------
-- KRNS_DOC_HDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_DOC_HDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_DOC_HDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_DOC_HDR_T
(
      DOC_HDR_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FDOC_DESC VARCHAR2(255)
        , ORG_DOC_HDR_ID VARCHAR2(10)
        , TMPL_DOC_HDR_ID VARCHAR2(14)
        , EXPLANATION VARCHAR2(400)
    
    , CONSTRAINT KRNS_DOC_HDR_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_DOC_HDR_T
    ADD CONSTRAINT KRNS_DOC_HDR_TP1
PRIMARY KEY (DOC_HDR_ID)
/


CREATE INDEX KRNS_DOC_HDR_TI3 
  ON KRNS_DOC_HDR_T 
  (ORG_DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_LOOKUP_RSLT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_LOOKUP_RSLT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_LOOKUP_RSLT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_LOOKUP_RSLT_T
(
      LOOKUP_RSLT_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , LOOKUP_DT DATE NOT NULL
        , SERIALZD_RSLTS CLOB
    
    , CONSTRAINT KRNS_LOOKUP_RSLT_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_LOOKUP_RSLT_T
    ADD CONSTRAINT KRNS_LOOKUP_RSLT_TP1
PRIMARY KEY (LOOKUP_RSLT_ID)
/







-----------------------------------------------------------------------------
-- KRNS_LOOKUP_SEL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_LOOKUP_SEL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_LOOKUP_SEL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_LOOKUP_SEL_T
(
      LOOKUP_RSLT_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , LOOKUP_DT DATE NOT NULL
        , SEL_OBJ_IDS CLOB
    
    , CONSTRAINT KRNS_LOOKUP_SEL_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_LOOKUP_SEL_T
    ADD CONSTRAINT KRNS_LOOKUP_SEL_TP1
PRIMARY KEY (LOOKUP_RSLT_ID)
/







-----------------------------------------------------------------------------
-- KRNS_MAINT_DOC_ATT_LST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_DOC_ATT_LST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_DOC_ATT_LST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_DOC_ATT_LST_T
(
      ATT_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(14) NOT NULL
        , ATT_CNTNT BLOB NOT NULL
        , FILE_NM VARCHAR2(150)
        , CNTNT_TYP VARCHAR2(255)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    
    , CONSTRAINT KRNS_MAINT_DOC_ATT_LST_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_MAINT_DOC_ATT_LST_T
    ADD CONSTRAINT KRNS_MAINT_DOC_ATT_LST_TP1
PRIMARY KEY (ATT_ID)
/


CREATE INDEX KRNS_MAINT_DOC_ATT_LST_TI1 
  ON KRNS_MAINT_DOC_ATT_LST_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_MAINT_DOC_ATT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_DOC_ATT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_DOC_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_DOC_ATT_T
(
      DOC_HDR_ID VARCHAR2(14)
        , ATT_CNTNT BLOB NOT NULL
        , FILE_NM VARCHAR2(150)
        , CNTNT_TYP VARCHAR2(255)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
    
    , CONSTRAINT KRNS_MAINT_DOC_ATT_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_MAINT_DOC_ATT_T
    ADD CONSTRAINT KRNS_MAINT_DOC_ATT_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KRNS_MAINT_DOC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_DOC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_DOC_T
(
      DOC_HDR_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_CNTNT CLOB
    
    , CONSTRAINT KRNS_MAINT_DOC_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_MAINT_DOC_T
    ADD CONSTRAINT KRNS_MAINT_DOC_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KRNS_MAINT_LOCK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_LOCK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_LOCK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_LOCK_T
(
      MAINT_LOCK_REP_TXT VARCHAR2(500)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_HDR_ID VARCHAR2(14) NOT NULL
        , MAINT_LOCK_ID VARCHAR2(14)
    
    , CONSTRAINT KRNS_MAINT_LOCK_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_MAINT_LOCK_T
    ADD CONSTRAINT KRNS_MAINT_LOCK_TP1
PRIMARY KEY (MAINT_LOCK_ID)
/


CREATE INDEX KRNS_MAINT_LOCK_TI2 
  ON KRNS_MAINT_LOCK_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_NTE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_NTE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_NTE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_NTE_T
(
      NTE_ID NUMBER(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , RMT_OBJ_ID VARCHAR2(36) NOT NULL
        , AUTH_PRNCPL_ID VARCHAR2(40) NOT NULL
        , POST_TS DATE NOT NULL
        , NTE_TYP_CD VARCHAR2(4) NOT NULL
        , TXT VARCHAR2(800)
        , PRG_CD VARCHAR2(1)
        , TPC_TXT VARCHAR2(40)
    
    , CONSTRAINT KRNS_NTE_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_NTE_T
    ADD CONSTRAINT KRNS_NTE_TP1
PRIMARY KEY (NTE_ID)
/


CREATE INDEX KRNS_NTE_TI1 
  ON KRNS_NTE_T 
  (RMT_OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRNS_NTE_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_NTE_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_NTE_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_NTE_TYP_T
(
      NTE_TYP_CD VARCHAR2(4)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , TYP_DESC_TXT VARCHAR2(100)
        , ACTV_IND VARCHAR2(1)
    
    , CONSTRAINT KRNS_NTE_TYP_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_NTE_TYP_T
    ADD CONSTRAINT KRNS_NTE_TYP_TP1
PRIMARY KEY (NTE_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRNS_PESSIMISTIC_LOCK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_PESSIMISTIC_LOCK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_PESSIMISTIC_LOCK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_PESSIMISTIC_LOCK_T
(
      PESSIMISTIC_LOCK_ID NUMBER(14)
        , OBJ_ID VARCHAR2(36) default SYS_GUID() NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , LOCK_DESC_TXT VARCHAR2(4000)
        , DOC_HDR_ID VARCHAR2(14) NOT NULL
        , GNRT_DT DATE NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
    
    , CONSTRAINT KRNS_PESSIMISTIC_LOCK_TC0 UNIQUE (OBJ_ID)

)
/

ALTER TABLE KRNS_PESSIMISTIC_LOCK_T
    ADD CONSTRAINT KRNS_PESSIMISTIC_LOCK_TP1
PRIMARY KEY (PESSIMISTIC_LOCK_ID)
/


CREATE INDEX KRNS_PESSIMISTIC_LOCK_TI1 
  ON KRNS_PESSIMISTIC_LOCK_T 
  (DOC_HDR_ID)
/
CREATE INDEX KRNS_PESSIMISTIC_LOCK_TI2 
  ON KRNS_PESSIMISTIC_LOCK_T 
  (PRNCPL_ID)
/





-----------------------------------------------------------------------------
-- KRNS_SESN_DOC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_SESN_DOC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_SESN_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_SESN_DOC_T
(
      SESN_DOC_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(14)
        , PRNCPL_ID VARCHAR2(40)
        , IP_ADDR VARCHAR2(60)
        , SERIALZD_DOC_FRM BLOB
        , LAST_UPDT_DT DATE
        , CONTENT_ENCRYPTED_IND CHAR(1) default 'N'
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KRNS_SESN_DOC_T
    ADD CONSTRAINT KRNS_SESN_DOC_TP1
PRIMARY KEY (SESN_DOC_ID,DOC_HDR_ID,PRNCPL_ID,IP_ADDR)
/


CREATE INDEX KRNS_SESN_DOC_TI1 
  ON KRNS_SESN_DOC_T 
  (LAST_UPDT_DT)
/





-----------------------------------------------------------------------------
-- KRSB_BAM_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_BAM_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_BAM_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_BAM_PARM_T
(
      BAM_PARM_ID NUMBER(14)
        , BAM_ID NUMBER(14) NOT NULL
        , PARM CLOB NOT NULL
    

)
/

ALTER TABLE KRSB_BAM_PARM_T
    ADD CONSTRAINT KRSB_BAM_PARM_TP1
PRIMARY KEY (BAM_PARM_ID)
/


CREATE INDEX KREW_BAM_PARM_TI1 
  ON KRSB_BAM_PARM_T 
  (BAM_ID)
/





-----------------------------------------------------------------------------
-- KRSB_BAM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_BAM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_BAM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_BAM_T
(
      BAM_ID NUMBER(14)
        , SVC_NM VARCHAR2(255) NOT NULL
        , SVC_URL VARCHAR2(500) NOT NULL
        , MTHD_NM VARCHAR2(2000) NOT NULL
        , THRD_NM VARCHAR2(500) NOT NULL
        , CALL_DT DATE NOT NULL
        , TGT_TO_STR VARCHAR2(2000) NOT NULL
        , SRVR_IND NUMBER(1) NOT NULL
        , EXCPN_TO_STR VARCHAR2(2000)
        , EXCPN_MSG CLOB
    

)
/

ALTER TABLE KRSB_BAM_T
    ADD CONSTRAINT KRSB_BAM_TP1
PRIMARY KEY (BAM_ID)
/


CREATE INDEX KRSB_BAM_TI1 
  ON KRSB_BAM_T 
  (SVC_NM, MTHD_NM)
/
CREATE INDEX KRSB_BAM_TI2 
  ON KRSB_BAM_T 
  (SVC_NM)
/





-----------------------------------------------------------------------------
-- KRSB_MSG_PYLD_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_MSG_PYLD_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_MSG_PYLD_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_MSG_PYLD_T
(
      MSG_QUE_ID NUMBER(14)
        , MSG_PYLD CLOB NOT NULL
    

)
/

ALTER TABLE KRSB_MSG_PYLD_T
    ADD CONSTRAINT KRSB_MSG_PYLD_TP1
PRIMARY KEY (MSG_QUE_ID)
/







-----------------------------------------------------------------------------
-- KRSB_MSG_QUE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_MSG_QUE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_MSG_QUE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_MSG_QUE_T
(
      MSG_QUE_ID NUMBER(14)
        , DT DATE NOT NULL
        , EXP_DT DATE
        , PRIO NUMBER(8) NOT NULL
        , STAT_CD CHAR(1) NOT NULL
        , RTRY_CNT NUMBER(8) NOT NULL
        , IP_NBR VARCHAR2(2000) NOT NULL
        , SVC_NM VARCHAR2(255)
        , APPL_ID VARCHAR2(255) NOT NULL
        , SVC_MTHD_NM VARCHAR2(2000)
        , APP_VAL_ONE VARCHAR2(2000)
        , APP_VAL_TWO VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KRSB_MSG_QUE_T
    ADD CONSTRAINT KRSB_MSG_QUE_TP1
PRIMARY KEY (MSG_QUE_ID)
/


CREATE INDEX KRSB_MSG_QUE_TI1 
  ON KRSB_MSG_QUE_T 
  (SVC_NM, SVC_MTHD_NM)
/
CREATE INDEX KRSB_MSG_QUE_TI2 
  ON KRSB_MSG_QUE_T 
  (APPL_ID, STAT_CD, IP_NBR, DT)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_BLOB_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_BLOB_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_BLOB_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_BLOB_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , BLOB_DATA BLOB
    

)
/

ALTER TABLE KRSB_QRTZ_BLOB_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_BLOB_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_CALENDARS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_CALENDARS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_CALENDARS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_CALENDARS
(
      CALENDAR_NAME VARCHAR2(80)
        , CALENDAR BLOB NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_CALENDARS
    ADD CONSTRAINT KRSB_QRTZ_CALENDARSP1
PRIMARY KEY (CALENDAR_NAME)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_CRON_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_CRON_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_CRON_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_CRON_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , CRON_EXPRESSION VARCHAR2(80) NOT NULL
        , TIME_ZONE_ID VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_CRON_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_CRON_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_FIRED_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_FIRED_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_FIRED_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_FIRED_TRIGGERS
(
      ENTRY_ID VARCHAR2(95)
        , TRIGGER_NAME VARCHAR2(80) NOT NULL
        , TRIGGER_GROUP VARCHAR2(80) NOT NULL
        , IS_VOLATILE VARCHAR2(1) NOT NULL
        , INSTANCE_NAME VARCHAR2(80) NOT NULL
        , FIRED_TIME NUMBER(13) NOT NULL
        , PRIORITY NUMBER(13) NOT NULL
        , STATE VARCHAR2(16) NOT NULL
        , JOB_NAME VARCHAR2(80)
        , JOB_GROUP VARCHAR2(80)
        , IS_STATEFUL VARCHAR2(1)
        , REQUESTS_RECOVERY VARCHAR2(1)
    

)
/

ALTER TABLE KRSB_QRTZ_FIRED_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_FIRED_TRIGGERSP1
PRIMARY KEY (ENTRY_ID)
/


CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI1 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (JOB_GROUP)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI2 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (JOB_NAME)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI3 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (REQUESTS_RECOVERY)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI4 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (IS_STATEFUL)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI5 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (TRIGGER_GROUP)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI6 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (INSTANCE_NAME)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI7 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (TRIGGER_NAME)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI8 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (TRIGGER_NAME, TRIGGER_GROUP)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI9 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (IS_VOLATILE)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_JOB_DETAILS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_JOB_DETAILS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_JOB_DETAILS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_JOB_DETAILS
(
      JOB_NAME VARCHAR2(80)
        , JOB_GROUP VARCHAR2(80)
        , DESCRIPTION VARCHAR2(120)
        , JOB_CLASS_NAME VARCHAR2(128) NOT NULL
        , IS_DURABLE VARCHAR2(1) NOT NULL
        , IS_VOLATILE VARCHAR2(1) NOT NULL
        , IS_STATEFUL VARCHAR2(1) NOT NULL
        , REQUESTS_RECOVERY VARCHAR2(1) NOT NULL
        , JOB_DATA BLOB
    

)
/

ALTER TABLE KRSB_QRTZ_JOB_DETAILS
    ADD CONSTRAINT KRSB_QRTZ_JOB_DETAILSP1
PRIMARY KEY (JOB_NAME,JOB_GROUP)
/


CREATE INDEX KRSB_QRTZ_JOB_DETAILS_TI1 
  ON KRSB_QRTZ_JOB_DETAILS 
  (REQUESTS_RECOVERY)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_JOB_LISTENERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_JOB_LISTENERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_JOB_LISTENERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_JOB_LISTENERS
(
      JOB_NAME VARCHAR2(80)
        , JOB_GROUP VARCHAR2(80)
        , JOB_LISTENER VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_JOB_LISTENERS
    ADD CONSTRAINT KRSB_QRTZ_JOB_LISTENERSP1
PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_LOCKS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_LOCKS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_LOCKS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_LOCKS
(
      LOCK_NAME VARCHAR2(40)
    

)
/

ALTER TABLE KRSB_QRTZ_LOCKS
    ADD CONSTRAINT KRSB_QRTZ_LOCKSP1
PRIMARY KEY (LOCK_NAME)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_PAUSED_TRIGGER_GRPS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_PAUSED_TRIGGER_GRPS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_PAUSED_TRIGGER_GRPS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_PAUSED_TRIGGER_GRPS
(
      TRIGGER_GROUP VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_PAUSED_TRIGGER_GRPS
    ADD CONSTRAINT KRSB_QRTZ_PAUSED_TRIGGER_GRP1
PRIMARY KEY (TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_SCHEDULER_STATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_SCHEDULER_STATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_SCHEDULER_STATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_SCHEDULER_STATE
(
      INSTANCE_NAME VARCHAR2(80)
        , LAST_CHECKIN_TIME NUMBER(13) NOT NULL
        , CHECKIN_INTERVAL NUMBER(13) NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_SCHEDULER_STATE
    ADD CONSTRAINT KRSB_QRTZ_SCHEDULER_STATEP1
PRIMARY KEY (INSTANCE_NAME)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_SIMPLE_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_SIMPLE_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_SIMPLE_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_SIMPLE_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , REPEAT_COUNT NUMBER(7) NOT NULL
        , REPEAT_INTERVAL NUMBER(12) NOT NULL
        , TIMES_TRIGGERED NUMBER(7) NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_SIMPLE_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_SIMPLE_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , JOB_NAME VARCHAR2(80) NOT NULL
        , JOB_GROUP VARCHAR2(80) NOT NULL
        , IS_VOLATILE VARCHAR2(1) NOT NULL
        , DESCRIPTION VARCHAR2(120)
        , NEXT_FIRE_TIME NUMBER(13)
        , PREV_FIRE_TIME NUMBER(13)
        , PRIORITY NUMBER(13)
        , TRIGGER_STATE VARCHAR2(16) NOT NULL
        , TRIGGER_TYPE VARCHAR2(8) NOT NULL
        , START_TIME NUMBER(13) NOT NULL
        , END_TIME NUMBER(13)
        , CALENDAR_NAME VARCHAR2(80)
        , MISFIRE_INSTR NUMBER(2)
        , JOB_DATA BLOB
    

)
/

ALTER TABLE KRSB_QRTZ_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/


CREATE INDEX KRSB_QRTZ_TRIGGERS_TI1 
  ON KRSB_QRTZ_TRIGGERS 
  (NEXT_FIRE_TIME)
/
CREATE INDEX KRSB_QRTZ_TRIGGERS_TI2 
  ON KRSB_QRTZ_TRIGGERS 
  (NEXT_FIRE_TIME, TRIGGER_STATE)
/
CREATE INDEX KRSB_QRTZ_TRIGGERS_TI3 
  ON KRSB_QRTZ_TRIGGERS 
  (TRIGGER_STATE)
/
CREATE INDEX KRSB_QRTZ_TRIGGERS_TI4 
  ON KRSB_QRTZ_TRIGGERS 
  (IS_VOLATILE)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_TRIGGER_LISTENERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_TRIGGER_LISTENERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_TRIGGER_LISTENERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_TRIGGER_LISTENERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , TRIGGER_LISTENER VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_TRIGGER_LISTENERS
    ADD CONSTRAINT KRSB_QRTZ_TRIGGER_LISTENERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER)
/







-----------------------------------------------------------------------------
-- KRSB_SVC_DEF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_SVC_DEF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_SVC_DEF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_SVC_DEF_T
(
      SVC_DEF_ID VARCHAR2(40)
        , SVC_NM VARCHAR2(255) NOT NULL
        , SVC_URL VARCHAR2(500) NOT NULL
        , INSTN_ID VARCHAR2(255) NOT NULL
        , APPL_ID VARCHAR2(255) NOT NULL
        , SRVR_IP VARCHAR2(40) NOT NULL
        , TYP_CD VARCHAR2(40) NOT NULL
        , SVC_VER VARCHAR2(40) NOT NULL
        , STAT_CD VARCHAR2(1) NOT NULL
        , SVC_DSCRPTR_ID VARCHAR2(40) NOT NULL
        , CHKSM VARCHAR2(30) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KRSB_SVC_DEF_T
    ADD CONSTRAINT KRSB_SVC_DEF_TP1
PRIMARY KEY (SVC_DEF_ID)
/


CREATE INDEX KRSB_SVC_DEF_TI1 
  ON KRSB_SVC_DEF_T 
  (INSTN_ID)
/
CREATE INDEX KRSB_SVC_DEF_TI2 
  ON KRSB_SVC_DEF_T 
  (SVC_NM, STAT_CD)
/
CREATE INDEX KRSB_SVC_DEF_TI3 
  ON KRSB_SVC_DEF_T 
  (STAT_CD)
/





-----------------------------------------------------------------------------
-- KRSB_SVC_DSCRPTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_SVC_DSCRPTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_SVC_DSCRPTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_SVC_DSCRPTR_T
(
      SVC_DSCRPTR_ID VARCHAR2(40)
        , DSCRPTR CLOB NOT NULL
    

)
/

ALTER TABLE KRSB_SVC_DSCRPTR_T
    ADD CONSTRAINT KRSB_SVC_DSCRPTR_TP1
PRIMARY KEY (SVC_DSCRPTR_ID)
/







-----------------------------------------------------------------------------
-- KSCO_COMMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_COMMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_COMMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_COMMENT
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , STATE VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , REFERENCE VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSCO_COMMENT
    ADD CONSTRAINT KSCO_COMMENTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_COMMENT_I1 
  ON KSCO_COMMENT 
  (TYPE)
/
CREATE INDEX KSCO_COMMENT_I2 
  ON KSCO_COMMENT 
  (RT_DESCR_ID)
/
CREATE INDEX KSCO_COMMENT_I3 
  ON KSCO_COMMENT 
  (REFERENCE)
/





-----------------------------------------------------------------------------
-- KSCO_COMMENT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_COMMENT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_COMMENT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_COMMENT_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_COMMENT_ATTR
    ADD CONSTRAINT KSCO_COMMENT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_COMMENT_ATTR_I1 
  ON KSCO_COMMENT_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSCO_COMMENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_COMMENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_COMMENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_COMMENT_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_COMMENT_TYPE
    ADD CONSTRAINT KSCO_COMMENT_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSCO_COMMENT_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_COMMENT_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_COMMENT_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_COMMENT_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_COMMENT_TYPE_ATTR
    ADD CONSTRAINT KSCO_COMMENT_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_COMMENT_TYPE_ATTR_I1 
  ON KSCO_COMMENT_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSCO_REFERENCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_REFERENCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_REFERENCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_REFERENCE
(
      ID VARCHAR2(255)
        , REFERENCE_ID VARCHAR2(255)
        , REFERENCE_TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    
    , CONSTRAINT SYS_C0033779 UNIQUE (REFERENCE_ID, REFERENCE_TYPE)

)
/

ALTER TABLE KSCO_REFERENCE
    ADD CONSTRAINT KSCO_REFERENCEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_REFERENCE_I1 
  ON KSCO_REFERENCE 
  (REFERENCE_TYPE)
/





-----------------------------------------------------------------------------
-- KSCO_REFERENCE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_REFERENCE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_REFERENCE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_REFERENCE_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_REFERENCE_TYPE
    ADD CONSTRAINT KSCO_REFERENCE_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSCO_REFERENCE_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_REFERENCE_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_REFERENCE_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_REFERENCE_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_REFERENCE_TYPE_ATTR
    ADD CONSTRAINT KSCO_REFERENCE_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_REFERENCE_TYPE_ATTR_I1 
  ON KSCO_REFERENCE_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSCO_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(2000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_RICH_TEXT_T
    ADD CONSTRAINT KSCO_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSCO_TAG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_TAG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_TAG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_TAG
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME_SPACE VARCHAR2(255)
        , PREDICATE VARCHAR2(255)
        , STATE VARCHAR2(255)
        , VAL VARCHAR2(255)
        , REFERENCE VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSCO_TAG
    ADD CONSTRAINT KSCO_TAGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_TAG_I1 
  ON KSCO_TAG 
  (REFERENCE)
/
CREATE INDEX KSCO_TAG_I2 
  ON KSCO_TAG 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSCO_TAG_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_TAG_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_TAG_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_TAG_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_TAG_ATTR
    ADD CONSTRAINT KSCO_TAG_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_TAG_ATTR_I1 
  ON KSCO_TAG_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSCO_TAG_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_TAG_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_TAG_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_TAG_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_TAG_TYPE
    ADD CONSTRAINT KSCO_TAG_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSCO_TAG_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSCO_TAG_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSCO_TAG_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSCO_TAG_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSCO_TAG_TYPE_ATTR
    ADD CONSTRAINT KSCO_TAG_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSCO_TAG_TYPE_ATTR_I1 
  ON KSCO_TAG_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT
(
      DOC_ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , DOCUMENT CLOB
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , FILE_NAME VARCHAR2(255)
        , NAME VARCHAR2(255)
        , STATE VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSDO_DOCUMENT
    ADD CONSTRAINT KSDO_DOCUMENTP1
PRIMARY KEY (DOC_ID)
/


CREATE INDEX KSDO_DOCUMENT_I1 
  ON KSDO_DOCUMENT 
  (RT_DESCR_ID)
/
CREATE INDEX KSDO_DOCUMENT_I2 
  ON KSDO_DOCUMENT 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSDO_DOCUMENT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_DOCUMENT_ATTR
    ADD CONSTRAINT KSDO_DOCUMENT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_DOCUMENT_ATTR_I1 
  ON KSDO_DOCUMENT_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_DOCUMENT_CATEGORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT_CATEGORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT_CATEGORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT_CATEGORY
(
      CATEGORY_ID VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_DOCUMENT_CATEGORY
    ADD CONSTRAINT KSDO_DOCUMENT_CATEGORYP1
PRIMARY KEY (CATEGORY_ID)
/


CREATE INDEX KSDO_DOCUMENT_CATEGORY_I1 
  ON KSDO_DOCUMENT_CATEGORY 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSDO_DOCUMENT_CATEGORY_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT_CATEGORY_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT_CATEGORY_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT_CATEGORY_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_DOCUMENT_CATEGORY_ATTR
    ADD CONSTRAINT KSDO_DOCUMENT_CATEGORY_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_DOC_CATEGORY_ATTR_I1 
  ON KSDO_DOCUMENT_CATEGORY_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_DOCUMENT_JN_DOC_CATEGORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT_JN_DOC_CATEGORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT_JN_DOC_CATEGORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT_JN_DOC_CATEGORY
(
      DOC_ID VARCHAR2(255) NOT NULL
        , CATEGORY_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSDO_DOC_JN_DOC_CATEGORY_I1 
  ON KSDO_DOCUMENT_JN_DOC_CATEGORY 
  (DOC_ID)
/
CREATE INDEX KSDO_DOC_JN_DOC_CATEGORY_I2 
  ON KSDO_DOCUMENT_JN_DOC_CATEGORY 
  (CATEGORY_ID)
/





-----------------------------------------------------------------------------
-- KSDO_DOCUMENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_DOCUMENT_TYPE
    ADD CONSTRAINT KSDO_DOCUMENT_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSDO_DOCUMENT_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_DOCUMENT_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_DOCUMENT_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_DOCUMENT_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_DOCUMENT_TYPE_ATTR
    ADD CONSTRAINT KSDO_DOCUMENT_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_DOCUMENT_TYPE_ATTR_I1 
  ON KSDO_DOCUMENT_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_REF_DOC_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_DOC_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_DOC_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_DOC_RELTN
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , REF_OBJ_ID VARCHAR2(255)
        , ST VARCHAR2(255)
        , TITLE VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , DOC_ID VARCHAR2(255)
        , TYPE_KEY VARCHAR2(255)
        , REF_OBJ_TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSDO_REF_DOC_RELTN
    ADD CONSTRAINT KSDO_REF_DOC_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_REF_DOC_RELTN_I1 
  ON KSDO_REF_DOC_RELTN 
  (TYPE_KEY)
/
CREATE INDEX KSDO_REF_DOC_RELTN_I2 
  ON KSDO_REF_DOC_RELTN 
  (REF_OBJ_TYPE_KEY)
/
CREATE INDEX KSDO_REF_DOC_RELTN_I3 
  ON KSDO_REF_DOC_RELTN 
  (RT_DESCR_ID)
/
CREATE INDEX KSDO_REF_DOC_RELTN_I4 
  ON KSDO_REF_DOC_RELTN 
  (DOC_ID)
/





-----------------------------------------------------------------------------
-- KSDO_REF_DOC_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_DOC_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_DOC_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_DOC_RELTN_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_DOC_RELTN_TYPE
    ADD CONSTRAINT KSDO_REF_DOC_RELTN_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSDO_REF_DOC_RELTN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_DOC_RELTN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_DOC_RELTN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_DOC_RELTN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_DOC_RELTN_TYPE_ATTR
    ADD CONSTRAINT KSDO_REF_DOC_RELTN_TYPE_ATTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_REF_DOC_REL_TYP_ATTR_I1 
  ON KSDO_REF_DOC_RELTN_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_REF_DOC_REL_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_DOC_REL_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_DOC_REL_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_DOC_REL_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_DOC_REL_ATTR
    ADD CONSTRAINT KSDO_REF_DOC_REL_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_REF_DOC_REL_ATTR_I1 
  ON KSDO_REF_DOC_REL_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_REF_OBJ_SUB_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_OBJ_SUB_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_OBJ_SUB_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_OBJ_SUB_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , REF_OBJ_TYPE_KEY VARCHAR2(255)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_OBJ_SUB_TYPE
    ADD CONSTRAINT KSDO_REF_OBJ_SUB_TYPEP1
PRIMARY KEY (TYPE_KEY)
/


CREATE INDEX KSDO_REF_OBJ_SUB_TYPE_I1 
  ON KSDO_REF_OBJ_SUB_TYPE 
  (REF_OBJ_TYPE_KEY)
/





-----------------------------------------------------------------------------
-- KSDO_REF_OBJ_SUB_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_OBJ_SUB_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_OBJ_SUB_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_OBJ_SUB_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_OBJ_SUB_TYPE_ATTR
    ADD CONSTRAINT KSDO_REF_OBJ_SUB_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_REF_OBJ_SUB_TYPE_ATTR_I1 
  ON KSDO_REF_OBJ_SUB_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_REF_OBJ_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_OBJ_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_OBJ_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_OBJ_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_OBJ_TYPE
    ADD CONSTRAINT KSDO_REF_OBJ_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSDO_REF_OBJ_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_OBJ_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_OBJ_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_OBJ_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_REF_OBJ_TYPE_ATTR
    ADD CONSTRAINT KSDO_REF_OBJ_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSDO_REF_OBJ_TYPE_ATTR_I1 
  ON KSDO_REF_OBJ_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSDO_REF_REL_TYP_JN_SUB_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_REF_REL_TYP_JN_SUB_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_REF_REL_TYP_JN_SUB_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_REF_REL_TYP_JN_SUB_TYP
(
      REF_DOC_RELTN_TYPE_KEY VARCHAR2(255) NOT NULL
        , REF_OBJ_SUB_TYPE_KEY VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSDO_REF_REL_TYP_JN_SUBTYP_I1 
  ON KSDO_REF_REL_TYP_JN_SUB_TYP 
  (REF_OBJ_SUB_TYPE_KEY)
/
CREATE INDEX KSDO_REF_REL_TYP_JN_SUBTYP_I2 
  ON KSDO_REF_REL_TYP_JN_SUB_TYP 
  (REF_DOC_RELTN_TYPE_KEY)
/





-----------------------------------------------------------------------------
-- KSDO_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSDO_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSDO_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSDO_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(2000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSDO_RICH_TEXT_T
    ADD CONSTRAINT KSDO_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEM_CTX_JN_ENUM_VAL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEM_CTX_JN_ENUM_VAL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEM_CTX_JN_ENUM_VAL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEM_CTX_JN_ENUM_VAL_T
(
      ENUM_VAL_ID VARCHAR2(255) NOT NULL
        , CTX_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSEM_CTX_JN_ENUM_VAL_T_I1 
  ON KSEM_CTX_JN_ENUM_VAL_T 
  (CTX_ID)
/
CREATE INDEX KSEM_CTX_JN_ENUM_VAL_T_I2 
  ON KSEM_CTX_JN_ENUM_VAL_T 
  (ENUM_VAL_ID)
/





-----------------------------------------------------------------------------
-- KSEM_CTX_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEM_CTX_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEM_CTX_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEM_CTX_T
(
      ID VARCHAR2(255)
        , CTX_KEY VARCHAR2(255)
        , CTX_VAL VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CREATEID VARCHAR2(255)
        , UPDATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATETIME TIMESTAMP
    
    , CONSTRAINT SYS_C00285110 UNIQUE (CTX_KEY, CTX_VAL)

)
/

ALTER TABLE KSEM_CTX_T
    ADD CONSTRAINT KSEM_CTX_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEM_ENUM_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEM_ENUM_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEM_ENUM_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEM_ENUM_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEM_ENUM_ATTR
    ADD CONSTRAINT KSEM_ENUM_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEM_ENUM_ATTR_IF1 
  ON KSEM_ENUM_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEM_ENUM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEM_ENUM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEM_ENUM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEM_ENUM_T
(
      ENUM_KEY VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CREATEID VARCHAR2(255)
        , UPDATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATETIME TIMESTAMP
        , ENUM_TYPE VARCHAR2(255)
        , ENUM_STATE VARCHAR2(255)
        , DESCR_FORMATTED VARCHAR2(4000)
    

)
/

ALTER TABLE KSEM_ENUM_T
    ADD CONSTRAINT KSEM_ENUM_TP1
PRIMARY KEY (ENUM_KEY)
/







-----------------------------------------------------------------------------
-- KSEM_ENUM_VAL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEM_ENUM_VAL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEM_ENUM_VAL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEM_ENUM_VAL_T
(
      ID VARCHAR2(255)
        , ABBREV_VAL VARCHAR2(255)
        , CD VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VAL VARCHAR2(255)
        , ENUM_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CREATEID VARCHAR2(255)
        , UPDATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATETIME TIMESTAMP
        , SORT_KEY VARCHAR2(255)
    

)
/

ALTER TABLE KSEM_ENUM_VAL_T
    ADD CONSTRAINT KSEM_ENUM_VAL_TP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEM_ENUM_VAL_I2 
  ON KSEM_ENUM_VAL_T 
  (CD)
/
CREATE INDEX KSEM_ENUM_VAL_T_I1 
  ON KSEM_ENUM_VAL_T 
  (ENUM_KEY)
/





-----------------------------------------------------------------------------
-- KSEN_APPT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_APPT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_APPT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_APPT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(255)
        , APPT_TYPE VARCHAR2(255) NOT NULL
        , APPT_STATE VARCHAR2(255) NOT NULL
        , PERS_ID VARCHAR2(255) NOT NULL
        , SLOT_ID VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_APPT
    ADD CONSTRAINT KSEN_APPTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_APPT_I1 
  ON KSEN_APPT 
  (APPT_TYPE)
/
CREATE INDEX KSEN_APPT_I2 
  ON KSEN_APPT 
  (PERS_ID)
/
CREATE INDEX KSEN_APPT_IF1 
  ON KSEN_APPT 
  (SLOT_ID)
/





-----------------------------------------------------------------------------
-- KSEN_APPT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_APPT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_APPT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_APPT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_APPT_ATTR
    ADD CONSTRAINT KSEN_APPT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_APPT_ATTR_IF1 
  ON KSEN_APPT_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_APPT_SLOT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_APPT_SLOT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_APPT_SLOT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_APPT_SLOT
(
      OBJ_ID VARCHAR2(255)
        , APPT_SLOT_TYPE VARCHAR2(255) NOT NULL
        , APPT_SLOT_STATE VARCHAR2(255) NOT NULL
        , START_DT TIMESTAMP NOT NULL
        , END_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , ID VARCHAR2(255)
        , APPT_WINDOW_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_APPT_SLOT
    ADD CONSTRAINT KSEN_APPT_SLOTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_APPT_SLOT_IF1 
  ON KSEN_APPT_SLOT 
  (APPT_WINDOW_ID)
/





-----------------------------------------------------------------------------
-- KSEN_APPT_SLOT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_APPT_SLOT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_APPT_SLOT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_APPT_SLOT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_APPT_SLOT_ATTR
    ADD CONSTRAINT KSEN_APPT_SLOT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_APPT_SLOT_ATTR_IF1 
  ON KSEN_APPT_SLOT_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_APPT_WINDOW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_APPT_WINDOW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_APPT_WINDOW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_APPT_WINDOW
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(255)
        , APPT_WINDOW_TYPE VARCHAR2(255) NOT NULL
        , APPT_WINDOW_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , START_DT TIMESTAMP
        , END_DT TIMESTAMP
        , SR_WEEKDAYS VARCHAR2(255)
        , SR_START_TIME_MS NUMBER(22)
        , SR_END_TIME_MS NUMBER(22)
        , SR_START_INTVL_DUR_TYPE VARCHAR2(255)
        , SR_START_INTVL_TIME_QTY NUMBER(22)
        , SR_DUR_TYPE VARCHAR2(255)
        , SR_DUR_TIME_QTY NUMBER(22)
        , PRD_MSTONE_ID VARCHAR2(255)
        , ASSIGNED_POPULATION_ID VARCHAR2(255)
        , ASSIGNED_ORDER_TYPE VARCHAR2(255)
        , MAX_APPT_PER_SLOT NUMBER(22)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_APPT_WINDOW
    ADD CONSTRAINT KSEN_APPT_WINDOWP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_APPT_WINDOW_I1 
  ON KSEN_APPT_WINDOW 
  (APPT_WINDOW_TYPE)
/
CREATE INDEX KSEN_APPT_WINDOW_I2 
  ON KSEN_APPT_WINDOW 
  (ASSIGNED_POPULATION_ID)
/
CREATE INDEX KSEN_APPT_WINDOW_I3 
  ON KSEN_APPT_WINDOW 
  (PRD_MSTONE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_APPT_WINDOW_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_APPT_WINDOW_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_APPT_WINDOW_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_APPT_WINDOW_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_APPT_WINDOW_ATTR
    ADD CONSTRAINT KSEN_APPT_WINDOW_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_APPT_WINDOW_ATTR_IF1 
  ON KSEN_APPT_WINDOW_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ATP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ATP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ATP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ATP
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATP_TYPE VARCHAR2(255) NOT NULL
        , ATP_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000) NOT NULL
        , DESCR_FORMATTED VARCHAR2(4000)
        , ATP_CD VARCHAR2(255)
        , END_DT TIMESTAMP NOT NULL
        , START_DT TIMESTAMP NOT NULL
        , ADMIN_ORG_ID VARCHAR2(50)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ATP
    ADD CONSTRAINT KSEN_ATPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ATP_I1 
  ON KSEN_ATP 
  (ATP_TYPE)
/
CREATE INDEX KSEN_ATP_I2 
  ON KSEN_ATP 
  (ATP_CD)
/
CREATE INDEX KSEN_ATP_I3 
  ON KSEN_ATP 
  (START_DT)
/





-----------------------------------------------------------------------------
-- KSEN_ATPATP_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ATPATP_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ATPATP_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ATPATP_RELTN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATP_TYPE VARCHAR2(255) NOT NULL
        , ATP_STATE VARCHAR2(255) NOT NULL
        , ATP_ID VARCHAR2(255) NOT NULL
        , RELATED_ATP_ID VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ATPATP_RELTN
    ADD CONSTRAINT KSEN_ATPATP_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ATPATP_RELTN_I1 
  ON KSEN_ATPATP_RELTN 
  (ATP_TYPE)
/
CREATE INDEX KSEN_ATPATP_RELTN_IF1 
  ON KSEN_ATPATP_RELTN 
  (ATP_ID)
/
CREATE INDEX KSEN_ATPATP_RELTN_IF2 
  ON KSEN_ATPATP_RELTN 
  (RELATED_ATP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ATPATP_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ATPATP_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ATPATP_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ATPATP_RELTN_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ATPATP_RELTN_ATTR
    ADD CONSTRAINT KSEN_ATPATP_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ATPATP_RELTN_ATTR_IF1 
  ON KSEN_ATPATP_RELTN_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ATPMSTONE_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ATPMSTONE_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ATPMSTONE_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ATPMSTONE_RELTN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , ATP_ID VARCHAR2(255)
        , MSTONE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ATPMSTONE_RELTN
    ADD CONSTRAINT KSEN_ATPMSTONE_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ATPMSTONE_RELTN_IF1 
  ON KSEN_ATPMSTONE_RELTN 
  (ATP_ID)
/
CREATE INDEX KSEN_ATPMSTONE_RELTN_IF2 
  ON KSEN_ATPMSTONE_RELTN 
  (MSTONE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ATP_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ATP_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ATP_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ATP_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ATP_ATTR
    ADD CONSTRAINT KSEN_ATP_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ATP_ATTR_IF1 
  ON KSEN_ATP_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_CODE_GENERATOR_LOCKS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CODE_GENERATOR_LOCKS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CODE_GENERATOR_LOCKS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CODE_GENERATOR_LOCKS
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , CODE VARCHAR2(255) NOT NULL
        , UNIQUE_KEY VARCHAR2(255) NOT NULL
        , NAMESPACE VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_CODE_GENERATOR_LOCKS_I1 UNIQUE (CODE, UNIQUE_KEY, NAMESPACE)

)
/

ALTER TABLE KSEN_CODE_GENERATOR_LOCKS
    ADD CONSTRAINT KSEN_CODE_GENERATOR_LOCKSP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_CO_AO_CLUSTER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CO_AO_CLUSTER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CO_AO_CLUSTER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CO_AO_CLUSTER
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , AO_CLUSTER_TYPE VARCHAR2(255) NOT NULL
        , AO_CLUSTER_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , FORMAT_OFFERING_ID VARCHAR2(255) NOT NULL
        , PRIVATE_NAME VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_CO_AO_CLUSTER
    ADD CONSTRAINT KSEN_CO_AO_CLUSTERP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_CO_AO_CLUSTER_I1 
  ON KSEN_CO_AO_CLUSTER 
  (FORMAT_OFFERING_ID)
/





-----------------------------------------------------------------------------
-- KSEN_CO_AO_CLUSTER_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CO_AO_CLUSTER_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CO_AO_CLUSTER_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CO_AO_CLUSTER_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_CO_AO_CLUSTER_ATTR
    ADD CONSTRAINT KSEN_CO_AO_CLUSTER_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_CO_AO_CLUSTER_ATTR_IF1 
  ON KSEN_CO_AO_CLUSTER_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_CO_AO_CLUSTER_SET
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CO_AO_CLUSTER_SET';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CO_AO_CLUSTER_SET CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CO_AO_CLUSTER_SET
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , AO_CLUSTER_ID VARCHAR2(255) NOT NULL
        , ACTIVITY_OFFERING_TYPE VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_CO_AO_CLUSTER_SET
    ADD CONSTRAINT KSEN_CO_AO_CLUSTER_SETP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_CO_AO_CLISTER_SET_IF1 
  ON KSEN_CO_AO_CLUSTER_SET 
  (AO_CLUSTER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_CO_AO_CLUSTER_SET_AO
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CO_AO_CLUSTER_SET_AO';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CO_AO_CLUSTER_SET_AO CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CO_AO_CLUSTER_SET_AO
(
      AOC_SET_ID VARCHAR2(255)
        , ACTIVITY_OFFERING_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_CO_AO_CLUSTER_SET_AO
    ADD CONSTRAINT KSEN_CO_AO_CLUSTER_SET_AOP1
PRIMARY KEY (AOC_SET_ID,ACTIVITY_OFFERING_ID)
/


CREATE INDEX XIF1KSEN_CO_AOC_SET_AO_IF1 
  ON KSEN_CO_AO_CLUSTER_SET_AO 
  (AOC_SET_ID)
/





-----------------------------------------------------------------------------
-- KSEN_CO_SEAT_POOL_DEFN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CO_SEAT_POOL_DEFN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CO_SEAT_POOL_DEFN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CO_SEAT_POOL_DEFN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , SEAT_POOL_DEFN_TYPE VARCHAR2(255) NOT NULL
        , SEAT_POOL_DEFN_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , ACTIVITY_OFFERING_ID VARCHAR2(255)
        , EXPIR_MSTONE_TYPE VARCHAR2(255)
        , PERCENTAGE_IND NUMBER(1)
        , SEAT_LIMIT NUMBER(22)
        , PROCESSING_PRIORITY NUMBER(22)
        , POPULATION_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_CO_SEAT_POOL_DEFN
    ADD CONSTRAINT KSEN_CO_SEAT_POOL_DEFNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_CO_SEAT_POOL_DEFN_I1 
  ON KSEN_CO_SEAT_POOL_DEFN 
  (ACTIVITY_OFFERING_ID)
/





-----------------------------------------------------------------------------
-- KSEN_CO_SEAT_POOL_DEFN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_CO_SEAT_POOL_DEFN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_CO_SEAT_POOL_DEFN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_CO_SEAT_POOL_DEFN_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_CO_SEAT_POOL_DEFN_ATTR
    ADD CONSTRAINT KSEN_CO_SEAT_POOL_DEFN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_CO_SPD_ATTR_IF1 
  ON KSEN_CO_SEAT_POOL_DEFN_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ENROLLMENT_FEE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ENROLLMENT_FEE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ENROLLMENT_FEE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ENROLLMENT_FEE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ENRL_FEE_TYPE VARCHAR2(255) NOT NULL
        , ENRL_FEE_STATE VARCHAR2(255) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , CURRENCY_TYPE VARCHAR2(255)
        , CURRENCY_QUANTITY NUMBER(22)
        , ORG_ID VARCHAR2(255)
        , REF_OBJECT_URI VARCHAR2(255)
        , REF_OBJECT_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ENROLLMENT_FEE
    ADD CONSTRAINT KSEN_ENROLLMENT_FEEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ENRL_FEE_I1 
  ON KSEN_ENROLLMENT_FEE 
  (ENRL_FEE_TYPE)
/
CREATE INDEX KSEN_ENRL_FEE_I2 
  ON KSEN_ENROLLMENT_FEE 
  (REF_OBJECT_URI)
/





-----------------------------------------------------------------------------
-- KSEN_ENROLLMENT_FEE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ENROLLMENT_FEE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ENROLLMENT_FEE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ENROLLMENT_FEE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ENROLLMENT_FEE_ATTR
    ADD CONSTRAINT KSEN_ENROLLMENT_FEE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ENRL_FEE_ATTR_IF1 
  ON KSEN_ENROLLMENT_FEE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_HOLD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_HOLD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_HOLD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_HOLD
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , HOLD_TYPE VARCHAR2(255) NOT NULL
        , HOLD_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , ISSUE_ID VARCHAR2(55) NOT NULL
        , PERS_ID VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP NOT NULL
        , RELEASED_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_HOLD
    ADD CONSTRAINT KSEN_HOLDP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_HOLD_I1 
  ON KSEN_HOLD 
  (HOLD_TYPE)
/
CREATE INDEX KSEN_HOLD_I2 
  ON KSEN_HOLD 
  (PERS_ID, ISSUE_ID)
/
CREATE INDEX KSEN_HOLD_IF1 
  ON KSEN_HOLD 
  (ISSUE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_HOLD_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_HOLD_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_HOLD_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_HOLD_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_HOLD_ATTR
    ADD CONSTRAINT KSEN_HOLD_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_HOLD_ATTR_IF1 
  ON KSEN_HOLD_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_HOLD_ISSUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_HOLD_ISSUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_HOLD_ISSUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_HOLD_ISSUE
(
      ID VARCHAR2(55)
        , OBJ_ID VARCHAR2(36)
        , HOLD_ISSUE_TYPE VARCHAR2(255) NOT NULL
        , HOLD_ISSUE_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(255)
        , ORG_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_HOLD_ISSUE
    ADD CONSTRAINT KSEN_HOLD_ISSUEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_HOLD_ISSUE_I1 
  ON KSEN_HOLD_ISSUE 
  (HOLD_ISSUE_TYPE)
/
CREATE INDEX KSEN_HOLD_ISSUE_I2 
  ON KSEN_HOLD_ISSUE 
  (ORG_ID)
/





-----------------------------------------------------------------------------
-- KSEN_HOLD_ISSUE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_HOLD_ISSUE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_HOLD_ISSUE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_HOLD_ISSUE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(55)
    

)
/

ALTER TABLE KSEN_HOLD_ISSUE_ATTR
    ADD CONSTRAINT KSEN_HOLD_ISSUE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_HOLD_ISSUE_ATTR_IF1 
  ON KSEN_HOLD_ISSUE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LPR_TYPE VARCHAR2(255) NOT NULL
        , LPR_STATE VARCHAR2(255) NOT NULL
        , LUI_ID VARCHAR2(255) NOT NULL
        , PERS_ID VARCHAR2(255) NOT NULL
        , COMMIT_PERCT NUMBER(22)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR
    ADD CONSTRAINT KSEN_LPRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_I1 
  ON KSEN_LPR 
  (PERS_ID, LPR_TYPE, LPR_STATE)
/
CREATE INDEX KSEN_LPR_I2 
  ON KSEN_LPR 
  (LUI_ID, LPR_TYPE, LPR_STATE)
/
CREATE INDEX KSEN_LPR_I3 
  ON KSEN_LPR 
  (PERS_ID, LUI_ID)
/
CREATE INDEX KSEN_LPR_I4 
  ON KSEN_LPR 
  (PERS_ID, LPR_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_ATTR
    ADD CONSTRAINT KSEN_LPR_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_ATTR_IF1 
  ON KSEN_LPR_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_RESULT_VAL_GRP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_RESULT_VAL_GRP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_RESULT_VAL_GRP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_RESULT_VAL_GRP
(
      ID VARCHAR2(255)
        , LPR_ID VARCHAR2(255) NOT NULL
        , RESULT_VAL_GRP_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LPR_RESULT_VAL_GRP_I1 UNIQUE (LPR_ID, RESULT_VAL_GRP_ID)

)
/

ALTER TABLE KSEN_LPR_RESULT_VAL_GRP
    ADD CONSTRAINT KSEN_LPR_RESULT_VAL_GRPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_RESULT_VAL_GRP_IF1 
  ON KSEN_LPR_RESULT_VAL_GRP 
  (LPR_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_ROSTER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_ROSTER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_ROSTER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_ROSTER
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LPR_ROSTER_TYPE VARCHAR2(255) NOT NULL
        , LPR_ROSTER_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , MAX_CAPACITY NUMBER(22)
        , CHECK_IN_REQ_IND VARCHAR2(1)
        , CHECK_IN_FREQ_DUR_TYPE VARCHAR2(255)
        , CHECK_IN_FREQ_TIME_QTY NUMBER(22)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_ROSTER
    ADD CONSTRAINT KSEN_LPR_ROSTERP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_ROSTER_I1 
  ON KSEN_LPR_ROSTER 
  (LPR_ROSTER_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_ROSTER_ASSO_LUI_ID
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_ROSTER_ASSO_LUI_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_ROSTER_ASSO_LUI_ID CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_ROSTER_ASSO_LUI_ID
(
      ID VARCHAR2(255)
        , LPR_ROSTER_ID VARCHAR2(255) NOT NULL
        , LUI_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LPR_ROSTER_ASSO_LUI_ID_I1 UNIQUE (LPR_ROSTER_ID, LUI_ID)

)
/

ALTER TABLE KSEN_LPR_ROSTER_ASSO_LUI_ID
    ADD CONSTRAINT KSEN_LPR_ROSTER_ASSO_LUI_IDP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_ROSTER_ASSO_LUI_ID_I2 
  ON KSEN_LPR_ROSTER_ASSO_LUI_ID 
  (LUI_ID)
/
CREATE INDEX KSEN_LPR_ROSTER_ASSO_LUI_ID_IF 
  ON KSEN_LPR_ROSTER_ASSO_LUI_ID 
  (LPR_ROSTER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_ROSTER_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_ROSTER_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_ROSTER_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_ROSTER_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_ROSTER_ATTR
    ADD CONSTRAINT KSEN_LPR_ROSTER_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_ROSTER_ATTR_IF1 
  ON KSEN_LPR_ROSTER_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_ROSTER_ENTRY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_ROSTER_ENTRY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_ROSTER_ENTRY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_ROSTER_ENTRY
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LPR_ROSTER_ENTRY_TYPE VARCHAR2(255) NOT NULL
        , LPR_ROSTER_ENTRY_STATE VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , POSITION NUMBER(22)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , LPR_ID VARCHAR2(255)
        , LPR_ROSTER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_ROSTER_ENTRY
    ADD CONSTRAINT KSEN_LPR_ROSTER_ENTRYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_ROSTER_ENTRY_IF1 
  ON KSEN_LPR_ROSTER_ENTRY 
  (LPR_ID)
/
CREATE INDEX KSEN_LPR_ROSTER_ENTRY_IF2 
  ON KSEN_LPR_ROSTER_ENTRY 
  (LPR_ROSTER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_ROSTER_ENTRY_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_ROSTER_ENTRY_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_ROSTER_ENTRY_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_ROSTER_ENTRY_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_ROSTER_ENTRY_ATTR
    ADD CONSTRAINT KSEN_LPR_ROSTER_ENTRY_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_ROSTER_ENTRY_ATTR_IF1 
  ON KSEN_LPR_ROSTER_ENTRY_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_TRANS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_TRANS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_TRANS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_TRANS
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LPR_TRANS_TYPE VARCHAR2(255) NOT NULL
        , LPR_TRANS_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , REQUESTING_PERS_ID VARCHAR2(255)
        , ATP_ID VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , VER_NBR NUMBER(9) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_TRANS
    ADD CONSTRAINT KSEN_LPR_TRANSP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_TRANS_I1 
  ON KSEN_LPR_TRANS 
  (LPR_TRANS_STATE)
/
CREATE INDEX KSEN_LPR_TRANS_I2 
  ON KSEN_LPR_TRANS 
  (REQUESTING_PERS_ID, ATP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_TRANS_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_TRANS_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_TRANS_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_TRANS_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_TRANS_ATTR
    ADD CONSTRAINT KSEN_LPR_TRANS_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_TRANS_ATTR_IF1 
  ON KSEN_LPR_TRANS_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_TRANS_ITEM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_TRANS_ITEM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_TRANS_ITEM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_TRANS_ITEM
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LPR_TRANS_ITEM_TYPE VARCHAR2(255) NOT NULL
        , LPR_TRANS_ITEM_STATE VARCHAR2(255) NOT NULL
        , PERS_ID VARCHAR2(255)
        , NEW_LUI_ID VARCHAR2(255)
        , EXISTING_LUI_ID VARCHAR2(255)
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , VER_NBR NUMBER(9) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , GROUP_ID VARCHAR2(255)
        , LTI_RESULTING_LPR_ID VARCHAR2(255)
        , LTI_RESULT_MESSAGE VARCHAR2(4000)
        , LTI_RESULT_STATUS VARCHAR2(255)
        , LPR_TRANS_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_TRANS_ITEM
    ADD CONSTRAINT KSEN_LPR_TRANS_ITEMP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_TRANS_ITEM_I1 
  ON KSEN_LPR_TRANS_ITEM 
  (PERS_ID)
/
CREATE INDEX KSEN_LPR_TRANS_ITEM_I2 
  ON KSEN_LPR_TRANS_ITEM 
  (NEW_LUI_ID)
/
CREATE INDEX KSEN_LPR_TRANS_ITEM_I3 
  ON KSEN_LPR_TRANS_ITEM 
  (EXISTING_LUI_ID)
/
CREATE INDEX KSEN_LPR_TRANS_ITEM_I4 
  ON KSEN_LPR_TRANS_ITEM 
  (LTI_RESULTING_LPR_ID)
/
CREATE INDEX KSEN_LPR_TRANS_ITEM_IF1 
  ON KSEN_LPR_TRANS_ITEM 
  (LPR_TRANS_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_TRANS_ITEM_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_TRANS_ITEM_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_TRANS_ITEM_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_TRANS_ITEM_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_TRANS_ITEM_ATTR
    ADD CONSTRAINT KSEN_LPR_TRANS_ITEM_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_TRANS_ITEM_ATTR_IF1 
  ON KSEN_LPR_TRANS_ITEM_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_TRANS_ITEM_RQST_OPT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_TRANS_ITEM_RQST_OPT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_TRANS_ITEM_RQST_OPT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_TRANS_ITEM_RQST_OPT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , OPTION_KEY VARCHAR2(255)
        , OPTION_VALUE VARCHAR2(255)
        , LPR_TRANS_ITEM_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LPR_TRANS_ITEM_RQST_OPT
    ADD CONSTRAINT KSEN_LPR_TRANS_ITEM_RQST_OPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_LTI_RQST_OPT_IF1 
  ON KSEN_LPR_TRANS_ITEM_RQST_OPT 
  (LPR_TRANS_ITEM_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LPR_TRANS_ITEM_RVG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LPR_TRANS_ITEM_RVG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LPR_TRANS_ITEM_RVG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LPR_TRANS_ITEM_RVG
(
      ID VARCHAR2(255)
        , LPR_TRANS_ITEM_ID VARCHAR2(255) NOT NULL
        , RESULT_VAL_GRP_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LPR_LTI_RVG_I1 UNIQUE (LPR_TRANS_ITEM_ID, RESULT_VAL_GRP_ID)

)
/

ALTER TABLE KSEN_LPR_TRANS_ITEM_RVG
    ADD CONSTRAINT KSEN_LPR_TRANS_ITEM_RVGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LPR_LTI_RVG_IF1 
  ON KSEN_LPR_TRANS_ITEM_RVG 
  (LPR_TRANS_ITEM_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRC_RESULT_SCALE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RESULT_SCALE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RESULT_SCALE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RESULT_SCALE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , RESULT_SCALE_TYPE VARCHAR2(255) NOT NULL
        , RESULT_SCALE_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , RANGE_MIN_VALUE VARCHAR2(255)
        , RANGE_MAX_VALUE VARCHAR2(255)
        , RANGE_INCREMENT VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RESULT_SCALE
    ADD CONSTRAINT KSEN_LRC_RESULT_SCALEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_LRC_RESULT_SCALE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RESULT_SCALE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RESULT_SCALE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RESULT_SCALE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RESULT_SCALE_ATTR
    ADD CONSTRAINT KSEN_LRC_RESULT_SCALE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LRC_RESULT_SCALE_ATTR_IF1 
  ON KSEN_LRC_RESULT_SCALE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRC_RESULT_VALUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RESULT_VALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RESULT_VALUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RESULT_VALUE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , RESULT_VALUE_TYPE VARCHAR2(255) NOT NULL
        , RESULT_VALUE_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , RESULT_SCALE_ID VARCHAR2(255) NOT NULL
        , NUMERIC_VALUE NUMBER(22)
        , RESULT_VALUE VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RESULT_VALUE
    ADD CONSTRAINT KSEN_LRC_RESULT_VALUEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LRC_RESULT_VALUE_I1 
  ON KSEN_LRC_RESULT_VALUE 
  (RESULT_VALUE_TYPE, RESULT_VALUE_STATE, RESULT_VALUE)
/
CREATE INDEX KSEN_LRC_RESULT_VAL_IF1 
  ON KSEN_LRC_RESULT_VALUE 
  (RESULT_SCALE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRC_RESULT_VALUE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RESULT_VALUE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RESULT_VALUE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RESULT_VALUE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RESULT_VALUE_ATTR
    ADD CONSTRAINT KSEN_LRC_RESULT_VALUE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LRC_RESULT_VALUE_ATTR_IF1 
  ON KSEN_LRC_RESULT_VALUE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRC_RVG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RVG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RVG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RVG
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , RVG_TYPE VARCHAR2(255) NOT NULL
        , RVG_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , RESULT_SCALE_ID VARCHAR2(255) NOT NULL
        , RANGE_MIN_VALUE VARCHAR2(255)
        , RANGE_MAX_VALUE VARCHAR2(255)
        , RANGE_INCREMENT VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RVG
    ADD CONSTRAINT KSEN_LRC_RVGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LRC_RVG_I1 
  ON KSEN_LRC_RVG 
  (RVG_TYPE)
/
CREATE INDEX KSEN_LRC_RVG_IF1 
  ON KSEN_LRC_RVG 
  (RESULT_SCALE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRC_RVG_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RVG_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RVG_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RVG_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RVG_ATTR
    ADD CONSTRAINT KSEN_LRC_RVG_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LRC_RVG_ATTR_IF1 
  ON KSEN_LRC_RVG_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRC_RVG_RESULT_VALUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRC_RVG_RESULT_VALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRC_RVG_RESULT_VALUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRC_RVG_RESULT_VALUE
(
      RVG_ID VARCHAR2(255)
        , RESULT_VALUE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRC_RVG_RESULT_VALUE
    ADD CONSTRAINT KSEN_LRC_RVG_RESULT_VALUEP1
PRIMARY KEY (RVG_ID,RESULT_VALUE_ID)
/


CREATE INDEX KSEN_LRC_RVG_RV_IF1 
  ON KSEN_LRC_RVG_RESULT_VALUE 
  (RVG_ID)
/
CREATE INDEX KSEN_LRC_RVG_RV_IF2 
  ON KSEN_LRC_RVG_RESULT_VALUE 
  (RESULT_VALUE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LRR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , NAME VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , STATE_ID VARCHAR2(255)
        , TYPE_ID VARCHAR2(255)
        , LPR_ID VARCHAR2(255)
        , RESULT_VALUE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRR
    ADD CONSTRAINT KSEN_LRRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_LRR_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRR_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRR_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRR_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRR_ATTR
    ADD CONSTRAINT KSEN_LRR_ATTRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_LRR_RES_SOURCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRR_RES_SOURCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRR_RES_SOURCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRR_RES_SOURCE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , NAME VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , TYPE_ID VARCHAR2(255)
        , ARTICULATE_ID VARCHAR2(255)
        , RES_TRANS_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRR_RES_SOURCE
    ADD CONSTRAINT KSEN_LRR_RES_SOURCEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_LRR_RES_SOURCE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRR_RES_SOURCE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRR_RES_SOURCE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRR_RES_SOURCE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/








-----------------------------------------------------------------------------
-- KSEN_LRR_RES_SRC_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRR_RES_SRC_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRR_RES_SRC_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRR_RES_SRC_RELTN
(
      LRR_ID VARCHAR2(255)
        , RES_SRC_ID VARCHAR2(255)
    

)
/








-----------------------------------------------------------------------------
-- KSEN_LRR_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LRR_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LRR_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LRR_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , REF_OBJECT_URI VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LRR_TYPE
    ADD CONSTRAINT KSEN_LRR_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSEN_LUI
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUI_TYPE VARCHAR2(255) NOT NULL
        , LUI_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , CLU_ID VARCHAR2(255)
        , ATP_ID VARCHAR2(255)
        , SCHEDULE_ID VARCHAR2(255)
        , MAX_SEATS NUMBER(10)
        , MIN_SEATS NUMBER(10)
        , REF_URL VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI
    ADD CONSTRAINT KSEN_LUIP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_I1 
  ON KSEN_LUI 
  (CLU_ID, ATP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUICAPACITY_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUICAPACITY_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUICAPACITY_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUICAPACITY_RELTN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUI_ID VARCHAR2(255)
        , LUI_CAPACITY_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUICAPACITY_RELTN
    ADD CONSTRAINT KSEN_LUICAPACITY_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUICAPACITY_RELTN_IF1 
  ON KSEN_LUICAPACITY_RELTN 
  (LUI_ID)
/
CREATE INDEX KSEN_LUICAPACITY_RELTN_IF2 
  ON KSEN_LUICAPACITY_RELTN 
  (LUI_CAPACITY_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUILUI_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUILUI_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUILUI_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUILUI_RELTN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUILUI_RELTN_TYPE VARCHAR2(255) NOT NULL
        , LUILUI_RELTN_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , LUI_ID VARCHAR2(255)
        , RELATED_LUI_ID VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUILUI_RELTN
    ADD CONSTRAINT KSEN_LUILUI_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUILUI_RELTN_I1 
  ON KSEN_LUILUI_RELTN 
  (LUILUI_RELTN_TYPE, RELATED_LUI_ID)
/
CREATE INDEX KSEN_LUILUI_RELTN_I2 
  ON KSEN_LUILUI_RELTN 
  (LUILUI_RELTN_TYPE, LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUILUI_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUILUI_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUILUI_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUILUI_RELTN_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUILUI_RELTN_ATTR
    ADD CONSTRAINT KSEN_LUILUI_RELTN_ATTRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_LUI_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_ATTR
    ADD CONSTRAINT KSEN_LUI_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_ATTR_IF1 
  ON KSEN_LUI_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_CAMPUS_LOC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_CAMPUS_LOC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_CAMPUS_LOC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_CAMPUS_LOC
(
      ID VARCHAR2(255)
        , LUI_ID VARCHAR2(255) NOT NULL
        , CAMPUS_LOC VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LUI_CAMPUS_LOC_I1 UNIQUE (LUI_ID, CAMPUS_LOC)

)
/

ALTER TABLE KSEN_LUI_CAMPUS_LOC
    ADD CONSTRAINT KSEN_LUI_CAMPUS_LOCP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_CAMPUS_LOC_IF1 
  ON KSEN_LUI_CAMPUS_LOC 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_CAPACITY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_CAPACITY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_CAPACITY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_CAPACITY
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUI_CAPACITY_TYPE VARCHAR2(255) NOT NULL
        , LUI_CAPACITY_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , MAX_SEATS NUMBER(22)
        , PROCESSING_ORDER NUMBER(22)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_CAPACITY
    ADD CONSTRAINT KSEN_LUI_CAPACITYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_CAPACITY_I1 
  ON KSEN_LUI_CAPACITY 
  (LUI_CAPACITY_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_CLUCLU_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_CLUCLU_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_CLUCLU_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_CLUCLU_RELTN
(
      ID VARCHAR2(255)
        , LUI_ID VARCHAR2(255) NOT NULL
        , CLUCLU_RELTN_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LUI_CLUCLU_RELTN_I1 UNIQUE (LUI_ID, CLUCLU_RELTN_ID)

)
/

ALTER TABLE KSEN_LUI_CLUCLU_RELTN
    ADD CONSTRAINT KSEN_LUI_CLUCLU_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_CLUCLU_RELTN_IF1 
  ON KSEN_LUI_CLUCLU_RELTN 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_IDENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_IDENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_IDENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_IDENT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUI_ID_TYPE VARCHAR2(255) NOT NULL
        , LUI_ID_STATE VARCHAR2(255) NOT NULL
        , LUI_CD VARCHAR2(255)
        , SHRT_NAME VARCHAR2(255)
        , LNG_NAME VARCHAR2(255)
        , DIVISION VARCHAR2(255)
        , SUFX_CD VARCHAR2(255)
        , VARTN VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , LUI_ID VARCHAR2(255)
        , IDENT_LEVEL VARCHAR2(255)
        , ORGID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_IDENT
    ADD CONSTRAINT KSEN_LUI_IDENTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_IDENT_IF1 
  ON KSEN_LUI_IDENT 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_IDENT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_IDENT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_IDENT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_IDENT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_IDENT_ATTR
    ADD CONSTRAINT KSEN_LUI_IDENT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_IDENT_ATTR_IF1 
  ON KSEN_LUI_IDENT_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_LU_CD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_LU_CD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_LU_CD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_LU_CD
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUI_LUCD_TYPE VARCHAR2(255) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , VALUE VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , LUI_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_LU_CD
    ADD CONSTRAINT KSEN_LUI_LU_CDP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_LU_CD_IF1 
  ON KSEN_LUI_LU_CD 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_LU_CD_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_LU_CD_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_LU_CD_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_LU_CD_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_LU_CD_ATTR
    ADD CONSTRAINT KSEN_LUI_LU_CD_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_LU_CD_ATTR_IF1 
  ON KSEN_LUI_LU_CD_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_RELATED_LUI_TYPES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_RELATED_LUI_TYPES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_RELATED_LUI_TYPES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_RELATED_LUI_TYPES
(
      RELATED_LUI_TYPE VARCHAR2(255)
        , LUI_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_RELATED_LUI_TYPES
    ADD CONSTRAINT KSEN_LUI_RELATED_LUI_TYPESP1
PRIMARY KEY (RELATED_LUI_TYPE,LUI_ID)
/


CREATE INDEX KSEN_LUI_RELATED_LUI_TYPES_IF1 
  ON KSEN_LUI_RELATED_LUI_TYPES 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_RESULT_VAL_GRP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_RESULT_VAL_GRP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_RESULT_VAL_GRP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_RESULT_VAL_GRP
(
      LUI_ID VARCHAR2(255) NOT NULL
        , RESULT_VAL_GRP_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LUI_RESULT_VAL_GRP_I1 UNIQUE (LUI_ID, RESULT_VAL_GRP_ID)

)
/



CREATE INDEX KSEN_LUI_RESULT_VAL_GRP_IF1 
  ON KSEN_LUI_RESULT_VAL_GRP 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_SET
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_SET';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_SET CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_SET
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , LUI_SET_TYPE VARCHAR2(255) NOT NULL
        , LUI_SET_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_SET
    ADD CONSTRAINT KSEN_LUI_SETP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_SET_I1 
  ON KSEN_LUI_SET 
  (LUI_SET_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_SET_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_SET_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_SET_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_SET_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_SET_ATTR
    ADD CONSTRAINT KSEN_LUI_SET_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_SET_ATTR_IF1 
  ON KSEN_LUI_SET_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_SET_LUI
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_SET_LUI';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_SET_LUI CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_SET_LUI
(
      LUI_ID VARCHAR2(255)
        , LUI_SET_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_LUI_SET_LUI
    ADD CONSTRAINT KSEN_LUI_SET_LUIP1
PRIMARY KEY (LUI_ID,LUI_SET_ID)
/


CREATE INDEX KSEN_LUI_SET_LUI_IF1 
  ON KSEN_LUI_SET_LUI 
  (LUI_SET_ID)
/
CREATE INDEX KSEN_LUI_SET_LUI_IF2 
  ON KSEN_LUI_SET_LUI 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_UNITS_CONT_OWNER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_UNITS_CONT_OWNER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_UNITS_CONT_OWNER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_UNITS_CONT_OWNER
(
      LUI_ID VARCHAR2(255) NOT NULL
        , ORG_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LUI_UNITS_CONT_OWNER_I1 UNIQUE (LUI_ID, ORG_ID)

)
/



CREATE INDEX KSEN_LUI_UNITS_CONT_OWNER_IF1 
  ON KSEN_LUI_UNITS_CONT_OWNER 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_LUI_UNITS_DEPLOYMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_LUI_UNITS_DEPLOYMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_LUI_UNITS_DEPLOYMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_LUI_UNITS_DEPLOYMENT
(
      ID VARCHAR2(255)
        , LUI_ID VARCHAR2(255) NOT NULL
        , ORG_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_LUI_UNITS_DEPLOYMENT_I1 UNIQUE (LUI_ID, ORG_ID)

)
/

ALTER TABLE KSEN_LUI_UNITS_DEPLOYMENT
    ADD CONSTRAINT KSEN_LUI_UNITS_DEPLOYMENTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_LUI_UNITS_DEPLOYMENT_IF1 
  ON KSEN_LUI_UNITS_DEPLOYMENT 
  (LUI_ID)
/





-----------------------------------------------------------------------------
-- KSEN_MSTONE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_MSTONE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_MSTONE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_MSTONE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , MSTONE_TYPE VARCHAR2(255) NOT NULL
        , MSTONE_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000) NOT NULL
        , DESCR_FORMATTED VARCHAR2(4000)
        , IS_ALL_DAY NUMBER(1) NOT NULL
        , IS_INSTRCT_DAY NUMBER(1) NOT NULL
        , IS_RELATIVE NUMBER(1) NOT NULL
        , RELATIVE_ANCHOR_MSTONE_ID VARCHAR2(255)
        , IS_DATE_RANGE NUMBER(1) NOT NULL
        , START_DT TIMESTAMP
        , END_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_MSTONE
    ADD CONSTRAINT KSEN_MSTONEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_MSTONE_I1 
  ON KSEN_MSTONE 
  (MSTONE_TYPE)
/
CREATE INDEX KSEN_MSTONE_I2 
  ON KSEN_MSTONE 
  (START_DT)
/





-----------------------------------------------------------------------------
-- KSEN_MSTONE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_MSTONE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_MSTONE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_MSTONE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_MSTONE_ATTR
    ADD CONSTRAINT KSEN_MSTONE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_MSTONE_ATTR_IF1 
  ON KSEN_MSTONE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , POPULATION_TYPE VARCHAR2(255) NOT NULL
        , POPULATION_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , POPULATION_RULE_ID VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION
    ADD CONSTRAINT KSEN_POPULATIONP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_I1 
  ON KSEN_POPULATION 
  (POPULATION_TYPE)
/
CREATE INDEX KSEN_POP_IF1 
  ON KSEN_POPULATION 
  (POPULATION_RULE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_ATTR
    ADD CONSTRAINT KSEN_POPULATION_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_ATTR_IF1 
  ON KSEN_POPULATION_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_CAT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_CAT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_CAT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_CAT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , POPULATION_CAT_TYPE VARCHAR2(255) NOT NULL
        , POPULATION_CAT_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_CAT
    ADD CONSTRAINT KSEN_POPULATION_CATP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_CAT_I1 
  ON KSEN_POPULATION_CAT 
  (POPULATION_CAT_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_CAT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_CAT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_CAT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_CAT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_CAT_ATTR
    ADD CONSTRAINT KSEN_POPULATION_CAT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_CAT_ATTR_IF1 
  ON KSEN_POPULATION_CAT_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_CAT_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_CAT_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_CAT_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_CAT_RELTN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , POPULATION_ID VARCHAR2(255) NOT NULL
        , POPULATION_CAT_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_POPULATION_CAT_RELTN
    ADD CONSTRAINT KSEN_POPULATION_CAT_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_CAT_RELTN_IF1 
  ON KSEN_POPULATION_CAT_RELTN 
  (POPULATION_ID)
/
CREATE INDEX KSEN_POP_CAT_RELTN_IF2 
  ON KSEN_POPULATION_CAT_RELTN 
  (POPULATION_CAT_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , POPULATION_RULE_TYPE VARCHAR2(255) NOT NULL
        , POPULATION_RULE_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , REF_POPULATION_ID VARCHAR2(255)
        , VARIES_BY_TIME_IND NUMBER(1) NOT NULL
        , SUPPORTS_GET_MBR_IND NUMBER(1) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE
    ADD CONSTRAINT KSEN_POPULATION_RULEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_RULE_I1 
  ON KSEN_POPULATION_RULE 
  (POPULATION_RULE_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE_AGENDA
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE_AGENDA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE_AGENDA CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE_AGENDA
(
      AGENDA_ID VARCHAR2(255)
        , POPULATION_RULE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE_AGENDA
    ADD CONSTRAINT KSEN_POPULATION_RULE_AGENDAP1
PRIMARY KEY (AGENDA_ID,POPULATION_RULE_ID)
/


CREATE INDEX KSEN_POP_RULE_AGENDA_IF1 
  ON KSEN_POPULATION_RULE_AGENDA 
  (POPULATION_RULE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE_ATTR
    ADD CONSTRAINT KSEN_POPULATION_RULE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_POP_RULE_ATTR_IF1 
  ON KSEN_POPULATION_RULE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE_CHILD_POP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE_CHILD_POP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE_CHILD_POP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE_CHILD_POP
(
      POPULATION_RULE_ID VARCHAR2(255)
        , CHILD_POPULATION_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE_CHILD_POP
    ADD CONSTRAINT KSEN_POPULATION_RULE_CHILD_P1
PRIMARY KEY (POPULATION_RULE_ID,CHILD_POPULATION_ID)
/


CREATE INDEX KSEN_POP_RULE_CHILD_POP_IF1 
  ON KSEN_POPULATION_RULE_CHILD_POP 
  (POPULATION_RULE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE_GRP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE_GRP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE_GRP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE_GRP
(
      POPULATION_RULE_ID VARCHAR2(255)
        , GROUP_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE_GRP
    ADD CONSTRAINT KSEN_POPULATION_RULE_GRPP1
PRIMARY KEY (POPULATION_RULE_ID,GROUP_ID)
/


CREATE INDEX KSEN_POP_RULE_GRP_IF1 
  ON KSEN_POPULATION_RULE_GRP 
  (POPULATION_RULE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE_PERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE_PERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE_PERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE_PERS
(
      POPULATION_RULE_ID VARCHAR2(255)
        , PERSON_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE_PERS
    ADD CONSTRAINT KSEN_POPULATION_RULE_PERSP1
PRIMARY KEY (POPULATION_RULE_ID,PERSON_ID)
/


CREATE INDEX KSEN_POP_RULE_PERS_IF1 
  ON KSEN_POPULATION_RULE_PERS 
  (POPULATION_RULE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_POPULATION_RULE_SOT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_POPULATION_RULE_SOT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_POPULATION_RULE_SOT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_POPULATION_RULE_SOT
(
      POPULATION_RULE_ID VARCHAR2(255)
        , SORT_ORDER_TYPE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_POPULATION_RULE_SOT
    ADD CONSTRAINT KSEN_POPULATION_RULE_SOTP1
PRIMARY KEY (POPULATION_RULE_ID,SORT_ORDER_TYPE_ID)
/


CREATE INDEX KSEN_POP_RULE_SOT_IF1 
  ON KSEN_POPULATION_RULE_SOT 
  (POPULATION_RULE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , PROCESS_TYPE VARCHAR2(255) NOT NULL
        , PROCESS_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , OWNER_ORG_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS
    ADD CONSTRAINT KSEN_PROCESSP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_I1 
  ON KSEN_PROCESS 
  (PROCESS_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_ATTR
    ADD CONSTRAINT KSEN_PROCESS_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_ATTR_IF1 
  ON KSEN_PROCESS_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_CATEGORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_CATEGORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_CATEGORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_CATEGORY
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , PROCESS_CATEGORY_TYPE VARCHAR2(255) NOT NULL
        , PROCESS_CATEGORY_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_CATEGORY
    ADD CONSTRAINT KSEN_PROCESS_CATEGORYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_CAT_I1 
  ON KSEN_PROCESS_CATEGORY 
  (PROCESS_CATEGORY_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_CATEGORY_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_CATEGORY_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_CATEGORY_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_CATEGORY_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_CATEGORY_ATTR
    ADD CONSTRAINT KSEN_PROCESS_CATEGORY_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_CAT_ATTR_IF1 
  ON KSEN_PROCESS_CATEGORY_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_CATEGORY_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_CATEGORY_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_CATEGORY_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_CATEGORY_RELTN
(
      ID CHAR(255)
        , OBJ_ID VARCHAR2(36)
        , PROCESS_ID VARCHAR2(255) NOT NULL
        , PROCESS_CATEGORY_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_PROCESS_CATEGORY_RELTN
    ADD CONSTRAINT KSEN_PROCESS_CATEGORY_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_CAT_RELTN_IF1 
  ON KSEN_PROCESS_CATEGORY_RELTN 
  (PROCESS_ID)
/
CREATE INDEX KSEN_PROC_CAT_RELTN_IF2 
  ON KSEN_PROCESS_CATEGORY_RELTN 
  (PROCESS_CATEGORY_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_CHECK
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_CHECK';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_CHECK CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_CHECK
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(255)
        , PROCESS_CHECK_TYPE VARCHAR2(255) NOT NULL
        , PROCESS_CHECK_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , ISSUE_ID VARCHAR2(255)
        , MSTONE_TYPE VARCHAR2(255)
        , AGENDA_ID VARCHAR2(255)
        , RIGHT_AGENDA_ID VARCHAR2(255)
        , LEFT_AGENDA_ID VARCHAR2(255)
        , CHILD_PROCESS_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_CHECK
    ADD CONSTRAINT KSEN_PROCESS_CHECKP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROCESS_CHECK_IF1 
  ON KSEN_PROCESS_CHECK 
  (CHILD_PROCESS_ID)
/
CREATE INDEX KSEN_PROCE_CHECK_I1 
  ON KSEN_PROCESS_CHECK 
  (PROCESS_CHECK_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_CHECK_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_CHECK_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_CHECK_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_CHECK_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_CHECK_ATTR
    ADD CONSTRAINT KSEN_PROCESS_CHECK_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROCESS_CHECK_ATTR_IF1 
  ON KSEN_PROCESS_CHECK_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_INSTRN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_INSTRN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_INSTRN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_INSTRN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , PROCESS_INSTRN_TYPE VARCHAR2(255) NOT NULL
        , PROCESS_INSTRN_STATE VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , PROCESS_ID VARCHAR2(255) NOT NULL
        , CHECK_ID VARCHAR2(255) NOT NULL
        , APPLD_POPULATION_ID VARCHAR2(255)
        , MESG_PLAIN VARCHAR2(4000)
        , MESG_FORMATTED VARCHAR2(4000)
        , POSITION NUMBER(22)
        , WARNING_IND VARCHAR2(1)
        , CONT_ON_FAILED_IND VARCHAR2(1)
        , EXEMPTIBLE_IND VARCHAR2(1)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(6)
    

)
/

ALTER TABLE KSEN_PROCESS_INSTRN
    ADD CONSTRAINT KSEN_PROCESS_INSTRNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_INSTRN_I1 
  ON KSEN_PROCESS_INSTRN 
  (PROCESS_INSTRN_TYPE)
/
CREATE INDEX KSEN_PROC_INSTRN_I2 
  ON KSEN_PROCESS_INSTRN 
  (PROCESS_ID, CHECK_ID)
/
CREATE INDEX KSEN_PROC_INSTRN_IF1 
  ON KSEN_PROCESS_INSTRN 
  (CHECK_ID)
/
CREATE INDEX KSEN_PROC_INSTRN_IF2 
  ON KSEN_PROCESS_INSTRN 
  (PROCESS_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_INSTRN_AAT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_INSTRN_AAT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_INSTRN_AAT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_INSTRN_AAT
(
      PROCESS_INSTRN_ID VARCHAR2(255)
        , APPLD_ATP_TYPE VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_INSTRN_AAT
    ADD CONSTRAINT KSEN_PROCESS_INSTRN_AATP1
PRIMARY KEY (PROCESS_INSTRN_ID,APPLD_ATP_TYPE)
/


CREATE INDEX KSEN_PROC_INSTRN_AAT_IF1 
  ON KSEN_PROCESS_INSTRN_AAT 
  (PROCESS_INSTRN_ID)
/





-----------------------------------------------------------------------------
-- KSEN_PROCESS_INSTRN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_PROCESS_INSTRN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_PROCESS_INSTRN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_PROCESS_INSTRN_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_PROCESS_INSTRN_ATTR
    ADD CONSTRAINT KSEN_PROCESS_INSTRN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_PROC_INSTRN_ATTR_IF1 
  ON KSEN_PROCESS_INSTRN_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(2000)
    

)
/

ALTER TABLE KSEN_RICH_TEXT_T
    ADD CONSTRAINT KSEN_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_ROOM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ROOM_TYPE VARCHAR2(255) NOT NULL
        , ROOM_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , ROOM_CD VARCHAR2(255) NOT NULL
        , BUILDING_ID VARCHAR2(255) NOT NULL
        , FLOOR VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    
    , CONSTRAINT KSEN_ROOM_I4 UNIQUE (BUILDING_ID, ROOM_CD)

)
/

ALTER TABLE KSEN_ROOM
    ADD CONSTRAINT KSEN_ROOMP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_I1 
  ON KSEN_ROOM 
  (BUILDING_ID, FLOOR)
/
CREATE INDEX KSEN_ROOM_I2 
  ON KSEN_ROOM 
  (ROOM_TYPE)
/
CREATE INDEX KSEN_ROOM_I3 
  ON KSEN_ROOM 
  (BUILDING_ID, ROOM_TYPE)
/
CREATE INDEX KSEN_ROOM_IF1 
  ON KSEN_ROOM 
  (BUILDING_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_ACCESS_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_ACCESS_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_ACCESS_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_ACCESS_TYPE
(
      ID VARCHAR2(255)
        , ROOM_ID VARCHAR2(255) NOT NULL
        , ACCESS_TYPE_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_ROOM_ACCESS_TYPE_I1 UNIQUE (ROOM_ID, ACCESS_TYPE_ID)

)
/

ALTER TABLE KSEN_ROOM_ACCESS_TYPE
    ADD CONSTRAINT KSEN_ROOM_ACCESS_TYPEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_ACCESS_TYPE_IF1 
  ON KSEN_ROOM_ACCESS_TYPE 
  (ROOM_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ROOM_ATTR
    ADD CONSTRAINT KSEN_ROOM_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_ATTR_IF1 
  ON KSEN_ROOM_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_BUILDING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_BUILDING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_BUILDING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_BUILDING
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , BUILDING_TYPE VARCHAR2(255) NOT NULL
        , BUILDING_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , BUILDING_CD VARCHAR2(255) NOT NULL
        , CAMPUS_KEY VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    
    , CONSTRAINT KSEN_ROOM_BUILDING_I2 UNIQUE (BUILDING_CD)

)
/

ALTER TABLE KSEN_ROOM_BUILDING
    ADD CONSTRAINT KSEN_ROOM_BUILDINGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_BUILDING_I1 
  ON KSEN_ROOM_BUILDING 
  (CAMPUS_KEY)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_BUILDING_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_BUILDING_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_BUILDING_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_BUILDING_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ROOM_BUILDING_ATTR
    ADD CONSTRAINT KSEN_ROOM_BUILDING_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_BUILDING_ATTR_IF1 
  ON KSEN_ROOM_BUILDING_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_FIXED_RSRC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_FIXED_RSRC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_FIXED_RSRC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_FIXED_RSRC
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , FIXED_RSRC_TYPE VARCHAR2(255) NOT NULL
        , QUANTITY NUMBER(22)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , ROOM_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_ROOM_FIXED_RSRC
    ADD CONSTRAINT KSEN_ROOM_FIXED_RSRCP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_FIXED_RSRC_IF1 
  ON KSEN_ROOM_FIXED_RSRC 
  (ROOM_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_FIXED_RSRC_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_FIXED_RSRC_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_FIXED_RSRC_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_FIXED_RSRC_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ROOM_FIXED_RSRC_ATTR
    ADD CONSTRAINT KSEN_ROOM_FIXED_RSRC_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_FIXED_RSRC_ATTR_IF1 
  ON KSEN_ROOM_FIXED_RSRC_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_RESP_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_RESP_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_RESP_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_RESP_ORG
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , RESP_ORG_TYPE VARCHAR2(255) NOT NULL
        , RESP_ORG_STATE VARCHAR2(255) NOT NULL
        , ROOM_ID VARCHAR2(255) NOT NULL
        , ORG_ID VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ROOM_RESP_ORG
    ADD CONSTRAINT KSEN_ROOM_RESP_ORGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_RESP_ORG_I1 
  ON KSEN_ROOM_RESP_ORG 
  (RESP_ORG_TYPE)
/
CREATE INDEX KSEN_ROOM_RESP_ORG_IF1 
  ON KSEN_ROOM_RESP_ORG 
  (ROOM_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_RESP_ORG_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_RESP_ORG_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_RESP_ORG_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_RESP_ORG_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ROOM_RESP_ORG_ATTR
    ADD CONSTRAINT KSEN_ROOM_RESP_ORG_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_RESP_ORG_ATTR_IF1 
  ON KSEN_ROOM_RESP_ORG_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_USAGE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_USAGE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_USAGE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_USAGE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , USAGE_TYPE VARCHAR2(255) NOT NULL
        , LAYOUT_TYPE VARCHAR2(255) NOT NULL
        , PREFERRED_CAPACITY NUMBER(22)
        , HARD_CAPACITY NUMBER(22)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID CHAR(18)
        , ROOM_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_ROOM_USAGE
    ADD CONSTRAINT KSEN_ROOM_USAGEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_USAGE_I1 
  ON KSEN_ROOM_USAGE 
  (USAGE_TYPE)
/
CREATE INDEX KSEN_ROOM_USAGE_IF1 
  ON KSEN_ROOM_USAGE 
  (ROOM_ID)
/





-----------------------------------------------------------------------------
-- KSEN_ROOM_USAGE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_ROOM_USAGE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_ROOM_USAGE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_ROOM_USAGE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_ROOM_USAGE_ATTR
    ADD CONSTRAINT KSEN_ROOM_USAGE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_ROOM_USAGE_ATTR_IF1 
  ON KSEN_ROOM_USAGE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , SCHED_TYPE VARCHAR2(255) NOT NULL
        , SCHED_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , ATP_ID VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED
    ADD CONSTRAINT KSEN_SCHEDP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SCHED_I1 
  ON KSEN_SCHED 
  (SCHED_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED_ATTR
    ADD CONSTRAINT KSEN_SCHED_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SCHED_ATTR_IF1 
  ON KSEN_SCHED_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_CMP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_CMP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_CMP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_CMP
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ROOM_ID VARCHAR2(255)
        , SCHED_ID VARCHAR2(255)
        , TBA_IND NUMBER(22) NOT NULL
    

)
/

ALTER TABLE KSEN_SCHED_CMP
    ADD CONSTRAINT KSEN_SCHED_CMPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SCHED_CMP_IF1 
  ON KSEN_SCHED_CMP 
  (SCHED_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_CMP_TMSLOT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_CMP_TMSLOT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_CMP_TMSLOT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_CMP_TMSLOT
(
      SCHED_CMP_ID VARCHAR2(255)
        , TM_SLOT_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED_CMP_TMSLOT
    ADD CONSTRAINT KSEN_SCHED_CMP_TMSLOTP1
PRIMARY KEY (SCHED_CMP_ID,TM_SLOT_ID)
/


CREATE INDEX KSEN_SCHED_CMP_TMSLOT_IF1 
  ON KSEN_SCHED_CMP_TMSLOT 
  (SCHED_CMP_ID)
/
CREATE INDEX KSEN_SCHED_CMP_TMSLOT_IF2 
  ON KSEN_SCHED_CMP_TMSLOT 
  (TM_SLOT_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(255)
        , SCHED_RQST_TYPE VARCHAR2(255) NOT NULL
        , SCHED_RQST_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , REF_OBJECT_ID VARCHAR2(255) NOT NULL
        , REF_OBJECT_TYPE VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED_RQST
    ADD CONSTRAINT KSEN_SCHED_RQSTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SCHED_RQST_I1 
  ON KSEN_SCHED_RQST 
  (REF_OBJECT_ID, REF_OBJECT_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED_RQST_ATTR
    ADD CONSTRAINT KSEN_SCHED_RQST_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SCHED_RQST_ATTR_IF1 
  ON KSEN_SCHED_RQST_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , SCHED_RQST_ID VARCHAR2(255)
        , TBA_IND NUMBER(22) NOT NULL
    

)
/

ALTER TABLE KSEN_SCHED_RQST_CMP
    ADD CONSTRAINT KSEN_SCHED_RQST_CMPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SCHED_RQST_CMP_IF1 
  ON KSEN_SCHED_RQST_CMP 
  (SCHED_RQST_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP_BLDG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP_BLDG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP_BLDG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP_BLDG
(
      CMP_ID VARCHAR2(255) NOT NULL
        , BUILDING_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SCHED_RQST_CMP_BLDG_I1 UNIQUE (CMP_ID, BUILDING_ID)

)
/



CREATE INDEX KSEN_SCHED_RQST_CMP_BLDG_IF1 
  ON KSEN_SCHED_RQST_CMP_BLDG 
  (CMP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP_CAMPUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP_CAMPUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP_CAMPUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP_CAMPUS
(
      CMP_ID VARCHAR2(255) NOT NULL
        , CAMPUS_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SCHED_RQST_CMP_CAMPUS_I1 UNIQUE (CMP_ID, CAMPUS_ID)

)
/



CREATE INDEX KSEN_SCHED_RQST_CMP_CAMPUS_IF1 
  ON KSEN_SCHED_RQST_CMP_CAMPUS 
  (CMP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP_ORG
(
      CMP_ID VARCHAR2(255) NOT NULL
        , ORG_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SCHED_RQST_CMP_ORG_I1 UNIQUE (CMP_ID, ORG_ID)

)
/



CREATE INDEX KSEN_SCHED_RQST_CMP_ORG_IF1 
  ON KSEN_SCHED_RQST_CMP_ORG 
  (CMP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP_ROOM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP_ROOM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP_ROOM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP_ROOM
(
      CMP_ID VARCHAR2(255) NOT NULL
        , ROOM_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SCHED_RQST_CMP_ROOM_I1 UNIQUE (CMP_ID, ROOM_ID)

)
/



CREATE INDEX KSEN_SCHED_RQST_CMP_ROOM_IF1 
  ON KSEN_SCHED_RQST_CMP_ROOM 
  (CMP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP_RT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP_RT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP_RT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP_RT
(
      CMP_ID VARCHAR2(255) NOT NULL
        , RSRC_TYPE_KEY VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SCHED_RQST_RT_I1 UNIQUE (CMP_ID, RSRC_TYPE_KEY)

)
/



CREATE INDEX KSEN_SCHED_RQST_RT_IF1 
  ON KSEN_SCHED_RQST_CMP_RT 
  (CMP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_RQST_CMP_TMSLOT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_RQST_CMP_TMSLOT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_RQST_CMP_TMSLOT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_RQST_CMP_TMSLOT
(
      CMP_ID VARCHAR2(255) NOT NULL
        , TM_SLOT_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SCHED_RQST_CMP_TMSLOT_I1 UNIQUE (CMP_ID, TM_SLOT_ID)

)
/



CREATE INDEX KSEN_SCHED_RQST_CMP_TMSLOT_IF1 
  ON KSEN_SCHED_RQST_CMP_TMSLOT 
  (CMP_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SCHED_TMSLOT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_TMSLOT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_TMSLOT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_TMSLOT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , TM_SLOT_TYPE VARCHAR2(255) NOT NULL
        , TM_SLOT_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , WEEKDAYS VARCHAR2(255)
        , START_TIME_MS NUMBER(22)
        , END_TIME_MS NUMBER(22)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED_TMSLOT
    ADD CONSTRAINT KSEN_SCHED_TMSLOTP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_SCHED_TMSLOT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SCHED_TMSLOT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SCHED_TMSLOT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SCHED_TMSLOT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SCHED_TMSLOT_ATTR
    ADD CONSTRAINT KSEN_SCHED_TMSLOT_ATTRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_SOC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , SOC_TYPE VARCHAR2(255) NOT NULL
        , SOC_STATE VARCHAR2(255) NOT NULL
        , NAME VARCHAR2(255)
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , TERM_ID VARCHAR2(255) NOT NULL
        , SUBJECT_AREA VARCHAR2(255)
        , UNITS_CONTENT_OWNER_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SOC
    ADD CONSTRAINT KSEN_SOCP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SOC_I1 
  ON KSEN_SOC 
  (TERM_ID, SUBJECT_AREA)
/
CREATE INDEX KSEN_SOC_I2 
  ON KSEN_SOC 
  (TERM_ID, UNITS_CONTENT_OWNER_ID)
/
CREATE INDEX KSEN_SOC_I3 
  ON KSEN_SOC 
  (SOC_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_SOC_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(255)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SOC_ATTR
    ADD CONSTRAINT KSEN_SOC_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SOC_ATTR_IF1 
  ON KSEN_SOC_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SOC_ROR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC_ROR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC_ROR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC_ROR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , SOC_ROR_TYPE VARCHAR2(255) NOT NULL
        , SOC_ROR_STATE VARCHAR2(255) NOT NULL
        , TARGET_TERM_ID VARCHAR2(255) NOT NULL
        , ITEMS_PROCESSED NUMBER(22)
        , ITEMS_EXPECTED NUMBER(22)
        , SOURCE_SOC_ID VARCHAR2(255) NOT NULL
        , TARGET_SOC_ID VARCHAR2(255) NOT NULL
        , MESG_PLAIN VARCHAR2(4000)
        , MESG_FORMATTED VARCHAR2(4000)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SOC_ROR
    ADD CONSTRAINT KSEN_SOC_RORP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SOC_ROR_IF1 
  ON KSEN_SOC_ROR 
  (SOURCE_SOC_ID)
/
CREATE INDEX KSEN_SOC_ROR_IF2 
  ON KSEN_SOC_ROR 
  (TARGET_SOC_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SOC_ROR_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC_ROR_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC_ROR_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC_ROR_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(255)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SOC_ROR_ATTR
    ADD CONSTRAINT KSEN_SOC_ROR_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SOC_ROR_ATTR_IF1 
  ON KSEN_SOC_ROR_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SOC_ROR_ITEM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC_ROR_ITEM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC_ROR_ITEM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC_ROR_ITEM
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , SOC_ROR_TYPE VARCHAR2(255) NOT NULL
        , SOC_ROR_STATE VARCHAR2(255) NOT NULL
        , SOURCE_CO_ID VARCHAR2(255) NOT NULL
        , TARGET_CO_ID VARCHAR2(255)
        , ROR_ID VARCHAR2(255)
        , MESG_PLAIN VARCHAR2(4000)
        , MESG_FORMATTED VARCHAR2(4000)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SOC_ROR_ITEM
    ADD CONSTRAINT KSEN_SOC_ROR_ITEMP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SOC_ROR_ITEM_I1 
  ON KSEN_SOC_ROR_ITEM 
  (SOURCE_CO_ID)
/
CREATE INDEX KSEN_SOC_ROR_ITEM_I2 
  ON KSEN_SOC_ROR_ITEM 
  (TARGET_CO_ID)
/
CREATE INDEX KSEN_SOC_ROR_ITEM_IF1 
  ON KSEN_SOC_ROR_ITEM 
  (ROR_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SOC_ROR_ITEM_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC_ROR_ITEM_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC_ROR_ITEM_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC_ROR_ITEM_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(255)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_SOC_ROR_ITEM_ATTR
    ADD CONSTRAINT KSEN_SOC_ROR_ITEM_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX XIF1KSEN_SOC_ROR_ITEM_ATTR 
  ON KSEN_SOC_ROR_ITEM_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_SOC_ROR_OPTION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_SOC_ROR_OPTION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_SOC_ROR_OPTION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_SOC_ROR_OPTION
(
      ID VARCHAR2(255)
        , OPTION_ID VARCHAR2(255) NOT NULL
        , ROR_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT KSEN_SOC_ROR_OPTION_I1 UNIQUE (ROR_ID, OPTION_ID)

)
/

ALTER TABLE KSEN_SOC_ROR_OPTION
    ADD CONSTRAINT KSEN_SOC_ROR_OPTIONP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_SOC_ROR_OPTION_IF1 
  ON KSEN_SOC_ROR_OPTION 
  (ROR_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , NAME VARCHAR2(255) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , LIFECYCLE_KEY VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , IS_INITIAL_STATE NUMBER(1) default 0 NOT NULL
    

)
/

ALTER TABLE KSEN_STATE
    ADD CONSTRAINT KSEN_STATEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_IF1 
  ON KSEN_STATE 
  (LIFECYCLE_KEY)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_ATTR
    ADD CONSTRAINT KSEN_STATE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_ATTR_IF1 
  ON KSEN_STATE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_CHG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CHG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CHG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CHG
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , STATE_CHG_TYPE VARCHAR2(255) NOT NULL
        , STATE_CHG_STATE VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , FROM_STATE_ID VARCHAR2(255) NOT NULL
        , TO_STATE_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_STATE_CHG
    ADD CONSTRAINT KSEN_STATE_CHGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_CHG_I1 
  ON KSEN_STATE_CHG 
  (STATE_CHG_TYPE)
/
CREATE INDEX KSEN_STATE_CHG_I2 
  ON KSEN_STATE_CHG 
  (FROM_STATE_ID, TO_STATE_ID)
/
CREATE INDEX KSEN_STATE_CHG_IF1 
  ON KSEN_STATE_CHG 
  (FROM_STATE_ID)
/
CREATE INDEX KSEN_STATE_CHG_IF2 
  ON KSEN_STATE_CHG 
  (TO_STATE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_CHG_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CHG_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CHG_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CHG_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_CHG_ATTR
    ADD CONSTRAINT KSEN_STATE_CHG_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_CHG_ATTR_IF1 
  ON KSEN_STATE_CHG_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_CHG_CNSTRNT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CHG_CNSTRNT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CHG_CNSTRNT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CHG_CNSTRNT
(
      STATE_CHG_ID VARCHAR2(255)
        , STATE_CNSTRNT_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_CHG_CNSTRNT
    ADD CONSTRAINT KSEN_STATE_CHG_CNSTRNTP1
PRIMARY KEY (STATE_CHG_ID,STATE_CNSTRNT_ID)
/


CREATE INDEX KSEN_STATE_CHG_C_IF1 
  ON KSEN_STATE_CHG_CNSTRNT 
  (STATE_CHG_ID)
/
CREATE INDEX KSEN_STATE_CHG_C_IF2 
  ON KSEN_STATE_CHG_CNSTRNT 
  (STATE_CNSTRNT_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_CHG_PROPAGT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CHG_PROPAGT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CHG_PROPAGT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CHG_PROPAGT
(
      STATE_CHG_ID VARCHAR2(255)
        , STATE_PROPAGT_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_CHG_PROPAGT
    ADD CONSTRAINT KSEN_STATE_CHG_PROPAGTP1
PRIMARY KEY (STATE_CHG_ID,STATE_PROPAGT_ID)
/


CREATE INDEX KSEN_STATE_CHG_P_IF1 
  ON KSEN_STATE_CHG_PROPAGT 
  (STATE_CHG_ID)
/
CREATE INDEX KSEN_STATE_CHG_P_IF2 
  ON KSEN_STATE_CHG_PROPAGT 
  (STATE_PROPAGT_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_CNSTRNT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CNSTRNT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CNSTRNT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CNSTRNT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , STATE_CNSTRNT_TYPE VARCHAR2(255) NOT NULL
        , STATE_CNSTRNT_STATE VARCHAR2(255) NOT NULL
        , STATE_CNSTRNT_OPERATOR VARCHAR2(255) NOT NULL
        , AGENDA_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_CNSTRNT
    ADD CONSTRAINT KSEN_STATE_CNSTRNTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_CNSTRNT_I1 
  ON KSEN_STATE_CNSTRNT 
  (STATE_CNSTRNT_TYPE)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_CNSTRNT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CNSTRNT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CNSTRNT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CNSTRNT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_CNSTRNT_ATTR
    ADD CONSTRAINT KSEN_STATE_CNSTRNT_ATTRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_STATE_CNSTRNT_ROS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_CNSTRNT_ROS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_CNSTRNT_ROS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_CNSTRNT_ROS
(
      STATE_CNSTRNT_ID VARCHAR2(255)
        , REL_OBJ_STATE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_CNSTRNT_ROS
    ADD CONSTRAINT KSEN_STATE_CNSTRNT_ROSP1
PRIMARY KEY (STATE_CNSTRNT_ID,REL_OBJ_STATE_ID)
/







-----------------------------------------------------------------------------
-- KSEN_STATE_LIFECYCLE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_LIFECYCLE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_LIFECYCLE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_LIFECYCLE
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , NAME VARCHAR2(255) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , REF_OBJECT_URI VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_LIFECYCLE
    ADD CONSTRAINT KSEN_STATE_LIFECYCLEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_LIFECYCLE_I1 
  ON KSEN_STATE_LIFECYCLE 
  (REF_OBJECT_URI)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_LIFECYCLE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_LIFECYCLE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_LIFECYCLE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_LIFECYCLE_ATTR
(
      OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
        , ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_LIFECYCLE_ATTR
    ADD CONSTRAINT KSEN_STATE_LIFECYCLE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_LIFECYCLE_ATTR_IF1 
  ON KSEN_STATE_LIFECYCLE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_PROCESS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_PROCESS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_PROCESS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_PROCESS
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , DESCR VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_PROCESS
    ADD CONSTRAINT KSEN_STATE_PROCESSP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_STATE_PROPAGT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_PROPAGT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_PROPAGT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_PROPAGT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , STATE_PROPAGT_TYPE VARCHAR2(255) NOT NULL
        , STATE_PROPAGT_STATE VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , TARGET_STATE_CHG_ID VARCHAR2(255) NOT NULL
    

)
/

ALTER TABLE KSEN_STATE_PROPAGT
    ADD CONSTRAINT KSEN_STATE_PROPAGTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_STATE_PROPAGT_I1 
  ON KSEN_STATE_PROPAGT 
  (STATE_PROPAGT_TYPE)
/
CREATE INDEX KSEN_STATE_PROPAGT_I2 
  ON KSEN_STATE_PROPAGT 
  (TARGET_STATE_CHG_ID)
/





-----------------------------------------------------------------------------
-- KSEN_STATE_PROPAGT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_PROPAGT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_PROPAGT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_PROPAGT_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_PROPAGT_ATTR
    ADD CONSTRAINT KSEN_STATE_PROPAGT_ATTRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSEN_STATE_PROPAGT_CNSTRNT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_STATE_PROPAGT_CNSTRNT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_STATE_PROPAGT_CNSTRNT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_STATE_PROPAGT_CNSTRNT
(
      STATE_PROPAGT_ID VARCHAR2(255)
        , STATE_CNSTRNT_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_STATE_PROPAGT_CNSTRNT
    ADD CONSTRAINT KSEN_STATE_PROPAGT_CNSTRNTP1
PRIMARY KEY (STATE_PROPAGT_ID,STATE_CNSTRNT_ID)
/


CREATE INDEX KSEN_STATE_PROPAGT_C_IF1 
  ON KSEN_STATE_PROPAGT_CNSTRNT 
  (STATE_CNSTRNT_ID)
/
CREATE INDEX KSEN_STATE_PROPAGT_C_IF2 
  ON KSEN_STATE_PROPAGT_CNSTRNT 
  (STATE_PROPAGT_ID)
/





-----------------------------------------------------------------------------
-- KSEN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , NAME VARCHAR2(255) NOT NULL
        , DESCR_PLAIN VARCHAR2(4000)
        , DESCR_FORMATTED VARCHAR2(4000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , REF_OBJECT_URI VARCHAR2(255)
        , SERVICE_URI VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_TYPE
    ADD CONSTRAINT KSEN_TYPEP1
PRIMARY KEY (TYPE_KEY)
/


CREATE INDEX KSEN_TYPE_I1 
  ON KSEN_TYPE 
  (REF_OBJECT_URI)
/





-----------------------------------------------------------------------------
-- KSEN_TYPETYPE_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_TYPETYPE_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_TYPETYPE_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_TYPETYPE_RELTN
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , TYPETYPE_RELTN_TYPE VARCHAR2(255) NOT NULL
        , TYPETYPE_RELTN_STATE VARCHAR2(255) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , OWNER_TYPE_ID VARCHAR2(255) NOT NULL
        , RELATED_TYPE_ID VARCHAR2(255) NOT NULL
        , RANK NUMBER(10)
        , VER_NBR NUMBER(19) NOT NULL
        , CREATETIME TIMESTAMP NOT NULL
        , CREATEID VARCHAR2(255) NOT NULL
        , UPDATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_TYPETYPE_RELTN
    ADD CONSTRAINT KSEN_TYPETYPE_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_TYPETYPE_RELTN_IF1 
  ON KSEN_TYPETYPE_RELTN 
  (OWNER_TYPE_ID)
/
CREATE INDEX KSEN_TYPETYPE_RELTN_IF2 
  ON KSEN_TYPETYPE_RELTN 
  (RELATED_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSEN_TYPETYPE_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_TYPETYPE_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_TYPETYPE_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_TYPETYPE_RELTN_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_TYPETYPE_RELTN_ATTR
    ADD CONSTRAINT KSEN_TYPETYPE_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_TYPETYPE_RELTN_ATTR_IF1 
  ON KSEN_TYPETYPE_RELTN_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSEN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSEN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSEN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSEN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , ATTR_KEY VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(4000)
        , OWNER_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSEN_TYPE_ATTR
    ADD CONSTRAINT KSEN_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSEN_TYPE_ATTR_IF1 
  ON KSEN_TYPE_ATTR 
  (OWNER_ID)
/





-----------------------------------------------------------------------------
-- KSLO_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_ATTR
    ADD CONSTRAINT KSLO_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_ATTR_I1 
  ON KSLO_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_LO
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , ST VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , LO_REPO_ID VARCHAR2(255)
        , LOTYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLO_LO
    ADD CONSTRAINT KSLO_LOP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_I1 
  ON KSLO_LO 
  (RT_DESCR_ID)
/
CREATE INDEX KSLO_LO_I2 
  ON KSLO_LO 
  (LOTYPE_ID)
/
CREATE INDEX KSLO_LO_I3 
  ON KSLO_LO 
  (LO_REPO_ID)
/





-----------------------------------------------------------------------------
-- KSLO_LO_ALLOWED_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_ALLOWED_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_ALLOWED_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_ALLOWED_RELTN_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , LO_TYPE_ID VARCHAR2(255)
        , LO_REL_TYPE_ID VARCHAR2(255)
        , LOLO_RELTN_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLO_LO_ALLOWED_RELTN_TYPE
    ADD CONSTRAINT KSLO_LO_ALLOWED_RELTN_TYPEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLO_LO_CATEGORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_CATEGORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_CATEGORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_CATEGORY
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , STATE VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , LO_CATEGORY_TYPE_ID VARCHAR2(255)
        , LO_REPO_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLO_LO_CATEGORY
    ADD CONSTRAINT KSLO_LO_CATEGORYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_CATEGORY_I1 
  ON KSLO_LO_CATEGORY 
  (RT_DESCR_ID)
/
CREATE INDEX KSLO_LO_CATEGORY_I2 
  ON KSLO_LO_CATEGORY 
  (LO_REPO_ID)
/
CREATE INDEX KSLO_LO_CATEGORY_I3 
  ON KSLO_LO_CATEGORY 
  (LO_CATEGORY_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLO_LO_CATEGORY_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_CATEGORY_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_CATEGORY_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_CATEGORY_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_LO_CATEGORY_ATTR
    ADD CONSTRAINT KSLO_LO_CATEGORY_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_CATEGORY_ATTR_I1 
  ON KSLO_LO_CATEGORY_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_LO_CATEGORY_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_CATEGORY_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_CATEGORY_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_CATEGORY_TYPE
(
      ID VARCHAR2(255)
        , DESCR VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , TYPE_DESC VARCHAR2(2000)
    

)
/

ALTER TABLE KSLO_LO_CATEGORY_TYPE
    ADD CONSTRAINT KSLO_LO_CATEGORY_TYPEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLO_LO_CATEGORY_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_CATEGORY_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_CATEGORY_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_CATEGORY_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_LO_CATEGORY_TYPE_ATTR
    ADD CONSTRAINT KSLO_LO_CATEGORY_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_CATEGORY_TYPE_ATTR_I1 
  ON KSLO_LO_CATEGORY_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_LO_JN_LOCATEGORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_JN_LOCATEGORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_JN_LOCATEGORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_JN_LOCATEGORY
(
      ID VARCHAR2(255)
        , LO_ID VARCHAR2(255)
        , LOCATEGORY_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    
    , CONSTRAINT SYS_C0011301 UNIQUE (LO_ID, LOCATEGORY_ID)

)
/

ALTER TABLE KSLO_LO_JN_LOCATEGORY
    ADD CONSTRAINT KSLO_LO_JN_LOCATEGORYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_JN_LOCATEGORY_I1 
  ON KSLO_LO_JN_LOCATEGORY 
  (LOCATEGORY_ID)
/
CREATE INDEX KSLO_LO_JN_LOCATEGORY_I2 
  ON KSLO_LO_JN_LOCATEGORY 
  (LO_ID)
/





-----------------------------------------------------------------------------
-- KSLO_LO_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_RELTN
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ST VARCHAR2(255)
        , LO_ID VARCHAR2(255)
        , LO_LO_RELATION_TYPE_ID VARCHAR2(255)
        , RELATED_LO_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLO_LO_RELTN
    ADD CONSTRAINT KSLO_LO_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_RELTN_I1 
  ON KSLO_LO_RELTN 
  (LO_LO_RELATION_TYPE_ID)
/
CREATE INDEX KSLO_LO_RELTN_I2 
  ON KSLO_LO_RELTN 
  (RELATED_LO_ID)
/
CREATE INDEX KSLO_LO_RELTN_I3 
  ON KSLO_LO_RELTN 
  (LO_ID)
/





-----------------------------------------------------------------------------
-- KSLO_LO_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_RELTN_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_LO_RELTN_ATTR
    ADD CONSTRAINT KSLO_LO_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_RELTN_ATTR_I1 
  ON KSLO_LO_RELTN_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_LO_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_RELTN_TYPE
(
      ID VARCHAR2(255)
        , DESCR VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , REV_DESCR VARCHAR2(255)
        , REV_NAME VARCHAR2(255)
        , TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , TYPE_DESC VARCHAR2(2000)
    

)
/

ALTER TABLE KSLO_LO_RELTN_TYPE
    ADD CONSTRAINT KSLO_LO_RELTN_TYPEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLO_LO_RELTN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_RELTN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_RELTN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_RELTN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_LO_RELTN_TYPE_ATTR
    ADD CONSTRAINT KSLO_LO_RELTN_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_RELTN_TYPE_ATTR_I1 
  ON KSLO_LO_RELTN_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_LO_REPOSITORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_REPOSITORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_REPOSITORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_REPOSITORY
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , LO_ROOT_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLO_LO_REPOSITORY
    ADD CONSTRAINT KSLO_LO_REPOSITORYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_REPOSITORY_I1 
  ON KSLO_LO_REPOSITORY 
  (LO_ROOT_ID)
/
CREATE INDEX KSLO_LO_REPOSITORY_I2 
  ON KSLO_LO_REPOSITORY 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSLO_LO_REPOSITORY_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_REPOSITORY_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_REPOSITORY_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_REPOSITORY_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_LO_REPOSITORY_ATTR
    ADD CONSTRAINT KSLO_LO_REPOSITORY_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_REPOSITORY_ATTR_I1 
  ON KSLO_LO_REPOSITORY_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_LO_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_TYPE
(
      ID VARCHAR2(255)
        , DESCR VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , TYPE_DESC VARCHAR2(2000)
    

)
/

ALTER TABLE KSLO_LO_TYPE
    ADD CONSTRAINT KSLO_LO_TYPEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLO_LO_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_LO_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_LO_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_LO_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_LO_TYPE_ATTR
    ADD CONSTRAINT KSLO_LO_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLO_LO_TYPE_ATTR_I1 
  ON KSLO_LO_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLO_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLO_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLO_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLO_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(2000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLO_RICH_TEXT_T
    ADD CONSTRAINT KSLO_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CURR_VER_END TIMESTAMP
        , CURR_VER_START TIMESTAMP
        , SEQ_NUM NUMBER(19)
        , VER_CMT VARCHAR2(255)
        , VER_IND_ID VARCHAR2(255)
        , VER_FROM_ID VARCHAR2(255)
        , CAN_CREATE_LUI NUMBER(1)
        , DEF_ENRL_EST NUMBER(10)
        , DEF_MAX_ENRL NUMBER(10)
        , EFF_DT TIMESTAMP
        , EXP_FIRST_ATP VARCHAR2(255)
        , EXPIR_DT TIMESTAMP
        , HAS_EARLY_DROP_DEDLN NUMBER(1)
        , CLU_INTSTY_QTY VARCHAR2(255)
        , CLU_INTSTY_TYPE VARCHAR2(255)
        , IS_ENRL NUMBER(1)
        , IS_HAZR_DISBLD_STU NUMBER(1)
        , LAST_ADMIT_ATP VARCHAR2(255)
        , LAST_ATP VARCHAR2(255)
        , NEXT_REVIEW_PRD VARCHAR2(255)
        , REF_URL VARCHAR2(255)
        , ST VARCHAR2(255)
        , ATP_DUR_TYP_KEY VARCHAR2(255)
        , TM_QUANTITY NUMBER(10)
        , STDY_SUBJ_AREA VARCHAR2(255)
        , ACCT_ID VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , FEE_ID VARCHAR2(255)
        , LUTYPE_ID VARCHAR2(255)
        , OFFIC_CLU_ID VARCHAR2(255)
        , PRI_INSTR_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT SYS_C0011370 UNIQUE (VER_IND_ID, SEQ_NUM)

)
/

ALTER TABLE KSLU_CLU
    ADD CONSTRAINT KSLU_CLUP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_I1 
  ON KSLU_CLU 
  (PRI_INSTR_ID)
/
CREATE INDEX KSLU_CLU_I2 
  ON KSLU_CLU 
  (LUTYPE_ID)
/
CREATE INDEX KSLU_CLU_I3 
  ON KSLU_CLU 
  (RT_DESCR_ID)
/
CREATE INDEX KSLU_CLU_I4 
  ON KSLU_CLU 
  (FEE_ID)
/
CREATE INDEX KSLU_CLU_I5 
  ON KSLU_CLU 
  (OFFIC_CLU_ID)
/
CREATE INDEX KSLU_CLU_I6 
  ON KSLU_CLU 
  (ACCT_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLUCLU_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLUCLU_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLUCLU_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLUCLU_RELTN
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , CLU_RELTN_REQ NUMBER(1)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ST VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , LU_RELTN_TYPE_ID VARCHAR2(255)
        , RELATED_CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLUCLU_RELTN
    ADD CONSTRAINT KSLU_CLUCLU_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLUCLU_RELTN_I1 
  ON KSLU_CLUCLU_RELTN 
  (CLU_ID)
/
CREATE INDEX KSLU_CLUCLU_RELTN_I2 
  ON KSLU_CLUCLU_RELTN 
  (RELATED_CLU_ID)
/
CREATE INDEX KSLU_CLUCLU_RELTN_I3 
  ON KSLU_CLUCLU_RELTN 
  (LU_RELTN_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLUCLU_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLUCLU_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLUCLU_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLUCLU_RELTN_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLUCLU_RELTN_ATTR
    ADD CONSTRAINT KSLU_CLUCLU_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLUCLU_RELTN_ATTR_I1 
  ON KSLU_CLUCLU_RELTN_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLURES_JN_RESOPT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLURES_JN_RESOPT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLURES_JN_RESOPT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLURES_JN_RESOPT
(
      CLU_RES_ID VARCHAR2(255) NOT NULL
        , RES_OPT_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011378 UNIQUE (RES_OPT_ID)

)
/



CREATE INDEX KSLU_CLURES_JN_RESOPT_I1 
  ON KSLU_CLURES_JN_RESOPT 
  (CLU_RES_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_ACCRED
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ACCRED';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ACCRED CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ACCRED
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ORG_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_ACCRED
    ADD CONSTRAINT KSLU_CLU_ACCREDP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_ACCRED_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ACCRED_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ACCRED_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ACCRED_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ACCRED_ATTR
    ADD CONSTRAINT KSLU_CLU_ACCRED_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_ACCRED_ATTR_I1 
  ON KSLU_CLU_ACCRED_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_ACCT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ACCT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ACCT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ACCT
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ACCT
    ADD CONSTRAINT KSLU_CLU_ACCTP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_ACCT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ACCT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ACCT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ACCT_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ACCT_ATTR
    ADD CONSTRAINT KSLU_CLU_ACCT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_ACCT_ATTR_I1 
  ON KSLU_CLU_ACCT_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_ACCT_JN_AFFIL_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ACCT_JN_AFFIL_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ACCT_JN_AFFIL_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ACCT_JN_AFFIL_ORG
(
      CLU_ACCT_ID VARCHAR2(255) NOT NULL
        , AFFIL_ORG_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSLU_CLU_ACCT_JN_AFFIL_ORG_I1 
  ON KSLU_CLU_ACCT_JN_AFFIL_ORG 
  (AFFIL_ORG_ID)
/
CREATE INDEX KSLU_CLU_ACCT_JN_AFFIL_ORG_I2 
  ON KSLU_CLU_ACCT_JN_AFFIL_ORG 
  (CLU_ACCT_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_ADMIN_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ADMIN_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ADMIN_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ADMIN_ORG
(
      ID VARCHAR2(255)
        , IS_PR NUMBER(1)
        , ORG_ID VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ADMIN_ORG
    ADD CONSTRAINT KSLU_CLU_ADMIN_ORGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_ADMIN_ORG_I1 
  ON KSLU_CLU_ADMIN_ORG 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_ADMIN_ORG_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ADMIN_ORG_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ADMIN_ORG_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ADMIN_ORG_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ADMIN_ORG_ATTR
    ADD CONSTRAINT KSLU_CLU_ADMIN_ORG_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_ADMIN_ORG_ATTR_I1 
  ON KSLU_CLU_ADMIN_ORG_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_AFFIL_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_AFFIL_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_AFFIL_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_AFFIL_ORG
(
      ID VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ORG_ID VARCHAR2(255)
        , PERCT NUMBER(19)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_AFFIL_ORG
    ADD CONSTRAINT KSLU_CLU_AFFIL_ORGP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_ATP_TYPE_KEY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ATP_TYPE_KEY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ATP_TYPE_KEY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ATP_TYPE_KEY
(
      ID VARCHAR2(255)
        , ATP_TYPE_KEY VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ATP_TYPE_KEY
    ADD CONSTRAINT KSLU_CLU_ATP_TYPE_KEYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_ATP_TYPE_KEY_I1 
  ON KSLU_CLU_ATP_TYPE_KEY 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_ATTR
    ADD CONSTRAINT KSLU_CLU_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_ATTR_I1 
  ON KSLU_CLU_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_CR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_CR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_CR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_CR
(
      ID VARCHAR2(255)
        , INSTR_UNIT NUMBER(10)
        , MAX_ALOW_INACV_ATP VARCHAR2(255)
        , MAX_ALOW_INACV_TMQ NUMBER(10)
        , MAX_TM_RSLT_RCGZ_ATP VARCHAR2(255)
        , MAX_TM_RSLT_RCGZ_TMQ NUMBER(10)
        , MAX_TM_TO_COMP_ATP VARCHAR2(255)
        , MAX_TM_TO_COMP_TMQ NUMBER(10)
        , MAX_TOT_UNIT NUMBER(10)
        , MIN_TM_TO_COMP_ATP VARCHAR2(255)
        , MIN_TM_TO_COMP_TMQ NUMBER(10)
        , MIN_TOT_UNIT NUMBER(10)
        , REPEAT_CNT VARCHAR2(255)
        , REPEAT_TM_ATP VARCHAR2(255)
        , REPEAT_TM_TMQ NUMBER(10)
        , REPEAT_UNIT VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_CR
    ADD CONSTRAINT KSLU_CLU_CRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_FEE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , RT_DESCR_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_FEE
    ADD CONSTRAINT KSLU_CLU_FEEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_FEE_I1 
  ON KSLU_CLU_FEE 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_FEEREC_JN_AFFIL_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEEREC_JN_AFFIL_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEEREC_JN_AFFIL_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEEREC_JN_AFFIL_ORG
(
      CLU_FEE_REC_ID VARCHAR2(255) NOT NULL
        , AFFIL_ORG_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSLU_CLU_FEEREC_JN_AFF_ORG_I1 
  ON KSLU_CLU_FEEREC_JN_AFFIL_ORG 
  (AFFIL_ORG_ID)
/
CREATE INDEX KSLU_CLU_FEEREC_JN_AFF_ORG_I2 
  ON KSLU_CLU_FEEREC_JN_AFFIL_ORG 
  (CLU_FEE_REC_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_FEE_AMOUNT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEE_AMOUNT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEE_AMOUNT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEE_AMOUNT
(
      ID VARCHAR2(255)
        , CURRENCY_QUANT NUMBER(10)
        , CURRENCY_TYPE VARCHAR2(255)
        , CLUE_FEE_REC_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_FEE_AMOUNT
    ADD CONSTRAINT KSLU_CLU_FEE_AMOUNTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_FEE_AMOUNT_I1 
  ON KSLU_CLU_FEE_AMOUNT 
  (CLUE_FEE_REC_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_FEE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_FEE_ATTR
    ADD CONSTRAINT KSLU_CLU_FEE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_FEE_ATTR_I1 
  ON KSLU_CLU_FEE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_FEE_JN_CLU_FEE_REC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEE_JN_CLU_FEE_REC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEE_JN_CLU_FEE_REC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEE_JN_CLU_FEE_REC
(
      CLU_FEE_ID VARCHAR2(255) NOT NULL
        , CLU_FEE_REC_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSLU_CLUFEE_JN_CLUFEE_REC_I1 
  ON KSLU_CLU_FEE_JN_CLU_FEE_REC 
  (CLU_FEE_REC_ID)
/
CREATE INDEX KSLU_CLUFEE_JN_CLUFEE_REC_I2 
  ON KSLU_CLU_FEE_JN_CLU_FEE_REC 
  (CLU_FEE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_FEE_REC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEE_REC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEE_REC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEE_REC
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , FEE_TYPE VARCHAR2(255)
        , RATE_TYPE VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_FEE_REC
    ADD CONSTRAINT KSLU_CLU_FEE_RECP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_FEE_REC_I1 
  ON KSLU_CLU_FEE_REC 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_FEE_REC_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_FEE_REC_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_FEE_REC_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_FEE_REC_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_FEE_REC_ATTR
    ADD CONSTRAINT KSLU_CLU_FEE_REC_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_FEE_REC_ATTR_I1 
  ON KSLU_CLU_FEE_REC_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_IDENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_IDENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_IDENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_IDENT
(
      ID VARCHAR2(255)
        , CD VARCHAR2(255)
        , DIVISION VARCHAR2(255)
        , LVL VARCHAR2(255)
        , LNG_NAME VARCHAR2(255)
        , ORG_ID VARCHAR2(255)
        , SHRT_NAME VARCHAR2(255)
        , ST VARCHAR2(255)
        , SUFX_CD VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , VARTN VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_IDENT
    ADD CONSTRAINT KSLU_CLU_IDENTP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_IDENT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_IDENT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_IDENT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_IDENT_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/








-----------------------------------------------------------------------------
-- KSLU_CLU_INSTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_INSTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_INSTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_INSTR
(
      ID VARCHAR2(255)
        , ORG_ID VARCHAR2(255)
        , PERS_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_INSTR
    ADD CONSTRAINT KSLU_CLU_INSTRP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_INSTR_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_INSTR_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_INSTR_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_INSTR_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_INSTR_ATTR
    ADD CONSTRAINT KSLU_CLU_INSTR_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_INSTR_ATTR_I1 
  ON KSLU_CLU_INSTR_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_JN_ACCRED
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_JN_ACCRED';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_JN_ACCRED CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_JN_ACCRED
(
      CLU_ID VARCHAR2(255) NOT NULL
        , CLU_ACCRED_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011436 UNIQUE (CLU_ACCRED_ID)

)
/



CREATE INDEX KSLU_CLU_JN_ACCRED_I1 
  ON KSLU_CLU_JN_ACCRED 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_JN_CAMP_LOC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_JN_CAMP_LOC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_JN_CAMP_LOC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_JN_CAMP_LOC
(
      ID VARCHAR2(255)
        , CAMP_LOC VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_JN_CAMP_LOC
    ADD CONSTRAINT KSLU_CLU_JN_CAMP_LOCP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_JN_CAMP_LOC_I1 
  ON KSLU_CLU_JN_CAMP_LOC 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_JN_CLU_IDENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_JN_CLU_IDENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_JN_CLU_IDENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_JN_CLU_IDENT
(
      CLU_ID VARCHAR2(255) NOT NULL
        , ALT_CLU_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011441 UNIQUE (ALT_CLU_ID)

)
/



CREATE INDEX KSLU_CLU_JN_CLU_IDENT_I2 
  ON KSLU_CLU_JN_CLU_IDENT 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_JN_CLU_INSTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_JN_CLU_INSTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_JN_CLU_INSTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_JN_CLU_INSTR
(
      CLU_ID VARCHAR2(255) NOT NULL
        , CLU_INSTR_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011444 UNIQUE (CLU_INSTR_ID)

)
/



CREATE INDEX KSLU_CLU_JN_CLU_INSTR_I1 
  ON KSLU_CLU_JN_CLU_INSTR 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_JN_SUBJ_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_JN_SUBJ_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_JN_SUBJ_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_JN_SUBJ_ORG
(
      ID VARCHAR2(255)
        , ORG_ID VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_JN_SUBJ_ORG
    ADD CONSTRAINT KSLU_CLU_JN_SUBJ_ORGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_JN_SUBJ_ORG_I1 
  ON KSLU_CLU_JN_SUBJ_ORG 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_LO_ALOW_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_LO_ALOW_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_LO_ALOW_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_LO_ALOW_RELTN_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , LO_TYPE_ID VARCHAR2(255)
        , CLULO_RELTN_TYPE_ID VARCHAR2(255)
        , LU_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_LO_ALOW_RELTN_TYPE
    ADD CONSTRAINT KSLU_CLU_LO_ALOW_RELTN_TYPEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_LO_ALOW_REL_TYPE_I1 
  ON KSLU_CLU_LO_ALOW_RELTN_TYPE 
  (LU_TYPE_ID)
/
CREATE INDEX KSLU_CLU_LO_ALOW_REL_TYPE_I2 
  ON KSLU_CLU_LO_ALOW_RELTN_TYPE 
  (CLULO_RELTN_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_LO_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_LO_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_LO_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_LO_RELTN
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , LO_ID VARCHAR2(255)
        , ST VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_LO_RELTN
    ADD CONSTRAINT KSLU_CLU_LO_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_LO_RELTN_I1 
  ON KSLU_CLU_LO_RELTN 
  (CLU_ID)
/
CREATE INDEX KSLU_CLU_LO_RELTN_I2 
  ON KSLU_CLU_LO_RELTN 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_LO_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_LO_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_LO_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_LO_RELTN_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_LO_RELTN_ATTR
    ADD CONSTRAINT KSLU_CLU_LO_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_LO_RELTN_ATTR_I1 
  ON KSLU_CLU_LO_RELTN_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_LO_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_LO_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_LO_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_LO_RELTN_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_LO_RELTN_TYPE
    ADD CONSTRAINT KSLU_CLU_LO_RELTN_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_LO_RELTN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_LO_RELTN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_LO_RELTN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_LO_RELTN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_LO_RELTN_TYPE_ATTR
    ADD CONSTRAINT KSLU_CLU_LO_RELTN_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_LO_REL_TYPE_ATTR_I1 
  ON KSLU_CLU_LO_RELTN_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_PUBL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUBL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUBL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUBL
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , END_CYCLE VARCHAR2(255)
        , EXPIR_DT TIMESTAMP
        , START_CYCLE VARCHAR2(255)
        , ST VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , CLU_PUB_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_PUBL
    ADD CONSTRAINT KSLU_CLU_PUBLP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_PUBL_I1 
  ON KSLU_CLU_PUBL 
  (CLU_ID)
/
CREATE INDEX KSLU_CLU_PUBL_I2 
  ON KSLU_CLU_PUBL 
  (CLU_PUB_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_PUBL_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUBL_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUBL_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUBL_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_PUBL_ATTR
    ADD CONSTRAINT KSLU_CLU_PUBL_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_PUBL_ATTR_I1 
  ON KSLU_CLU_PUBL_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_PUBL_JN_CLU_INSTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUBL_JN_CLU_INSTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUBL_JN_CLU_INSTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUBL_JN_CLU_INSTR
(
      CLU_PUBL_ID VARCHAR2(255) NOT NULL
        , CLU_INSTR_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C009456 UNIQUE (CLU_INSTR_ID)

)
/








-----------------------------------------------------------------------------
-- KSLU_CLU_PUBL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUBL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUBL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUBL_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_PUBL_TYPE
    ADD CONSTRAINT KSLU_CLU_PUBL_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_PUBL_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUBL_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUBL_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUBL_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_PUBL_TYPE_ATTR
    ADD CONSTRAINT KSLU_CLU_PUBL_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_PUBL_TYPE_ATTR_I1 
  ON KSLU_CLU_PUBL_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_PUBL_VARI
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUBL_VARI';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUBL_VARI CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUBL_VARI
(
      ID VARCHAR2(255)
        , VARI_KEY VARCHAR2(255)
        , VARI_VALUE VARCHAR2(2500)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    
    , CONSTRAINT SYS_C0011470 UNIQUE (VARI_KEY, OWNER)

)
/

ALTER TABLE KSLU_CLU_PUBL_VARI
    ADD CONSTRAINT KSLU_CLU_PUBL_VARIP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_PUBL_VARI_I1 
  ON KSLU_CLU_PUBL_VARI 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_PUB_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUB_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUB_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUB_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_PUB_TYPE
    ADD CONSTRAINT KSLU_CLU_PUB_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_PUB_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_PUB_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_PUB_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_PUB_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_PUB_TYPE_ATTR
    ADD CONSTRAINT KSLU_CLU_PUB_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_PUB_TYPE_ATTR_I1 
  ON KSLU_CLU_PUB_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_RESULT_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_RESULT_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_RESULT_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_RESULT_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_RESULT_TYPE_ATTR
    ADD CONSTRAINT KSLU_CLU_RESULT_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_RESULT_TYPE_ATTR_I1 
  ON KSLU_CLU_RESULT_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_RSLT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_RSLT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_RSLT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_RSLT
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ST VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , TYPE_KEY_ID VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_RSLT
    ADD CONSTRAINT KSLU_CLU_RSLTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_RSLT_I1 
  ON KSLU_CLU_RSLT 
  (TYPE_KEY_ID)
/
CREATE INDEX KSLU_CLU_RSLT_I2 
  ON KSLU_CLU_RSLT 
  (CLU_ID)
/
CREATE INDEX KSLU_CLU_RSLT_I3 
  ON KSLU_CLU_RSLT 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_RSLT_LU_ALOW_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_RSLT_LU_ALOW_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_RSLT_LU_ALOW_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_RSLT_LU_ALOW_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , CLU_RSLT_TYPE_ID VARCHAR2(255)
        , LU_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_RSLT_LU_ALOW_TYPE
    ADD CONSTRAINT KSLU_CLU_RSLT_LU_ALOW_TYPEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_RSLT_LU_ALOW_TYPE_I1 
  ON KSLU_CLU_RSLT_LU_ALOW_TYPE 
  (CLU_RSLT_TYPE_ID)
/
CREATE INDEX KSLU_CLU_RSLT_LU_ALOW_TYPE_I2 
  ON KSLU_CLU_RSLT_LU_ALOW_TYPE 
  (LU_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_RSLT_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_RSLT_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_RSLT_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_RSLT_TYP
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_RSLT_TYP
    ADD CONSTRAINT KSLU_CLU_RSLT_TYPP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_SET
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_SET';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_SET CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_SET
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , ADMIN_ORG_ID VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , REFERENCEABLE NUMBER(1)
        , REUSABLE NUMBER(1)
        , NAME VARCHAR2(255)
        , ST VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , MEM_QUERY_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_CLU_SET
    ADD CONSTRAINT KSLU_CLU_SETP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_SET_I1 
  ON KSLU_CLU_SET 
  (MEM_QUERY_ID)
/
CREATE INDEX KSLU_CLU_SET_I2 
  ON KSLU_CLU_SET 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_SET_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_SET_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_SET_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_SET_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_SET_ATTR
    ADD CONSTRAINT KSLU_CLU_SET_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_SET_ATTR_I1 
  ON KSLU_CLU_SET_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_SET_JN_CLU
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_SET_JN_CLU';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_SET_JN_CLU CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_SET_JN_CLU
(
      CLU_SET_ID VARCHAR2(255) NOT NULL
        , CLU_VER_IND_ID VARCHAR2(255) NOT NULL
        , ID VARCHAR2(255)
        , VER_NBR NUMBER(19)
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KSLU_CLU_SET_JN_CLU_I1 UNIQUE (CLU_SET_ID, CLU_VER_IND_ID)

)
/

ALTER TABLE KSLU_CLU_SET_JN_CLU
    ADD CONSTRAINT KSLU_CLU_SET_JN_CLUP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_SET_JN_CLU_SET
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_SET_JN_CLU_SET';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_SET_JN_CLU_SET CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_SET_JN_CLU_SET
(
      CLU_SET_PARENT_ID VARCHAR2(255) NOT NULL
        , CLU_SET_CHILD_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSLU_CLU_SET_JN_CLU_SET_I1 
  ON KSLU_CLU_SET_JN_CLU_SET 
  (CLU_SET_PARENT_ID)
/
CREATE INDEX KSLU_CLU_SET_JN_CLU_SET_I2 
  ON KSLU_CLU_SET_JN_CLU_SET 
  (CLU_SET_CHILD_ID)
/





-----------------------------------------------------------------------------
-- KSLU_CLU_SET_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_SET_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_SET_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_SET_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_SET_TYPE
    ADD CONSTRAINT KSLU_CLU_SET_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_CLU_SET_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_CLU_SET_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_CLU_SET_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_CLU_SET_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_CLU_SET_TYPE_ATTR
    ADD CONSTRAINT KSLU_CLU_SET_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_CLU_SET_TYPE_ATTR_I1 
  ON KSLU_CLU_SET_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_DLVMTHD_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_DLVMTHD_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_DLVMTHD_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_DLVMTHD_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_DLVMTHD_TYPE
    ADD CONSTRAINT KSLU_DLVMTHD_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_DLVMTHD_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_DLVMTHD_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_DLVMTHD_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_DLVMTHD_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_DLVMTHD_TYPE_ATTR
    ADD CONSTRAINT KSLU_DLVMTHD_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_DLVMTHD_TYPE_ATTR_I1 
  ON KSLU_DLVMTHD_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_INSTFRMT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_INSTFRMT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_INSTFRMT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_INSTFRMT_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_INSTFRMT_TYPE
    ADD CONSTRAINT KSLU_INSTFRMT_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_INSTFRMT_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_INSTFRMT_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_INSTFRMT_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_INSTFRMT_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_INSTFRMT_TYPE_ATTR
    ADD CONSTRAINT KSLU_INSTFRMT_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_INSTFRMT_TYPE_ATTR_I1 
  ON KSLU_INSTFRMT_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_LULU_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LULU_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LULU_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LULU_RELTN_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , DESCR VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , REV_DESC VARCHAR2(255)
        , REV_NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_LULU_RELTN_TYPE
    ADD CONSTRAINT KSLU_LULU_RELTN_TYPEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_LULU_RELTN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LULU_RELTN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LULU_RELTN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LULU_RELTN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LULU_RELTN_TYPE_ATTR
    ADD CONSTRAINT KSLU_LULU_RELTN_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LULU_RELTN_TYPE_ATTR_I1 
  ON KSLU_LULU_RELTN_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_LULU_RELTN_TYPE_JN_LU_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LULU_RELTN_TYPE_JN_LU_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LULU_RELTN_TYPE_JN_LU_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LULU_RELTN_TYPE_JN_LU_TYP
(
      LULU_RELTN_TYPE_ID VARCHAR2(255) NOT NULL
        , LU_TYPE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSLU_LULU_RELTYP_JN_LUTYP_I1 
  ON KSLU_LULU_RELTN_TYPE_JN_LU_TYP 
  (LULU_RELTN_TYPE_ID)
/
CREATE INDEX KSLU_LULU_RELTYP_JN_LUTYP_I2 
  ON KSLU_LULU_RELTN_TYPE_JN_LU_TYP 
  (LU_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_LUTYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LUTYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LUTYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LUTYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , DLVR_MTHD VARCHAR2(255)
        , INSTR_FRMT VARCHAR2(255)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LUTYPE
    ADD CONSTRAINT KSLU_LUTYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_LU_CD_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_CD_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_CD_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_CD_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LU_CD_TYPE
    ADD CONSTRAINT KSLU_LU_CD_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_LU_CD_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_CD_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_CD_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_CD_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LU_CD_TYPE_ATTR
    ADD CONSTRAINT KSLU_LU_CD_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LU_CD_TYPE_ATTR_I1 
  ON KSLU_LU_CD_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_LU_CODE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_CODE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_CODE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_CODE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , DESCR VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , VALUE VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_LU_CODE
    ADD CONSTRAINT KSLU_LU_CODEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LU_CODE_I1 
  ON KSLU_LU_CODE 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_LU_CODE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_CODE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_CODE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_CODE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LU_CODE_ATTR
    ADD CONSTRAINT KSLU_LU_CODE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LU_CODE_ATTR_I1 
  ON KSLU_LU_CODE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_LU_LU_ALOW_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_LU_ALOW_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_LU_ALOW_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_LU_ALOW_RELTN_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , LU_TYPE_ID VARCHAR2(255)
        , LU_REL_TYPE_ID VARCHAR2(255)
        , LU_LU_RELTN_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_LU_LU_ALOW_RELTN_TYPE
    ADD CONSTRAINT KSLU_LU_LU_ALOW_RELTN_TYPEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LU_LU_ALOW_RELTN_TYPE_I1 
  ON KSLU_LU_LU_ALOW_RELTN_TYPE 
  (LU_REL_TYPE_ID)
/
CREATE INDEX KSLU_LU_LU_ALOW_RELTN_TYPE_I2 
  ON KSLU_LU_LU_ALOW_RELTN_TYPE 
  (LU_LU_RELTN_TYPE_ID)
/
CREATE INDEX KSLU_LU_LU_ALOW_RELTN_TYPE_I3 
  ON KSLU_LU_LU_ALOW_RELTN_TYPE 
  (LU_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_LU_PUBL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_PUBL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_PUBL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_PUBL_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LU_PUBL_TYPE
    ADD CONSTRAINT KSLU_LU_PUBL_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_LU_PUBL_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_PUBL_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_PUBL_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_PUBL_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LU_PUBL_TYPE_ATTR
    ADD CONSTRAINT KSLU_LU_PUBL_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LU_PUBL_TYPE_ATTR_I1 
  ON KSLU_LU_PUBL_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_LU_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_LU_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_LU_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_LU_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_LU_TYPE_ATTR
    ADD CONSTRAINT KSLU_LU_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_LU_TYPE_ATTR_I1 
  ON KSLU_LU_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_MEMSHIP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_MEMSHIP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_MEMSHIP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_MEMSHIP
(
      ID VARCHAR2(255)
        , SEARCH_TYPE_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_MEMSHIP
    ADD CONSTRAINT KSLU_MEMSHIPP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_MEMSHIP_KSLU_SPARAM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_MEMSHIP_KSLU_SPARAM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_MEMSHIP_KSLU_SPARAM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_MEMSHIP_KSLU_SPARAM
(
      KSLU_MEMSHIP_ID VARCHAR2(255) NOT NULL
        , SEARCHPARAMETERS_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011543 UNIQUE (SEARCHPARAMETERS_ID)

)
/



CREATE INDEX KSLU_MEMSHIP_KSLU_SPARAM_I1 
  ON KSLU_MEMSHIP_KSLU_SPARAM 
  (KSLU_MEMSHIP_ID)
/





-----------------------------------------------------------------------------
-- KSLU_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(4000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_RICH_TEXT_T
    ADD CONSTRAINT KSLU_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_RSLTUSAGE_LU_ALOW_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RSLTUSAGE_LU_ALOW_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RSLTUSAGE_LU_ALOW_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RSLTUSAGE_LU_ALOW_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , LU_TYPE_ID VARCHAR2(255)
        , CLU_RSLT_USAGE_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_RSLTUSAGE_LU_ALOW_TYPE
    ADD CONSTRAINT KSLU_RSLTUSAGE_LU_ALOW_TYPEP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_RSLTUSAGE_LU_ALOW_TYP_I1 
  ON KSLU_RSLTUSAGE_LU_ALOW_TYPE 
  (CLU_RSLT_USAGE_TYPE_ID)
/
CREATE INDEX KSLU_RSLTUSAGE_LU_ALOW_TYP_I2 
  ON KSLU_RSLTUSAGE_LU_ALOW_TYPE 
  (LU_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_RSLT_COMP_USG_ALOW_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RSLT_COMP_USG_ALOW_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RSLT_COMP_USG_ALOW_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RSLT_COMP_USG_ALOW_TYPE
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , RSLT_COMP_ID VARCHAR2(255)
        , RSLT_USG_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_RSLT_COMP_USG_ALOW_TYPE
    ADD CONSTRAINT KSLU_RSLT_COMP_USG_ALOW_TYPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_RSLTCOMP_USG_ALOW_TYP_I1 
  ON KSLU_RSLT_COMP_USG_ALOW_TYPE 
  (RSLT_USG_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSLU_RSLT_OPT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RSLT_OPT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RSLT_OPT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RSLT_OPT
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , RES_COMP_ID VARCHAR2(255)
        , ST VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , RES_USAGE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSLU_RSLT_OPT
    ADD CONSTRAINT KSLU_RSLT_OPTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_RSLT_OPT_I1 
  ON KSLU_RSLT_OPT 
  (RES_USAGE_ID)
/
CREATE INDEX KSLU_RSLT_OPT_I2 
  ON KSLU_RSLT_OPT 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSLU_RSLT_USG_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RSLT_USG_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RSLT_USG_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RSLT_USG_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_RSLT_USG_TYPE
    ADD CONSTRAINT KSLU_RSLT_USG_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSLU_RSLT_USG_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RSLT_USG_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RSLT_USG_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RSLT_USG_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_RSLT_USG_TYPE_ATTR
    ADD CONSTRAINT KSLU_RSLT_USG_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_RSLT_USG_TYPE_ATTR_I1 
  ON KSLU_RSLT_USG_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSLU_RSRC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_RSRC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_RSRC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_RSRC
(
      ID VARCHAR2(255)
        , RSRC_TYPE_ID VARCHAR2(255)
        , CLU_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    
    , CONSTRAINT SYS_C0011561 UNIQUE (RSRC_TYPE_ID, CLU_ID)

)
/

ALTER TABLE KSLU_RSRC
    ADD CONSTRAINT KSLU_RSRCP1
PRIMARY KEY (ID)
/


CREATE INDEX KSLU_RSRC_I1 
  ON KSLU_RSRC 
  (CLU_ID)
/





-----------------------------------------------------------------------------
-- KSLU_SPARAM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_SPARAM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_SPARAM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_SPARAM
(
      ID VARCHAR2(255)
        , SEARCH_PARAM_KEY VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_SPARAM
    ADD CONSTRAINT KSLU_SPARAMP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSLU_SPARAM_KSLU_SPVALUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_SPARAM_KSLU_SPVALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_SPARAM_KSLU_SPVALUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_SPARAM_KSLU_SPVALUE
(
      KSLU_SPARAM_ID VARCHAR2(255) NOT NULL
        , VALUES_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011566 UNIQUE (VALUES_ID)

)
/



CREATE INDEX KSLU_SPARAM_KSLU_SPVALUE_I1 
  ON KSLU_SPARAM_KSLU_SPVALUE 
  (KSLU_SPARAM_ID)
/





-----------------------------------------------------------------------------
-- KSLU_SPVALUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSLU_SPVALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSLU_SPVALUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSLU_SPVALUE
(
      ID VARCHAR2(255)
        , VALUE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSLU_SPVALUE
    ADD CONSTRAINT KSLU_SPVALUEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSMG_MESSAGE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSMG_MESSAGE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSMG_MESSAGE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSMG_MESSAGE
(
      ID VARCHAR2(255)
        , MSG_ID VARCHAR2(255)
        , LOCALE VARCHAR2(255)
        , GRP_NAME VARCHAR2(255)
        , MSG_VALUE VARCHAR2(2000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSMG_MESSAGE
    ADD CONSTRAINT KSMG_MESSAGEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSOR_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , LNG_DESCR VARCHAR2(2000)
        , LNG_NAME VARCHAR2(255)
        , SHRT_DESCR VARCHAR2(500)
        , SHRT_NAME VARCHAR2(255)
        , ST VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSOR_ORG
    ADD CONSTRAINT KSOR_ORGP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_I1 
  ON KSOR_ORG 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_ATTR
    ADD CONSTRAINT KSOR_ORG_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_ATTR_I1 
  ON KSOR_ORG_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_HIRCHY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_HIRCHY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_HIRCHY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_HIRCHY
(
      ID VARCHAR2(255)
        , DESCR VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , ROOT_ORG VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_HIRCHY
    ADD CONSTRAINT KSOR_ORG_HIRCHYP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_HIRCHY_I1 
  ON KSOR_ORG_HIRCHY 
  (ROOT_ORG)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_HIRCHY_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_HIRCHY_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_HIRCHY_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_HIRCHY_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_HIRCHY_ATTR
    ADD CONSTRAINT KSOR_ORG_HIRCHY_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_HIRCHY_ATTR_I1 
  ON KSOR_ORG_HIRCHY_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_HIRCHY_JN_ORG_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_HIRCHY_JN_ORG_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_HIRCHY_JN_ORG_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_HIRCHY_JN_ORG_TYPE
(
      ORG_HIRCHY_ID VARCHAR2(255) NOT NULL
        , ORG_TYPE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSOR_ORG_HIRCHY_JN_ORG_TYP_I1 
  ON KSOR_ORG_HIRCHY_JN_ORG_TYPE 
  (ORG_HIRCHY_ID)
/
CREATE INDEX KSOR_ORG_HIRCHY_JN_ORG_TYP_I2 
  ON KSOR_ORG_HIRCHY_JN_ORG_TYPE 
  (ORG_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_JN_ORG_PERS_REL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_JN_ORG_PERS_REL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_JN_ORG_PERS_REL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_JN_ORG_PERS_REL_TYPE
(
      ORG_ID VARCHAR2(255) NOT NULL
        , ORG_PERS_RELTN_TYPE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSOR_ORG_JN_ORG_PERREL_TYP_I1 
  ON KSOR_ORG_JN_ORG_PERS_REL_TYPE 
  (ORG_PERS_RELTN_TYPE_ID)
/
CREATE INDEX KSOR_ORG_JN_ORG_PERREL_TYP_I2 
  ON KSOR_ORG_JN_ORG_PERS_REL_TYPE 
  (ORG_ID)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_ORG_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_ORG_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_ORG_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_ORG_RELTN
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ST VARCHAR2(255)
        , ORG VARCHAR2(255)
        , RELATED_ORG VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSOR_ORG_ORG_RELTN
    ADD CONSTRAINT KSOR_ORG_ORG_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_ORG_RELTN_I1 
  ON KSOR_ORG_ORG_RELTN 
  (ORG)
/
CREATE INDEX KSOR_ORG_ORG_RELTN_I2 
  ON KSOR_ORG_ORG_RELTN 
  (RELATED_ORG)
/
CREATE INDEX KSOR_ORG_ORG_RELTN_I3 
  ON KSOR_ORG_ORG_RELTN 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_ORG_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_ORG_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_ORG_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_ORG_RELTN_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_ORG_RELTN_ATTR
    ADD CONSTRAINT KSOR_ORG_ORG_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_ORG_RELTN_ATTR_I1 
  ON KSOR_ORG_ORG_RELTN_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_ORG_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_ORG_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_ORG_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_ORG_RELTN_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , REV_DESCR VARCHAR2(255)
        , REV_NAME VARCHAR2(255)
        , ORG_HIRCHY VARCHAR2(255)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_ORG_RELTN_TYPE
    ADD CONSTRAINT KSOR_ORG_ORG_RELTN_TYPEP1
PRIMARY KEY (TYPE_KEY)
/


CREATE INDEX KSOR_ORG_ORG_RELTN_TYPE_I1 
  ON KSOR_ORG_ORG_RELTN_TYPE 
  (ORG_HIRCHY)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_ORG_RELTN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_ORG_RELTN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_ORG_RELTN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_ORG_RELTN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_ORG_RELTN_TYPE_ATTR
    ADD CONSTRAINT KSOR_ORG_ORG_RELTN_TYPE_ATTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_ORG_REL_TYP_ATTR_I1 
  ON KSOR_ORG_ORG_RELTN_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_PERS_RELTN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_PERS_RELTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_PERS_RELTN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_PERS_RELTN
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , PERS_ID VARCHAR2(255)
        , ST VARCHAR2(255)
        , ORG VARCHAR2(255)
        , ORG_PERS_RELTN_TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT SYS_C0011691 UNIQUE (ORG_PERS_RELTN_TYPE, ORG, PERS_ID)

)
/

ALTER TABLE KSOR_ORG_PERS_RELTN
    ADD CONSTRAINT KSOR_ORG_PERS_RELTNP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_PERS_RELTN_I1 
  ON KSOR_ORG_PERS_RELTN 
  (ORG)
/
CREATE INDEX KSOR_ORG_PERS_RELTN_I2 
  ON KSOR_ORG_PERS_RELTN 
  (ORG_PERS_RELTN_TYPE)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_PERS_RELTN_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_PERS_RELTN_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_PERS_RELTN_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_PERS_RELTN_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_PERS_RELTN_ATTR
    ADD CONSTRAINT KSOR_ORG_PERS_RELTN_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_PERS_RELTN_ATTR_I1 
  ON KSOR_ORG_PERS_RELTN_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_PERS_RELTN_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_PERS_RELTN_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_PERS_RELTN_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_PERS_RELTN_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_PERS_RELTN_TYPE
    ADD CONSTRAINT KSOR_ORG_PERS_RELTN_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSOR_ORG_PERS_RELTN_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_PERS_RELTN_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_PERS_RELTN_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_PERS_RELTN_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_PERS_RELTN_TYPE_ATTR
    ADD CONSTRAINT KSOR_ORG_PERS_RELTN_TYPE_ATP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_PERS_REL_TYP_ATTR_I1 
  ON KSOR_ORG_PERS_RELTN_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_POS_RESTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_POS_RESTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_POS_RESTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_POS_RESTR
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , DESCR VARCHAR2(2000)
        , MAX_NUM_RELTN VARCHAR2(255)
        , MIN_NUM_RELTN NUMBER(10)
        , ATP_DUR_TYP_KEY VARCHAR2(255)
        , TM_QUANTITY NUMBER(10)
        , TTL VARCHAR2(255)
        , ORG VARCHAR2(255)
        , PERS_RELTN_TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT SYS_C0011701 UNIQUE (ORG, PERS_RELTN_TYPE)

)
/

ALTER TABLE KSOR_ORG_POS_RESTR
    ADD CONSTRAINT KSOR_ORG_POS_RESTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_POS_RESTR_I1 
  ON KSOR_ORG_POS_RESTR 
  (PERS_RELTN_TYPE)
/
CREATE INDEX KSOR_ORG_POS_RESTR_I2 
  ON KSOR_ORG_POS_RESTR 
  (ORG)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_POS_RESTR_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_POS_RESTR_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_POS_RESTR_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_POS_RESTR_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_POS_RESTR_ATTR
    ADD CONSTRAINT KSOR_ORG_POS_RESTR_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_POS_RESTR_ATTR_I1 
  ON KSOR_ORG_POS_RESTR_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_TYPE
    ADD CONSTRAINT KSOR_ORG_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSOR_ORG_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSOR_ORG_TYPE_ATTR
    ADD CONSTRAINT KSOR_ORG_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSOR_ORG_TYPE_ATTR_I1 
  ON KSOR_ORG_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSOR_ORG_TYPE_JN_ORG_PERRL_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSOR_ORG_TYPE_JN_ORG_PERRL_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSOR_ORG_TYPE_JN_ORG_PERRL_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSOR_ORG_TYPE_JN_ORG_PERRL_TYP
(
      ORG_TYPE_ID VARCHAR2(255) NOT NULL
        , ORG_PERS_RELTN_TYPE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSOR_ORGTYP_JN_ORGPREL_TYP_I1 
  ON KSOR_ORG_TYPE_JN_ORG_PERRL_TYP 
  (ORG_PERS_RELTN_TYPE_ID)
/
CREATE INDEX KSOR_ORGTYP_JN_ORGPREL_TYP_I2 
  ON KSOR_ORG_TYPE_JN_ORG_PERRL_TYP 
  (ORG_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL
(
      PROPOSAL_ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , DETAIL_DESC VARCHAR2(255)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , RATIONALE VARCHAR2(255)
        , STATE VARCHAR2(255)
        , WORKFLOW_ID VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSPR_PROPOSAL
    ADD CONSTRAINT KSPR_PROPOSALP1
PRIMARY KEY (PROPOSAL_ID)
/


CREATE INDEX KSPR_PROPOSAL_I1 
  ON KSPR_PROPOSAL 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_ATTR
    ADD CONSTRAINT KSPR_PROPOSAL_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSPR_PROPOSAL_ATTR_I1 
  ON KSPR_PROPOSAL_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_JN_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_JN_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_JN_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_JN_ORG
(
      ORGREF_ID VARCHAR2(255)
        , ORG_ID VARCHAR2(255)
        , PROPOSAL_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_JN_ORG
    ADD CONSTRAINT KSPR_PROPOSAL_JN_ORGP1
PRIMARY KEY (ORGREF_ID)
/


CREATE INDEX KSPR_PROPOSAL_JN_ORG_I1 
  ON KSPR_PROPOSAL_JN_ORG 
  (PROPOSAL_ID)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_JN_PERSON
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_JN_PERSON';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_JN_PERSON CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_JN_PERSON
(
      ID VARCHAR2(255)
        , PERSONREF_ID VARCHAR2(255)
        , PROPOSAL_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_JN_PERSON
    ADD CONSTRAINT KSPR_PROPOSAL_JN_PERSONP1
PRIMARY KEY (ID)
/


CREATE INDEX KSPR_PROPOSAL_JN_PERSON_I1 
  ON KSPR_PROPOSAL_JN_PERSON 
  (PROPOSAL_ID)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_JN_REFERENCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_JN_REFERENCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_JN_REFERENCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_JN_REFERENCE
(
      PROPOSAL_ID VARCHAR2(255) NOT NULL
        , REFERENCE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSPR_PROPOSAL_JN_REFERENCE_I1 
  ON KSPR_PROPOSAL_JN_REFERENCE 
  (REFERENCE_ID)
/
CREATE INDEX KSPR_PROPOSAL_JN_REFERENCE_I2 
  ON KSPR_PROPOSAL_JN_REFERENCE 
  (PROPOSAL_ID)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_REFERENCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_REFERENCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_REFERENCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_REFERENCE
(
      REFERENCE_ID VARCHAR2(255)
        , OBJECT_REFERENCE_ID VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_REFERENCE
    ADD CONSTRAINT KSPR_PROPOSAL_REFERENCEP1
PRIMARY KEY (REFERENCE_ID)
/


CREATE INDEX KSPR_PROPOSAL_REFERENCE_I1 
  ON KSPR_PROPOSAL_REFERENCE 
  (TYPE)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_REFTYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_REFTYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_REFTYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_REFTYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_REFTYPE
    ADD CONSTRAINT KSPR_PROPOSAL_REFTYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_REFTYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_REFTYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_REFTYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_REFTYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_REFTYPE_ATTR
    ADD CONSTRAINT KSPR_PROPOSAL_REFTYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSPR_PROPOSAL_REFTYPE_ATTR_I1 
  ON KSPR_PROPOSAL_REFTYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_TYPE
    ADD CONSTRAINT KSPR_PROPOSAL_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSPR_PROPOSAL_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_PROPOSAL_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_PROPOSAL_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_PROPOSAL_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_PROPOSAL_TYPE_ATTR
    ADD CONSTRAINT KSPR_PROPOSAL_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSPR_PROPOSAL_TYPE_ATTR_I1 
  ON KSPR_PROPOSAL_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSPR_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSPR_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSPR_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSPR_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(2000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSPR_RICH_TEXT_T
    ADD CONSTRAINT KSPR_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSSC_SUBJ_CD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSSC_SUBJ_CD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSSC_SUBJ_CD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSSC_SUBJ_CD
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , NAME VARCHAR2(255)
        , STATE VARCHAR2(255)
        , CD VARCHAR2(255)
        , TYPE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT KSSC_SUBJ_CD_IX1 UNIQUE (CD)

)
/

ALTER TABLE KSSC_SUBJ_CD
    ADD CONSTRAINT KSSC_SUBJ_CDP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSSC_SUBJ_CD_JN_ORG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSSC_SUBJ_CD_JN_ORG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSSC_SUBJ_CD_JN_ORG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSSC_SUBJ_CD_JN_ORG
(
      ID VARCHAR2(255)
        , ORG_ID VARCHAR2(255)
        , SUBJ_CD_ID VARCHAR2(255)
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSSC_SUBJ_CD_JN_ORG
    ADD CONSTRAINT KSSC_SUBJ_CD_JN_ORGP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSSC_SUBJ_CD_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSSC_SUBJ_CD_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSSC_SUBJ_CD_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSSC_SUBJ_CD_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSSC_SUBJ_CD_TYPE
    ADD CONSTRAINT KSSC_SUBJ_CD_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_NL_USAGE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_NL_USAGE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_NL_USAGE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_NL_USAGE_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_NL_USAGE_TYPE
    ADD CONSTRAINT KSST_NL_USAGE_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_OBJECT_SUB_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_OBJECT_SUB_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_OBJECT_SUB_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_OBJECT_SUB_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_OBJECT_SUB_TYPE
    ADD CONSTRAINT KSST_OBJECT_SUB_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_OBJECT_SUB_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_OBJECT_SUB_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_OBJECT_SUB_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_OBJECT_SUB_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_OBJECT_SUB_TYPE_ATTR
    ADD CONSTRAINT KSST_OBJECT_SUB_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_OBJECT_SUB_TYPE_ATTR_I1 
  ON KSST_OBJECT_SUB_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_OBJECT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_OBJECT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_OBJECT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_OBJECT_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_OBJECT_TYPE
    ADD CONSTRAINT KSST_OBJECT_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_OBJECT_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_OBJECT_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_OBJECT_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_OBJECT_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_OBJECT_TYPE_ATTR
    ADD CONSTRAINT KSST_OBJECT_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_OBJECT_TYPE_ATTR_I1 
  ON KSST_OBJECT_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_OBJ_TYP_JN_OBJ_SUB_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_OBJ_TYP_JN_OBJ_SUB_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_OBJ_TYP_JN_OBJ_SUB_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_OBJ_TYP_JN_OBJ_SUB_TYP
(
      OBJ_TYPE_ID VARCHAR2(255) NOT NULL
        , OBJ_SUB_TYPE_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011792 UNIQUE (OBJ_SUB_TYPE_ID)

)
/



CREATE INDEX KSST_OBJ_TYP_JN_OBJ_SUBTYP_I2 
  ON KSST_OBJ_TYP_JN_OBJ_SUB_TYP 
  (OBJ_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSST_RCTYP_JN_RCFLDTYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_RCTYP_JN_RCFLDTYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_RCTYP_JN_RCFLDTYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_RCTYP_JN_RCFLDTYP
(
      REQ_COMP_TYPE_ID VARCHAR2(255) NOT NULL
        , REQ_COMP_FIELD_TYPE_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT IX1 UNIQUE (REQ_COMP_TYPE_ID, REQ_COMP_FIELD_TYPE_ID)

)
/



CREATE INDEX KSST_RCTYP_JN_RCFLDTYP_I1 
  ON KSST_RCTYP_JN_RCFLDTYP 
  (REQ_COMP_FIELD_TYPE_ID)
/
CREATE INDEX KSST_RCTYP_JN_RCFLDTYP_I2 
  ON KSST_RCTYP_JN_RCFLDTYP 
  (REQ_COMP_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSST_RC_JN_RC_FIELD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_RC_JN_RC_FIELD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_RC_JN_RC_FIELD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_RC_JN_RC_FIELD
(
      REQ_COM_ID VARCHAR2(255) NOT NULL
        , REQ_COM_FIELD_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011797 UNIQUE (REQ_COM_FIELD_ID)

)
/



CREATE INDEX KSST_RC_JN_RC_FIELD_I1 
  ON KSST_RC_JN_RC_FIELD 
  (REQ_COM_ID)
/





-----------------------------------------------------------------------------
-- KSST_REF_STMT_REL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REF_STMT_REL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REF_STMT_REL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REF_STMT_REL
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , REF_OBJ_ID VARCHAR2(255)
        , REF_OBJ_TYPE_KEY VARCHAR2(255)
        , ST VARCHAR2(255)
        , REF_STMT_REL_TYPE_ID VARCHAR2(255)
        , STMT_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSST_REF_STMT_REL
    ADD CONSTRAINT KSST_REF_STMT_RELP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_REF_STMT_REL_I1 
  ON KSST_REF_STMT_REL 
  (REF_STMT_REL_TYPE_ID)
/
CREATE INDEX KSST_REF_STMT_REL_I2 
  ON KSST_REF_STMT_REL 
  (STMT_ID)
/





-----------------------------------------------------------------------------
-- KSST_REF_STMT_REL_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REF_STMT_REL_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REF_STMT_REL_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REF_STMT_REL_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REF_STMT_REL_ATTR
    ADD CONSTRAINT KSST_REF_STMT_REL_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_REF_STMT_REL_ATTR_I1 
  ON KSST_REF_STMT_REL_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_REF_STMT_REL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REF_STMT_REL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REF_STMT_REL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REF_STMT_REL_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REF_STMT_REL_TYPE
    ADD CONSTRAINT KSST_REF_STMT_REL_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_REF_STMT_REL_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REF_STMT_REL_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REF_STMT_REL_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REF_STMT_REL_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REF_STMT_REL_TYPE_ATTR
    ADD CONSTRAINT KSST_REF_STMT_REL_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_REF_STMT_REL_TYP_ATTR_I1 
  ON KSST_REF_STMT_REL_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_REQ_COM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REQ_COM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REQ_COM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REQ_COM
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , ST VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , REQ_COM_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSST_REQ_COM
    ADD CONSTRAINT KSST_REQ_COMP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_REQ_COM_I1 
  ON KSST_REQ_COM 
  (REQ_COM_TYPE_ID)
/
CREATE INDEX KSST_REQ_COM_I2 
  ON KSST_REQ_COM 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSST_REQ_COM_FIELD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REQ_COM_FIELD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REQ_COM_FIELD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REQ_COM_FIELD
(
      ID VARCHAR2(255)
        , REQ_COM_FIELD_TYPE VARCHAR2(255)
        , VALUE VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REQ_COM_FIELD
    ADD CONSTRAINT KSST_REQ_COM_FIELDP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSST_REQ_COM_FIELD_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REQ_COM_FIELD_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REQ_COM_FIELD_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REQ_COM_FIELD_TYPE
(
      ID VARCHAR2(255)
        , DATA_TYPE VARCHAR2(255) NOT NULL
        , DESCR VARCHAR2(255) NOT NULL
        , INVALID_CHARS VARCHAR2(255)
        , MAX_LENGTH NUMBER(10)
        , MAX_OCCURS NUMBER(10)
        , MAX_VALUE VARCHAR2(255)
        , MIN_LENGTH NUMBER(10)
        , MIN_OCCURS NUMBER(10)
        , MIN_VALUE VARCHAR2(255)
        , NAME VARCHAR2(255) NOT NULL
        , READ_ONLY NUMBER(1) NOT NULL
        , VALID_CHARS VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REQ_COM_FIELD_TYPE
    ADD CONSTRAINT KSST_REQ_COM_FIELD_TYPEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSST_REQ_COM_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REQ_COM_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REQ_COM_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REQ_COM_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REQ_COM_TYPE
    ADD CONSTRAINT KSST_REQ_COM_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_REQ_COM_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REQ_COM_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REQ_COM_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REQ_COM_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REQ_COM_TYPE_ATTR
    ADD CONSTRAINT KSST_REQ_COM_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_REQ_COM_TYPE_ATTR_I1 
  ON KSST_REQ_COM_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_REQ_COM_TYPE_NL_TMPL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_REQ_COM_TYPE_NL_TMPL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_REQ_COM_TYPE_NL_TMPL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_REQ_COM_TYPE_NL_TMPL
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , LANGUAGE VARCHAR2(2)
        , NL_USUAGE_TYPE_KEY VARCHAR2(255)
        , TEMPLATE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_REQ_COM_TYPE_NL_TMPL
    ADD CONSTRAINT KSST_REQ_COM_TYPE_NL_TMPLP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_REQ_COM_TYPE_NL_TMPL_I1 
  ON KSST_REQ_COM_TYPE_NL_TMPL 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_RICH_TEXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_RICH_TEXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_RICH_TEXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_RICH_TEXT_T
(
      ID VARCHAR2(255)
        , FORMATTED VARCHAR2(2000)
        , PLAIN VARCHAR2(2000)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_RICH_TEXT_T
    ADD CONSTRAINT KSST_RICH_TEXT_TP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- KSST_RSTMT_RTYP_JN_OSUB_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_RSTMT_RTYP_JN_OSUB_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_RSTMT_RTYP_JN_OSUB_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_RSTMT_RTYP_JN_OSUB_TYP
(
      REF_STMT_REL_TYPE_ID VARCHAR2(255) NOT NULL
        , OBJ_SUB_TYPE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSST_RSTMT_RTYP_JN_OSUBTYP_I1 
  ON KSST_RSTMT_RTYP_JN_OSUB_TYP 
  (OBJ_SUB_TYPE_ID)
/
CREATE INDEX KSST_RSTMT_RTYP_JN_OSUBTYP_I2 
  ON KSST_RSTMT_RTYP_JN_OSUB_TYP 
  (REF_STMT_REL_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSST_RSTMT_RTYP_JN_STMT_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_RSTMT_RTYP_JN_STMT_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_RSTMT_RTYP_JN_STMT_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_RSTMT_RTYP_JN_STMT_TYP
(
      REF_STMT_REL_TYPE_ID VARCHAR2(255) NOT NULL
        , STMT_TYPE_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSST_RSTMT_RTYP_JN_ST_TYP_I1 
  ON KSST_RSTMT_RTYP_JN_STMT_TYP 
  (REF_STMT_REL_TYPE_ID)
/
CREATE INDEX KSST_RSTMT_RTYP_JN_ST_TYP_I2 
  ON KSST_RSTMT_RTYP_JN_STMT_TYP 
  (STMT_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSST_STMT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT
(
      ID VARCHAR2(255)
        , CREATEID VARCHAR2(255)
        , CREATETIME TIMESTAMP
        , UPDATEID VARCHAR2(255)
        , UPDATETIME TIMESTAMP
        , VER_NBR NUMBER(19) NOT NULL
        , NAME VARCHAR2(255)
        , OPERATOR VARCHAR2(255)
        , ST VARCHAR2(255)
        , RT_DESCR_ID VARCHAR2(255)
        , STMT_TYPE_ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KSST_STMT
    ADD CONSTRAINT KSST_STMTP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_STMT_I1 
  ON KSST_STMT 
  (STMT_TYPE_ID)
/
CREATE INDEX KSST_STMT_I2 
  ON KSST_STMT 
  (RT_DESCR_ID)
/





-----------------------------------------------------------------------------
-- KSST_STMT_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_STMT_ATTR
    ADD CONSTRAINT KSST_STMT_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_STMT_ATTR_I1 
  ON KSST_STMT_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_STMT_JN_REQ_COM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_JN_REQ_COM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_JN_REQ_COM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_JN_REQ_COM
(
      STMT_ID VARCHAR2(255) NOT NULL
        , REQ_COM_ID VARCHAR2(255) NOT NULL
    

)
/



CREATE INDEX KSST_STMT_JN_REQ_COM_I1 
  ON KSST_STMT_JN_REQ_COM 
  (STMT_ID)
/
CREATE INDEX KSST_STMT_JN_REQ_COM_I2 
  ON KSST_STMT_JN_REQ_COM 
  (REQ_COM_ID)
/





-----------------------------------------------------------------------------
-- KSST_STMT_JN_STMT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_JN_STMT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_JN_STMT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_JN_STMT
(
      STMT_ID VARCHAR2(255) NOT NULL
        , CHLD_STMT_ID VARCHAR2(255) NOT NULL
    
    , CONSTRAINT SYS_C0011839 UNIQUE (CHLD_STMT_ID)

)
/



CREATE INDEX KSST_STMT_JN_STMT_I1 
  ON KSST_STMT_JN_STMT 
  (STMT_ID)
/





-----------------------------------------------------------------------------
-- KSST_STMT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_TYPE
(
      TYPE_KEY VARCHAR2(255)
        , TYPE_DESC VARCHAR2(2000)
        , EFF_DT TIMESTAMP
        , EXPIR_DT TIMESTAMP
        , NAME VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_STMT_TYPE
    ADD CONSTRAINT KSST_STMT_TYPEP1
PRIMARY KEY (TYPE_KEY)
/







-----------------------------------------------------------------------------
-- KSST_STMT_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_STMT_TYPE_ATTR
    ADD CONSTRAINT KSST_STMT_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_STMT_TYPE_ATTR_I1 
  ON KSST_STMT_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KSST_STMT_TYP_JN_RC_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_TYP_JN_RC_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_TYP_JN_RC_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_TYP_JN_RC_TYP
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , REQ_COM_TYPE_ID VARCHAR2(255)
        , SORT_ORDER NUMBER(10)
        , STMT_TYPE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSST_STMT_TYP_JN_RC_TYP
    ADD CONSTRAINT KSST_STMT_TYP_JN_RC_TYPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_STMT_TYP_JN_RC_TYP_I1 
  ON KSST_STMT_TYP_JN_RC_TYP 
  (REQ_COM_TYPE_ID)
/
CREATE INDEX KSST_STMT_TYP_JN_RC_TYP_I2 
  ON KSST_STMT_TYP_JN_RC_TYP 
  (STMT_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSST_STMT_TYP_JN_STMT_TYP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_STMT_TYP_JN_STMT_TYP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_STMT_TYP_JN_STMT_TYP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_STMT_TYP_JN_STMT_TYP
(
      ID VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
        , CHLD_STMT_TYPE_ID VARCHAR2(255)
        , SORT_ORDER NUMBER(10)
        , STMT_TYPE_ID VARCHAR2(255)
    

)
/

ALTER TABLE KSST_STMT_TYP_JN_STMT_TYP
    ADD CONSTRAINT KSST_STMT_TYP_JN_STMT_TYPP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_STMT_TYP_JN_STMT_TYP_I1 
  ON KSST_STMT_TYP_JN_STMT_TYP 
  (CHLD_STMT_TYPE_ID)
/
CREATE INDEX KSST_STMT_TYP_JN_STMT_TYP_I2 
  ON KSST_STMT_TYP_JN_STMT_TYP 
  (STMT_TYPE_ID)
/





-----------------------------------------------------------------------------
-- KSST_USAGE_TYPE_ATTR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KSST_USAGE_TYPE_ATTR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KSST_USAGE_TYPE_ATTR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KSST_USAGE_TYPE_ATTR
(
      ID VARCHAR2(255)
        , ATTR_NAME VARCHAR2(255)
        , ATTR_VALUE VARCHAR2(2000)
        , OWNER VARCHAR2(255)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(19)
    

)
/

ALTER TABLE KSST_USAGE_TYPE_ATTR
    ADD CONSTRAINT KSST_USAGE_TYPE_ATTRP1
PRIMARY KEY (ID)
/


CREATE INDEX KSST_USAGE_TYPE_ATTR_I1 
  ON KSST_USAGE_TYPE_ATTR 
  (OWNER)
/





-----------------------------------------------------------------------------
-- KS_DB_VERSION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KS_DB_VERSION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KS_DB_VERSION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KS_DB_VERSION
(
      VERSION VARCHAR2(255)
        , MODULE_NAME VARCHAR2(255)
        , UPGRADE_TIME TIMESTAMP default SYSDATE
        , BUILD_ID VARCHAR2(255)
        , BUILD_TIMESTAMP VARCHAR2(255)
    

)
/








-- -----------------------------------------------------------------------
-- KRIM_GRP_MBR_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_GRP_MBR_V AS 
SELECT g.NMSPC_CD
, g.grp_nm
, g.GRP_ID
, p.PRNCPL_NM
, p.PRNCPL_ID
, mg.GRP_NM AS mbr_grp_nm
, mg.GRP_ID AS mbr_grp_id
FROM KRIM_GRP_MBR_T gm
LEFT JOIN krim_grp_t g
ON g.GRP_ID = gm.GRP_ID
LEFT OUTER JOIN krim_grp_t mg
ON mg.GRP_ID = gm.MBR_ID
AND gm.MBR_TYP_CD = 'G'
LEFT OUTER JOIN krim_prncpl_t p
ON p.PRNCPL_ID = gm.MBR_ID
AND gm.MBR_TYP_CD = 'P'
LEFT OUTER JOIN krim_entity_nm_t en
ON en.ENTITY_ID = p.ENTITY_ID
AND en.DFLT_IND = 'Y'
AND en.ACTV_IND = 'Y'
ORDER BY nmspc_cd, grp_nm, prncpl_nm
/

-- -----------------------------------------------------------------------
-- KRIM_GRP_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_GRP_V AS 
SELECT g.NMSPC_CD
, g.grp_nm
, g.GRP_ID
, t.NM AS grp_typ_nm
, a.NM AS attr_nm
, d.ATTR_VAL AS attr_val
FROM krim_grp_t g
LEFT OUTER JOIN KRIM_GRP_ATTR_DATA_T d
ON d.grp_id = g.GRP_ID
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON a.KIM_ATTR_DEFN_ID = d.KIM_ATTR_DEFN_ID
LEFT OUTER JOIN KRIM_TYP_T t
ON g.KIM_TYP_ID = t.KIM_TYP_ID
/

-- -----------------------------------------------------------------------
-- KRIM_PERM_ATTR_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_PERM_ATTR_V AS 
SELECT
t.nmspc_cd AS tmpl_nmspc_cd
, t.NM AS tmpl_nm
, t.PERM_TMPL_ID
, p.nmspc_cd AS perm_nmspc_cd
, p.NM AS perm_nm
, p.PERM_ID
, a.NM AS attr_nm
, ad.ATTR_VAL AS attr_val
FROM KRIM_PERM_T p
LEFT JOIN KRIM_PERM_TMPL_T t
ON p.PERM_TMPL_ID = t.PERM_TMPL_ID
LEFT OUTER JOIN KRIM_PERM_ATTR_DATA_T ad
ON p.PERM_ID = ad.perm_id
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON ad.KIM_ATTR_DEFN_ID = a.KIM_ATTR_DEFN_ID
ORDER BY tmpl_nmspc_cd, tmpl_nm, perm_nmspc_cd, perm_id, attr_nm
/

-- -----------------------------------------------------------------------
-- KRIM_PERM_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_PERM_V AS 
SELECT
t.nmspc_cd AS tmpl_nmspc_cd
, t.NM AS tmpl_nm
, t.PERM_TMPL_ID
, p.nmspc_cd AS perm_nmspc_cd
, p.NM AS perm_nm
, p.PERM_ID
, typ.NM AS perm_typ_nm
, typ.SRVC_NM
FROM KRIM_PERM_T p
INNER JOIN KRIM_PERM_TMPL_T t
ON p.PERM_TMPL_ID = t.PERM_TMPL_ID
LEFT OUTER JOIN KRIM_TYP_T typ
ON t.KIM_TYP_ID = typ.KIM_TYP_ID
/

-- -----------------------------------------------------------------------
-- KRIM_PRNCPL_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_PRNCPL_V AS 
SELECT
p.PRNCPL_ID
,p.PRNCPL_NM
,en.FIRST_NM
,en.LAST_NM
,ea.AFLTN_TYP_CD
,ea.CAMPUS_CD
,eei.EMP_STAT_CD
,eei.EMP_TYP_CD
FROM krim_prncpl_t p
LEFT OUTER JOIN krim_entity_emp_info_t eei
ON eei.ENTITY_ID = p.ENTITY_ID
LEFT OUTER JOIN krim_entity_afltn_t ea
ON ea.ENTITY_ID = p.ENTITY_ID
LEFT OUTER JOIN krim_entity_nm_t en
ON p.ENTITY_ID = en.ENTITY_ID
AND 'Y' = en.DFLT_IND
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_GRP_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_GRP_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.role_id
, g.NMSPC_CD AS grp_nmspc_cd
, g.GRP_NM
, rm.ROLE_MBR_ID
, a.NM AS attr_nm
, d.ATTR_VAL AS attr_val
FROM KRIM_ROLE_MBR_T rm
LEFT JOIN KRIM_ROLE_T r
ON r.ROLE_ID = rm.ROLE_ID
LEFT JOIN KRIM_GRP_T g
ON g.GRP_ID = rm.MBR_ID
LEFT OUTER JOIN KRIM_ROLE_MBR_ATTR_DATA_T d
ON d.role_mbr_id = rm.ROLE_MBR_ID
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON a.KIM_ATTR_DEFN_ID = d.KIM_ATTR_DEFN_ID
WHERE rm.MBR_TYP_CD = 'G'
ORDER BY nmspc_cd, role_nm, grp_nmspc_cd, grp_nm, role_mbr_id, attr_nm
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_PERM_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_PERM_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.role_id
, pt.NMSPC_CD AS tmpl_nmspc_cd
, pt.NM AS tmpl_nm
, pt.PERM_TMPL_ID
, p.NMSPC_CD AS perm_nmpsc_cd
, p.NM AS perm_nm
, p.PERM_ID
, a.NM AS attr_nm
, ad.ATTR_VAL AS attr_val
FROM KRIM_PERM_T p
LEFT JOIN KRIM_PERM_TMPL_T pt
ON p.PERM_TMPL_ID = pt.PERM_TMPL_ID
LEFT OUTER JOIN KRIM_PERM_ATTR_DATA_T ad
ON p.PERM_ID = ad.perm_id
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON ad.KIM_ATTR_DEFN_ID = a.KIM_ATTR_DEFN_ID
LEFT OUTER JOIN KRIM_ROLE_PERM_T rp
ON rp.PERM_ID = p.PERM_ID
LEFT OUTER JOIN KRIM_ROLE_T r
ON rp.ROLE_ID = r.ROLE_ID
ORDER BY NMSPC_CD, role_nm, tmpl_nmspc_cd, tmpl_nm, perm_id, attr_nm
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_PRNCPL_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_PRNCPL_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.ROLE_ID
, p.PRNCPL_NM
, p.PRNCPL_ID
, en.FIRST_NM
, en.LAST_NM
, rm.ROLE_MBR_ID
, ad.NM AS attr_nm
, rmad.ATTR_VAL AS attr_val
FROM KRIM_ROLE_T r
LEFT OUTER JOIN KRIM_ROLE_MBR_T rm
ON r.ROLE_ID = rm.ROLE_ID
LEFT OUTER JOIN KRIM_ROLE_MBR_ATTR_DATA_T rmad
ON rm.ROLE_MBR_ID = rmad.role_mbr_id
LEFT OUTER JOIN KRIM_ATTR_DEFN_T ad
ON rmad.KIM_ATTR_DEFN_ID = ad.KIM_ATTR_DEFN_ID
LEFT OUTER JOIN KRIM_PRNCPL_T p
ON rm.MBR_ID = p.PRNCPL_ID
AND rm.mbr_typ_cd = 'P'
LEFT OUTER JOIN KRIM_ENTITY_NM_T en
ON p.ENTITY_ID = en.ENTITY_ID
WHERE (en.DFLT_IND = 'Y')
ORDER BY nmspc_cd, role_nm, prncpl_nm, rm.ROLE_MBR_ID, attr_nm
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_ROLE_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_ROLE_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.role_id
, mr.NMSPC_CD AS mbr_role_nmspc_cd
, mr.role_NM AS mbr_role_nm
, mr.role_id AS mbr_role_id
, rm.role_mbr_id
, a.NM AS attr_nm
, d.ATTR_VAL AS attr_val
FROM KRIM_ROLE_MBR_T rm
LEFT JOIN KRIM_ROLE_T r
ON r.ROLE_ID = rm.ROLE_ID
LEFT JOIN KRIM_role_T mr
ON mr.role_ID = rm.MBR_ID
LEFT OUTER JOIN KRIM_ROLE_MBR_ATTR_DATA_T d
ON d.role_mbr_id = rm.ROLE_MBR_ID
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON a.KIM_ATTR_DEFN_ID = d.KIM_ATTR_DEFN_ID
WHERE rm.MBR_TYP_CD = 'R'
ORDER BY nmspc_cd, role_nm, mbr_role_nmspc_cd, mbr_role_nm, role_mbr_id, attr_nm
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.ROLE_ID
, t.nm AS role_typ_nm
, t.SRVC_NM
, t.KIM_TYP_ID
FROM KRIM_ROLE_T r
, KRIM_TYP_T t
WHERE t.KIM_TYP_ID = r.KIM_TYP_ID
AND r.ACTV_IND = 'Y'
ORDER BY nmspc_cd
, role_nm
/

-- -----------------------------------------------------------------------
-- KRIM_RSP_ATTR_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_RSP_ATTR_V AS 
SELECT
krim_typ_t.NM AS responsibility_type_name
, KRIM_rsp_TMPL_T.NM AS rsp_TEMPLATE_NAME
, KRIM_rsp_T.nmspc_cd AS rsp_namespace_code
, KRIM_rsp_T.NM AS rsp_NAME
, krim_rsp_t.RSP_ID AS rsp_id
, KRIM_ATTR_DEFN_T.NM AS attribute_name
, KRIM_rsp_ATTR_DATA_T.ATTR_VAL AS attribute_value
FROM KRIM_rsp_T KRIM_rsp_T
INNER JOIN KRIM_rsp_ATTR_DATA_T KRIM_rsp_ATTR_DATA_T
ON KRIM_rsp_T.rsp_ID = KRIM_rsp_ATTR_DATA_T.rsp_id
INNER JOIN KRIM_ATTR_DEFN_T KRIM_ATTR_DEFN_T
ON KRIM_rsp_ATTR_DATA_T.KIM_ATTR_DEFN_ID = KRIM_ATTR_DEFN_T.KIM_ATTR_DEFN_ID
INNER JOIN KRIM_rsp_TMPL_T KRIM_rsp_TMPL_T
ON KRIM_rsp_T.rsp_TMPL_ID = KRIM_rsp_TMPL_T.rsp_TMPL_ID
INNER JOIN KRIM_TYP_T KRIM_TYP_T
ON KRIM_rsp_TMPL_T.KIM_TYP_ID = KRIM_TYP_T.KIM_TYP_ID
ORDER BY rsp_TEMPLATE_NAME, rsp_NAME, attribute_name
/

-- -----------------------------------------------------------------------
-- KRIM_RSP_ROLE_ACTN_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_RSP_ROLE_ACTN_V AS 
select
rsp.nmspc_cd as rsp_nmspc_cd
, rsp.rsp_id
, r.NMSPC_CD
, r.ROLE_NM
, rr.ROLE_ID
, rm.MBR_ID
, rm.MBR_TYP_CD
, rm.ROLE_MBR_ID
, actn.ACTN_TYP_CD
, actn.ACTN_PLCY_CD
, actn.FRC_ACTN
, actn.PRIORITY_NBR
from krim_rsp_t rsp
left join krim_rsp_tmpl_t rspt
on rsp.rsp_tmpl_id = rspt.rsp_tmpl_id
left outer join krim_role_rsp_t rr
on rr.rsp_id = rsp.rsp_id
left outer join KRIM_ROLE_MBR_T rm
ON rm.ROLE_ID = rr.ROLE_ID
left outer join KRIM_ROLE_RSP_ACTN_T actn
ON actn.ROLE_RSP_ID = rr.ROLE_RSP_ID
AND (actn.ROLE_MBR_ID = rm.ROLE_MBR_ID OR actn.ROLE_MBR_ID = '*')
left outer join krim_role_t r
on rr.role_id = r.role_id
order by rsp_nmspc_cd
, rsp_id
, role_id
, role_mbr_id
/

-- -----------------------------------------------------------------------
-- KRIM_RSP_ROLE_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_RSP_ROLE_V AS 
select
rspt.nmspc_cd as rsp_tmpl_nmspc_cd
, rspt.nm as rsp_tmpl_nm
, rsp.nmspc_cd as rsp_nmspc_cd
, rsp.nm as rsp_nm
, rsp.rsp_id
, a.nm as attr_nm
, d.attr_val
, r.NMSPC_CD
, r.ROLE_NM
, rr.ROLE_ID
from krim_rsp_t rsp
left join krim_rsp_tmpl_t rspt
on rsp.rsp_tmpl_id = rspt.rsp_tmpl_id
left outer join krim_rsp_attr_data_t d
on rsp.rsp_id = d.rsp_id
left outer join krim_attr_defn_t a
on d.kim_attr_defn_id = a.kim_attr_defn_id
left outer join krim_role_rsp_t rr
on rr.rsp_id = rsp.rsp_id
left outer join krim_role_t r
on rr.role_id = r.role_id
order by rsp_tmpl_nmspc_cd, rsp_tmpl_nm, rsp_nmspc_cd, rsp_nm, rsp_id, attr_nm, attr_val
/
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_CHNL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_CHNL_S'; END IF;
END;
/

CREATE SEQUENCE KREN_CHNL_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_CHNL_SUBSCRP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_CHNL_SUBSCRP_S'; END IF;
END;
/

CREATE SEQUENCE KREN_CHNL_SUBSCRP_S INCREMENT BY 1 START WITH 1020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_CNTNT_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_CNTNT_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KREN_CNTNT_TYP_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_MSG_DELIV_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_MSG_DELIV_S'; END IF;
END;
/

CREATE SEQUENCE KREN_MSG_DELIV_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_MSG_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_MSG_S'; END IF;
END;
/

CREATE SEQUENCE KREN_MSG_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_NTFCTN_MSG_DELIV_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_NTFCTN_MSG_DELIV_S'; END IF;
END;
/

CREATE SEQUENCE KREN_NTFCTN_MSG_DELIV_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_NTFCTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_NTFCTN_S'; END IF;
END;
/

CREATE SEQUENCE KREN_NTFCTN_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_PRIO_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_PRIO_S'; END IF;
END;
/

CREATE SEQUENCE KREN_PRIO_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_PRODCR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_PRODCR_S'; END IF;
END;
/

CREATE SEQUENCE KREN_PRODCR_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_DELIV_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_DELIV_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_DELIV_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_LIST_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_LIST_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_LIST_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_PREF_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_PREF_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_PREF_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RVWER_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RVWER_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RVWER_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_SNDR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_SNDR_S'; END IF;
END;
/

CREATE SEQUENCE KREN_SNDR_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_ITM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_ITM_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_ITM_S INCREMENT BY 1 START WITH 10231 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_LIST_OPTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_LIST_OPTN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_LIST_OPTN_S INCREMENT BY 1 START WITH 1269 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_RQST_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_RQST_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_RQST_S INCREMENT BY 1 START WITH 2374 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_TKN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_TKN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_TKN_S INCREMENT BY 1 START WITH 2334 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ATTR_DEFN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ATTR_DEFN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ATTR_DEFN_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_HDR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_HDR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_HDR_S INCREMENT BY 1 START WITH 3015 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_LNK_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_LNK_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_LNK_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_NTE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_NTE_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_NTE_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_TYP_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_TYP_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_TYP_ATTR_S INCREMENT BY 1 START WITH 2010 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_EDL_FLD_DMP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_EDL_FLD_DMP_S'; END IF;
END;
/

CREATE SEQUENCE KREW_EDL_FLD_DMP_S INCREMENT BY 1 START WITH 5000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_EDL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_EDL_S'; END IF;
END;
/

CREATE SEQUENCE KREW_EDL_S INCREMENT BY 1 START WITH 2022 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_OUT_BOX_ITM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_OUT_BOX_ITM_S'; END IF;
END;
/

CREATE SEQUENCE KREW_OUT_BOX_ITM_S INCREMENT BY 1 START WITH 10043 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_PPL_FLW_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_PPL_FLW_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_PPL_FLW_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_PPL_FLW_DLGT_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_PPL_FLW_DLGT_S'; END IF;
END;
/

CREATE SEQUENCE KREW_PPL_FLW_DLGT_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_PPL_FLW_MBR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_PPL_FLW_MBR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_PPL_FLW_MBR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_PPL_FLW_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_PPL_FLW_S'; END IF;
END;
/

CREATE SEQUENCE KREW_PPL_FLW_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RSP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RSP_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RSP_S INCREMENT BY 1 START WITH 2065 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RTE_NODE_CFG_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RTE_NODE_CFG_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RTE_NODE_CFG_PARM_S INCREMENT BY 1 START WITH 2485 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RTE_NODE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RTE_NODE_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RTE_NODE_S INCREMENT BY 1 START WITH 3017 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RTE_TMPL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RTE_TMPL_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RTE_TMPL_S INCREMENT BY 1 START WITH 1645 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RULE_EXPR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RULE_EXPR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RULE_EXPR_S INCREMENT BY 1 START WITH 2002 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RULE_TMPL_OPTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RULE_TMPL_OPTN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RULE_TMPL_OPTN_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_SRCH_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_SRCH_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_SRCH_ATTR_S INCREMENT BY 1 START WITH 2078 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_TYP_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_TYP_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_TYP_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KREW_TYP_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_USR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_USR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_USR_S INCREMENT BY 1 START WITH 100000000000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ATTR_DATA_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ATTR_DATA_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ATTR_DATA_ID_S INCREMENT BY 1 START WITH 10261 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ATTR_DEFN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ATTR_DEFN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ATTR_DEFN_ID_S INCREMENT BY 1 START WITH 10013 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_DLGN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_DLGN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_DLGN_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_DLGN_MBR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_DLGN_MBR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_DLGN_MBR_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_ADDR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_ADDR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_ADDR_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_AFLTN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_AFLTN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_AFLTN_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_CTZNSHP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_CTZNSHP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_CTZNSHP_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_EMAIL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_EMAIL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_EMAIL_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_EMP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_EMP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_EMP_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_ETHNIC_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_ETHNIC_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_ETHNIC_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_EXT_ID_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_EXT_ID_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_EXT_ID_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_NM_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_NM_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_NM_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_PHONE_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_PHONE_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_PHONE_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_RESIDENCY_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_RESIDENCY_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_RESIDENCY_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_VISA_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_VISA_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_VISA_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_GRP_ATTR_DATA_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_GRP_ATTR_DATA_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_GRP_ATTR_DATA_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_GRP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_GRP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_GRP_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_GRP_MBR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_GRP_MBR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_GRP_MBR_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PERM_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PERM_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PERM_ID_S INCREMENT BY 1 START WITH 10143 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PERM_RQRD_ATTR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PERM_RQRD_ATTR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PERM_RQRD_ATTR_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PERM_TMPL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PERM_TMPL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PERM_TMPL_ID_S INCREMENT BY 1 START WITH 10021 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PRNCPL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PRNCPL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PRNCPL_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_ID_S INCREMENT BY 1 START WITH 10036 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_MBR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_MBR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_MBR_ID_S INCREMENT BY 1 START WITH 10042 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_PERM_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_PERM_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_PERM_ID_S INCREMENT BY 1 START WITH 1253 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_RSP_ACTN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_RSP_ACTN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_RSP_ACTN_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_RSP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_RSP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_RSP_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_RSP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_RSP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_RSP_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_RSP_RQRD_ATTR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_RSP_RQRD_ATTR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_RSP_RQRD_ATTR_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_RSP_TMPL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_RSP_TMPL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_RSP_TMPL_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_TYP_ATTR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_TYP_ATTR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_TYP_ATTR_ID_S INCREMENT BY 1 START WITH 10037 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_TYP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_TYP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_TYP_ID_S INCREMENT BY 1 START WITH 10028 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_ACTN_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_ACTN_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_ACTN_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_ACTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_ACTN_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_ACTN_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_AGENDA_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_AGENDA_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_AGENDA_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_AGENDA_ITM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_AGENDA_ITM_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_AGENDA_ITM_S INCREMENT BY 1 START WITH 10149 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_AGENDA_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_AGENDA_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_AGENDA_S INCREMENT BY 1 START WITH 10143 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_ATTR_DEFN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_ATTR_DEFN_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_ATTR_DEFN_S INCREMENT BY 1 START WITH 1007 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CMPND_PROP_PROPS_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CMPND_PROP_PROPS_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CMPND_PROP_PROPS_S INCREMENT BY 1 START WITH 10252 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_S INCREMENT BY 1 START WITH 10002 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_VLD_ACTN_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_VLD_ACTN_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_VLD_ACTN_TYP_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_VLD_AGENDA_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_VLD_AGENDA_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_VLD_AGENDA_TYP_S INCREMENT BY 1 START WITH 10004 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_VLD_FUNC_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_VLD_FUNC_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_VLD_FUNC_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_VLD_RULE_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_VLD_RULE_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_VLD_RULE_TYP_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CNTXT_VLD_TERM_SPEC_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CNTXT_VLD_TERM_SPEC_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CNTXT_VLD_TERM_SPEC_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_CTGRY_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_CTGRY_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_CTGRY_S INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_FUNC_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_FUNC_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_FUNC_PARM_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_FUNC_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_FUNC_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_FUNC_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_NL_TMPL_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_NL_TMPL_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_NL_TMPL_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_NL_TMPL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_NL_TMPL_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_NL_TMPL_S INCREMENT BY 1 START WITH 10409 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_NL_USAGE_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_NL_USAGE_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_NL_USAGE_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_NL_USAGE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_NL_USAGE_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_NL_USAGE_S INCREMENT BY 1 START WITH 10007 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_PROP_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_PROP_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_PROP_PARM_S INCREMENT BY 1 START WITH 10601 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_PROP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_PROP_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_PROP_S INCREMENT BY 1 START WITH 10254 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_REF_OBJ_KRMS_OBJ_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_REF_OBJ_KRMS_OBJ_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_REF_OBJ_KRMS_OBJ_S INCREMENT BY 1 START WITH 10143 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_RULE_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_RULE_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_RULE_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_RULE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_RULE_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_RULE_S INCREMENT BY 1 START WITH 10149 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_PARM_S INCREMENT BY 1 START WITH 10214 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_RSLVR_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_RSLVR_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_RSLVR_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_RSLVR_INPUT_SPEC_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_RSLVR_INPUT_SPEC_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_RSLVR_INPUT_SPEC_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_RSLVR_PARM_SPEC_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_RSLVR_PARM_SPEC_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_RSLVR_PARM_SPEC_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_RSLVR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_RSLVR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_RSLVR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_S INCREMENT BY 1 START WITH 10201 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TERM_SPEC_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TERM_SPEC_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TERM_SPEC_S INCREMENT BY 1 START WITH 10014 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TYP_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TYP_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TYP_ATTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TYP_RELN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TYP_RELN_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TYP_RELN_S INCREMENT BY 1 START WITH 10119 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRMS_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRMS_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KRMS_TYP_S INCREMENT BY 1 START WITH 10078 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_DOC_TYP_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_DOC_TYP_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_DOC_TYP_ATTR_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_LOCK_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_LOCK_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_LOCK_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_LOOKUP_RSLT_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_LOOKUP_RSLT_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_LOOKUP_RSLT_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_MAINT_DOC_ATT_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_MAINT_DOC_ATT_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_MAINT_DOC_ATT_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_MAINT_LOCK_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_MAINT_LOCK_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_MAINT_LOCK_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_NTE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_NTE_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_NTE_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_BAM_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_BAM_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_BAM_PARM_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_BAM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_BAM_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_BAM_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_MSG_QUE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_MSG_QUE_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_MSG_QUE_S INCREMENT BY 1 START WITH 467 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_SVC_DEF_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_SVC_DEF_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_SVC_DEF_S INCREMENT BY 1 START WITH 10105 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_SVC_DSCRPTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_SVC_DSCRPTR_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_SVC_DSCRPTR_S INCREMENT BY 1 START WITH 10105 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

