ksTestMessage=Test Message
# Population error messages
error.enroll.population.nameIsNotUnique = Population Name {0} is already in use. Please enter a different, unique population name.
error.enroll.population.needTwoDifferentPopulations = For {0} operation, must select at least 2 different populations.
error.enroll.population.needAtLeastOnePopulations =   For {0} operation, must select at least one population.
error.enroll.population.refNotAllowedInSourcePopulations =   For {0} operation, the reference population must not be in the source population(s).
error.enroll.population.PopulationNotFound = Population {0} is inactive or not found in the database.

# CourseOffering error messages
enroll.registrationSuccessful=Registration Successful
enroll.registrationUnsuccessful=There was a problem with your registration.  Please see errors
error.enroll.courseoffering.courseOfferingCode.notExists =The Course Code does not exist.
error.enroll.courseoffering.instructors.notExists =The instructor does not exit.
error.enroll.requirementsNotMet=You do not meet the minimum requirements for this course: {0}
error.courseoffering.targetTerm.inValid=Target Term invalid.
error.courseoffering.sourceTerm.inValid=Source Term invalid.
error.likeTerms.validation=Source and Target terms should be "like" terms.
error.years.validation = Source term year should be less than Target term year.
error.submit.sourceTerm = Please submit Target term before submitting Source term.
# Rollover management errors
error.rollover.sourceTerm.noSoc=Missing or multiple SocInfo in source term.  Can't rollover without it.
error.rollover.targetTerm.noResults=The term, {0}, does not have any rollover information.
error.rollover.invalidTerm=This term does not exist in the system.
error.delete.targetTerm.noSoc=Missing main SocInfo in target term.  Can't delete without it.
error.delete.targetTerm.notDraftSoc=Target term SocInfo is not in draft state.  Can't delete this term.
error.courseoffering.rollover.targetTermExists = The term you've selected already has course offering data rolled into it.
error.rollover.release.notApproved=You must check the box before you can release to departments.
error.courseoffering.selected.AO.delete.confirmation = Only Activity Offerings in a Draft, Approved, or Scheduled state were deleted.
error.courseoffering.no.selected.AO = No Draft, Approved, or Scheduled Activity Offering selected.
error.courseoffering.selected.aos.notdraft=Only Activity Offerings in a Draft, Approved, or Scheduled state may be deleted.
error.courseoffering.selected.aos.none=No Activity Offerings were selected to be processed.
error.courseoffering.selected.none=No Course Offerings were selected to be processed.
error.courseoffering.aodraftonlyapproved=Only Course Offerings with Activity Offerings that were in Draft state were Approved for Scheduling.
error.courseoffering.aoorgonlyapproved=Only Course Offerings in the User Organization were Approved for Scheduling.
error.courseoffering.noCOsApproved=Only Course Offerings with Activity Offerings that are in a Draft state may be Approved For Scheduling.
error.courseoffering.manage_aos.approve_for_scheduling.no_aos_updated=Only Activity Offerings that are in a Draft state may be Approved for Scheduling.
error.courseoffering.manage_aos.approve_for_scheduling.some_aos_updated=Only Activity Offerings that were in a Draft state were Approved for Scheduling.
error.courseoffering.manage_aos.set_to_draft.no_aos_updated=Only Activity Offerings that are in an Approved state may be set to Draft state.
error.courseoffering.manage_aos.set_to_draft.some_aos_updated=Only Activity Offerings that were in an Approved state were set to Draft state.

#Course Offering Create
error.courseoffering.create.deliveryformat.required=Delivery formats are required to create a Course Offering.

# Diagnose rollover errors (EC1 Sandbox)
error.diagnose.rolloverco.coInTargetTerm=Course offering, {0}, appears in target term, {1}--can't rollover
error.diagnose.rolloverco.coNotInSourceTerm=Course offering, {0}, doesn't appears in source term, {1}--can't rollover
error.diagnose.rolloverco.sourceTermInvalid=Source term, {0}, doesn't exist
error.diagnose.rolloverco.targetTermInvalid=Target term, {0}, doesn't exist

# Manage Course Offerings error messages
error.enroll.courseoffering.delete.invalid.state=Only Course Offerings in a Draft or Planned state may be deleted.
error.enroll.courseoffering.delete.invalid.ao.state=Course Offering cannot be deleted because it contains an Activity Offering in an invalid state for deleting.
error.enroll.courseoffering.noTermIsFound = Can not find any term for the term code: {0}.
error.enroll.courseoffering.findMoreThanOneTerm =  Find more than one terms for the term code: {0}.
error.enroll.courseoffering.noCourseOfferingIsFound = Cannot find any course offering for the {0} code: ({1}) in the specified term: ({2}).
error.enroll.courseoffering.findMoreThanOneCourseOffering = Found more than one course offering for the course offering code: ({0}) in the specified term code: ({1}).
error.courseoffering.statechange=Error updating {0} state. Error -  {1}
error.courseOfferingManagementView.searchResultSection=You are not authorized to perform this search.
error.courseOfferingManagementView.ActivityOfferingResultSection=You are not authorized to perform this search.
error.createCourseOfferingPage.KS-CourseOffering-NewCourseOffering=You are not authorized to search course offerings in the selected term.

# Manage Course Offerings informational messages
info.enroll.courseoffering.copied.successful=Course offering {0} has been successfully created.
info.enroll.courseoffering.rollover.releaseToDepts.successful=Release to Departments Successful.

# Manage Registration Group error messages:
error.enroll.registrationgroup.missingreggroups = One or more registration groups are missing. Please press the Generate Registration Groups button to update the registration groups.
error.enroll.registrationgroup.invalidreggroups = One or more registration groups are invalid. Please press the Generate Registration Groups button to update the registration groups.

# Grading
info.enroll.grading.saved=Grade Roster has been successfully saved.
info.enroll.grading.submitted=Grade Roster has been successfully submitted.
info.enroll.grading.studentsNotFound=No student(s) registered for this course {0}.
info.enroll.grading.gradingOptionsnotFound=READONLY view as there are no grading options found for this course offering.
info.enroll.grading.courseOfferingNotFound=You are not registered in any course(s) to grade for the term {0}.

# Schedule of Classee error messages
error.enroll.scheduleofclasses.termIsEmpty = Term selection can not be empty.
error.enroll.scheduleofclasses.courseIsEmpty =  Course search field can not be empty.
error.enroll.scheduleofclasses.instructorIsEmpty = Instructor search field can not be empty.
error.enroll.scheduleofclasses.departmentIsEmpty = Department search field can not be empty.
error.enroll.scheduleofclasses.titleDescIsEmpty = Title and Description search field can not be empty.
error.enroll.scheduleofclasses.noCourseOfferingIsFound = Cannot find any course offering for the {0} ({1}) in the specified term ({2}).
error.enroll.scheduleofclasses.multipleDepartmentIsFound = There is more than one department with the same long name ({0}).
error.enroll.scheduleofclasses.multipleInstructorIsFound = There is more than one instructor with the same name ({0}).

# PDT starts here.... have to delete all the core slice

# Academic Calendar errors
error.enroll.acal.duplicate.hcal={0} already exists in the collection.
error.enroll.acal.no.hcal=No holiday calendar selected.
error.enroll.acal.save.failed=Unable to save or update academic calendar.
error.enroll.acal.term.save.failed=Unable to save associated term "{0}". {1}
error.enroll.acal.instructionaldays.calculation=Error calculating instructional days for the term {0} - {1}
# Academic Calendar information
info.enroll.academiccalendar.saved=Academic calendar "{0}" has been saved successfully.
info.enroll.academiccalendar.official=Academic calendar "{0}" has been made official.

# Appointment service errors
error.enroll.appointment.breakAppointmentsFailure = There was an error breaking appointments: "{0}".
error.enroll.appointment.tooManyStudents = Appointment Assignment failed, there were "{0}" students that did not fit in the allocated slots.
error.enroll.appointment.noTermsFound = No terms were found.
error.enroll.appointment.noRegPeriodsForTerm = The selected term has no registration periods.
error.enroll.appointment.windowSaveFailed=Failed to create a window.

error.enroll.appointment.endDate.requiredForUniform=Date is a required field and can't be null when Slot Allocation Method is Uniform.
error.enroll.appointment.endTime.requiredForUniform=Closing Time is a required field and can't be null when Slot Allocation Method is Uniform.
error.enroll.appointment.startDate.outOfRange=Window's start date is out of the date range of the select period.
error.enroll.appointment.endtDate.beforeStartDate=Window's end date cannot be before the start date.
error.enroll.appointment.endtTime.beforeStartTime=Window's end time cannot be before the start time.
error.enroll.appointment.startDate.required=Window's start date is a required field.
error.enroll.appointment.startTime.required=Window's start time is a required field.
error.enroll.appointment.startTimeAmPm.required=Window's start time AmPm is a required field.
error.enroll.appointment.endTimeAmPm.beforeStartTimeAmPm=Window's end time AmPm cannot be before the start time AmPm.
error.enroll.appointment.duplicateWindowName.forPeriod=Window`s name cannot be duplicated within the same period.
error.enroll.appointment.endDate.outOfRange=Window's end date is out of the date range of the select period.
error.enroll.appointment.window.endDateBeforeStartDate= Window's end date is before the start date.

# Appointment service information
info.enroll.appointment.assigned= Appointment Window "{0}" has been assigned "{1}" student(s) in "{2}" slots.
info.enroll.appointment.breakAppointmentsSuccess = Appointments were successfully broken.
info.enroll.appointment.saved = Appointment Windows have been saved successfully.
info.enroll.appointment.windowDeleted = Appointment Window "{0}" was deleted successfully.

# General calendar errors
error.enroll.calendar.duplicateName=Duplicate calendar name.
error.enroll.date.invalid=Invalid date {0}
error.enroll.date.end.required="{0}" is a date range and an end date is required.
error.enroll.daterange.invalid="{0}" has invalid date range {1} - {2}.
error.enroll.time.invalid=Invalid time "{0}".
error.enroll.time.start.ampm.required=A start time was entered for "{0}" and am/pm is required.
error.enroll.time.end.ampm.required=An end time was entered for "{0}" and am/pm is required.

# General calendar information

# Event errors
error.enroll.event.dateNotInAcal={0} doesn't fall within academic calendar dates.
# Event information

# Holiday Calendar errors
error.enroll.holiday.dateNotInHcal={0} doesn't fall within holiday calendar dates.
error.enroll.holiday.duplicate=The holiday "{0}" is already in the collection.
error.enroll.holiday.invalidDates=The start date should not be later than the end date.
error.enroll.holidaycalendar.invalidDates=Holiday calendar "{0}" start date should not be later than the end date.
# Holiday Calendar information
info.enroll.holidaycalendar.saved=Holiday calendar "{0}" has been saved successfully.
info.enroll.holidaycalendar.official=Holiday calendar "{0}" has been made official.

# Keydate errors
error.enroll.keydategroup.type.empty=Key Date Group Type should not be empty
error.enroll.keydate.type.empty=Key Date Type should not be empty
error.enroll.keydate.dateNotInTerm={0} doesn't fall within {1} dates.
error.enroll.keydate.endDate.empty=End date should not be empty for {0}
error.enroll.keydate.time.empty=Start/End time should not be empty for {0}
# Keydate information

# Term errors
error.enroll.term.dateNotInAcal={0} doesn't fall within Acal dates.
error.enroll.term.duplicateName=Duplicate names in terms {0} and {1}.
error.enroll.term.nokeydates=Term "{0}" doesn't have key dates to make it official.
# Term information
info.enroll.term.official=Term "{0}" has been made official.
info.enroll.term.saved=Term "{0}" has been saved successfully.

# General information
info.enroll.search.delete.success="{0}" has been successfully deleted.
error.enroll.search.delete.failed=Error deleting {0} - {1}
info.enroll.save.success=Save Successful

#ActivityOffering
error.enroll.ao.instructor.notfound=Instructor {0} is not found in the database
error.enroll.ao.instructor.overflow=effort total can NOT be more than 100%
error.enroll.ao.instructor.duplicate=Instructor {0} is already added
error.enroll.ao.seatpool.duplicate=Seat Pool for population '{0}' is already added
error.enroll.ao.starttime.invalid=Start Time must be prior to End Time!

validation.validChars.integer={0} is not a valid integer
validation.validChars.positive.integer={0} is not a valid, non-zero positive integer
validation.enroll.ao.scheduleValidChars=Valid chars: MTWHFSU (or lower case letters)

#Manage Registration Groups
error.enroll.rg.invalid.cluster = Registration groups could not be created. This cluster must contain at least one activity from each of those associated with this Format.
error.enroll.rg.invalid.cluster.name = The cluster private name is already in use.  Choose another private name.
error.enroll.rg.invalid.aolist = Registration groups could not be created. The unassigned activity offering list must contain at least one activity from each of those associated with this Format.
error.enroll.rg.invalid.aocselection = Invalid cluster selection.
error.enroll.rg.invalid.aoselection = Invalid offering selection.
error.enroll.rg.max.enrollment=The sums of maximum enrollment seats for each activity offering type are not equal.
error.enroll.rg.ao.timeconflict= One or more registration groups in the cluster '{0}' are invalid due to scheduling conflicts.
error.enroll.rg.cluster.private.name.is.null= The Private Name field can not be empty.
#Process
 error.enroll.process.save.failed=Unable to save Process, Process Name already exists.

#toolbar action messages
info.enroll.activityoffering.toolbar.delete=Only Activity Offerings in a Draft or Approved State were Deleted.
info.enroll.activityoffering.toolbar.draft=Only Activity Offerings in a Approved State were Set as Draft.
info.enroll.activityoffering.toolbar.approved=Only Activity Offerings in a Draft State were Approved.
info.enroll.courseoffering.toolbar.delete=Only Course Offerings in a Draft, Planned, Canceled, or Suspended State were Deleted.
info.enroll.courseoffering.toolbar.approved=Only Course Offerings with Activity Offerings in a Draft State were Planned.
info.enroll.courseoffering.toolbar.add.success=The Course Offering was successfully added.
info.enroll.activityoffering.toolbar.add.success=Activity offerings were successfully added.
info.enroll.activityoffering.toolbar.delete.n.success=The selected activity offerings were successfully deleted.
info.enroll.activityoffering.toolbar.draft.n.success=The state of the selected activity offerings were successfully set to draft.
info.enroll.activityoffering.toolbar.approved.n.success=The selected activity offerings were successfully approved.
info.enroll.courseoffering.toolbar.delete.n.success=The selected course offerings were successfully deleted.
info.enroll.courseoffering.toolbar.approved.n.success=The selected course offerings were successfully approved.
info.enroll.activityoffering.toolbar.add.1.success=The Activity Offering was successfully added.
info.enroll.activityoffering.toolbar.delete.1.success=The selected activity offering was successfully deleted.
info.enroll.activityoffering.toolbar.draft.1.success=The state of the selected activity offering was successfully set to draft.
info.enroll.activityoffering.toolbar.approved.1.success=The selected activity offering was successfully approved.
info.enroll.courseoffering.toolbar.delete.1.success=The selected course offering was successfully deleted.
info.enroll.courseoffering.toolbar.approved.1.success=The selected course offering was successfully approved.

# Kitchen Sink properties
kitchensink.addLine=New collection line saved to database.
kitchensink.deleteLine=Existing collection line #{0} deleted from database.
kitchensink.saveForm=Form saved to database.
kitchensink.saveLine=Existing collection line #{0} saved to database.
kitchensink.custom={0}

#Manage SOC  (Please maintain the same order - info,error,warn)
info.managesoc.locked=Set of Courses has been Locked.
info.managesoc.finaledit=Set of Courses has been opened for Final Edits.
info.managesoc.closed=Set of Courses has been closed.
info.managesoc.send.to.scheduler=Approved activities were successfully sent to Scheduler.

error.mangesoc.soc.notexits=SOC does not exist for this term.
error.mangesoc.multiple.soc=Should not have multiple SOCs for a term (Not yet implemented departmental SOC).
error.managesoc.statuschange.failed=SOC status change fails - {0}
error.managesoc.send.to.scheduler.failed=Error locking SOC - {0}
error.managesoc.invalid.status.for.lock=SOC should be in open state to lock.
error.managesoc.invalid.status.for.schedule=SOC should be in LOCKED state.
error.managesoc.multiple.terms=Multiple entries found for the term code.
error.managesoc.term.not.found=Term not found.
error.managesoc.invalid.status.for.finaledit=SOC scheduling should be completed for final edits.
error.managesoc.invalid.status.for.publish=SOC should be at Final Edit for publish.
error.managesoc.invalid.status.for.close=SOC should be at Publish state to close.
